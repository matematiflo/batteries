{"name":"Lean.Compiler.Specialize","instances":[{"typeNames":["Lean.Compiler.SpecializeAttributeKind"],"name":"Lean.Compiler.instInhabitedSpecializeAttributeKind","className":"Inhabited"},{"typeNames":["Lean.Compiler.SpecializeAttributeKind"],"name":"Lean.Compiler.instBEqSpecializeAttributeKind","className":"BEq"},{"typeNames":["Lean.Compiler.SpecArgKind"],"name":"Lean.Compiler.instInhabitedSpecArgKind","className":"Inhabited"},{"typeNames":["Lean.Compiler.SpecInfo"],"name":"Lean.Compiler.instInhabitedSpecInfo","className":"Inhabited"},{"typeNames":["Lean.Compiler.SpecState"],"name":"Lean.Compiler.instInhabitedSpecState","className":"Inhabited"},{"typeNames":["Lean.Compiler.SpecEntry"],"name":"Lean.Compiler.instInhabitedSpecEntry","className":"Inhabited"}],"imports":["Lean.Meta.Basic","Lean.Attributes"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Compiler/Specialize.lean#L149-L151","name":"Lean.Compiler.getCachedSpecialization","line":149,"kind":"def","docLink":"./Lean/Compiler/Specialize.html#Lean.Compiler.getCachedSpecialization","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/Specialize.html#Lean.Compiler.getCachedSpecialization\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">getCachedSpecialization</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Compiler/Specialize.lean#L145-L147","name":"Lean.Compiler.cacheSpecialization","line":145,"kind":"def","docLink":"./Lean/Compiler/Specialize.html#Lean.Compiler.cacheSpecialization","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/Specialize.html#Lean.Compiler.cacheSpecialization\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">cacheSpecialization</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fn</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Compiler/Specialize.lean#L141-L143","name":"Lean.Compiler.getSpecializationInfo","line":141,"kind":"def","docLink":"./Lean/Compiler/Specialize.html#Lean.Compiler.getSpecializationInfo","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/Specialize.html#Lean.Compiler.getSpecializationInfo\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">getSpecializationInfo</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fn</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Compiler/Specialize.html#Lean.Compiler.SpecInfo\">SpecInfo</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Compiler/Specialize.lean#L137-L139","name":"Lean.Compiler.addSpecializationInfo","line":137,"kind":"def","docLink":"./Lean/Compiler/Specialize.html#Lean.Compiler.addSpecializationInfo","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/Specialize.html#Lean.Compiler.addSpecializationInfo\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">addSpecializationInfo</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fn</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">info</span> : <a href=\"./Lean/Compiler/Specialize.html#Lean.Compiler.SpecInfo\">SpecInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Compiler/Specialize.lean#L127-L135","name":"Lean.Compiler.specExtension","line":127,"kind":"opaque","docLink":"./Lean/Compiler/Specialize.html#Lean.Compiler.specExtension","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/Specialize.html#Lean.Compiler.specExtension\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">specExtension</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/EnvExtension.html#Lean.SimplePersistentEnvExtension\">SimplePersistentEnvExtension</a> <a href=\"./Lean/Compiler/Specialize.html#Lean.Compiler.SpecEntry\">SpecEntry</a> <a href=\"./Lean/Compiler/Specialize.html#Lean.Compiler.SpecState\">SpecState</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Compiler/Specialize.lean#L122-L123","name":"Lean.Compiler.SpecState.switch","line":122,"kind":"def","docLink":"./Lean/Compiler/Specialize.html#Lean.Compiler.SpecState.switch","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/Specialize.html#Lean.Compiler.SpecState.switch\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">SpecState</span>.<span class=\"name\">switch</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/Specialize.html#Lean.Compiler.SpecState\">SpecState</a> â†’ <a href=\"./Lean/Compiler/Specialize.html#Lean.Compiler.SpecState\">SpecState</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Compiler/Specialize.lean#L117-L120","name":"Lean.Compiler.SpecState.addEntry","line":117,"kind":"def","docLink":"./Lean/Compiler/Specialize.html#Lean.Compiler.SpecState.addEntry","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/Specialize.html#Lean.Compiler.SpecState.addEntry\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">SpecState</span>.<span class=\"name\">addEntry</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Lean/Compiler/Specialize.html#Lean.Compiler.SpecState\">SpecState</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Compiler/Specialize.html#Lean.Compiler.SpecEntry\">SpecEntry</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/Specialize.html#Lean.Compiler.SpecState\">SpecState</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Compiler/Specialize.lean#L113-L113","name":"Lean.Compiler.instInhabitedSpecEntry","line":113,"kind":"instance","docLink":"./Lean/Compiler/Specialize.html#Lean.Compiler.instInhabitedSpecEntry","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/Specialize.html#Lean.Compiler.instInhabitedSpecEntry\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">instInhabitedSpecEntry</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Compiler/Specialize.html#Lean.Compiler.SpecEntry\">SpecEntry</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Compiler/Specialize.lean#L112-L112","name":"Lean.Compiler.SpecEntry.cache","line":112,"kind":"ctor","docLink":"./Lean/Compiler/Specialize.html#Lean.Compiler.SpecEntry.cache","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/Specialize.html#Lean.Compiler.SpecEntry.cache\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">SpecEntry</span>.<span class=\"name\">cache</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">key</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fn</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/Specialize.html#Lean.Compiler.SpecEntry\">SpecEntry</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Compiler/Specialize.lean#L111-L111","name":"Lean.Compiler.SpecEntry.info","line":111,"kind":"ctor","docLink":"./Lean/Compiler/Specialize.html#Lean.Compiler.SpecEntry.info","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/Specialize.html#Lean.Compiler.SpecEntry.info\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">SpecEntry</span>.<span class=\"name\">info</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">info</span> : <a href=\"./Lean/Compiler/Specialize.html#Lean.Compiler.SpecInfo\">SpecInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/Specialize.html#Lean.Compiler.SpecEntry\">SpecEntry</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Compiler/Specialize.lean#L110-L113","name":"Lean.Compiler.SpecEntry","line":110,"kind":"inductive","docLink":"./Lean/Compiler/Specialize.html#Lean.Compiler.SpecEntry","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/Specialize.html#Lean.Compiler.SpecEntry\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">SpecEntry</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Compiler/Specialize.lean#L108-L108","name":"Lean.Compiler.instInhabitedSpecState","line":108,"kind":"instance","docLink":"./Lean/Compiler/Specialize.html#Lean.Compiler.instInhabitedSpecState","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/Specialize.html#Lean.Compiler.instInhabitedSpecState\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">instInhabitedSpecState</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Compiler/Specialize.html#Lean.Compiler.SpecState\">SpecState</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Compiler/Specialize.lean#L107-L107","name":"Lean.Compiler.SpecState.cache","line":107,"kind":"def","docLink":"./Lean/Compiler/Specialize.html#Lean.Compiler.SpecState.cache","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/Specialize.html#Lean.Compiler.SpecState.cache\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">SpecState</span>.<span class=\"name\">cache</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Compiler/Specialize.html#Lean.Compiler.SpecState\">SpecState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/SMap.html#Lean.SMap\">SMap</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Compiler/Specialize.lean#L106-L106","name":"Lean.Compiler.SpecState.specInfo","line":106,"kind":"def","docLink":"./Lean/Compiler/Specialize.html#Lean.Compiler.SpecState.specInfo","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/Specialize.html#Lean.Compiler.SpecState.specInfo\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">SpecState</span>.<span class=\"name\">specInfo</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Compiler/Specialize.html#Lean.Compiler.SpecState\">SpecState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/SMap.html#Lean.SMap\">SMap</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a> <a href=\"./Lean/Compiler/Specialize.html#Lean.Compiler.SpecInfo\">SpecInfo</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Compiler/Specialize.lean#L105-L105","name":"Lean.Compiler.SpecState.mk","line":105,"kind":"ctor","docLink":"./Lean/Compiler/Specialize.html#Lean.Compiler.SpecState.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/Specialize.html#Lean.Compiler.SpecState.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">SpecState</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">specInfo</span> : <span class=\"fn\"><a href=\"./Lean/Data/SMap.html#Lean.SMap\">SMap</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a> <a href=\"./Lean/Compiler/Specialize.html#Lean.Compiler.SpecInfo\">SpecInfo</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cache</span> : <span class=\"fn\"><a href=\"./Lean/Data/SMap.html#Lean.SMap\">SMap</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/Specialize.html#Lean.Compiler.SpecState\">SpecState</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Compiler/Specialize.lean#L105-L108","name":"Lean.Compiler.SpecState","line":105,"kind":"structure","docLink":"./Lean/Compiler/Specialize.html#Lean.Compiler.SpecState","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/Specialize.html#Lean.Compiler.SpecState\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">SpecState</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Compiler/Specialize.lean#L103-L103","name":"Lean.Compiler.instInhabitedSpecInfo","line":103,"kind":"instance","docLink":"./Lean/Compiler/Specialize.html#Lean.Compiler.instInhabitedSpecInfo","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/Specialize.html#Lean.Compiler.instInhabitedSpecInfo\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">instInhabitedSpecInfo</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Compiler/Specialize.html#Lean.Compiler.SpecInfo\">SpecInfo</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Compiler/Specialize.lean#L102-L102","name":"Lean.Compiler.SpecInfo.argKinds","line":102,"kind":"def","docLink":"./Lean/Compiler/Specialize.html#Lean.Compiler.SpecInfo.argKinds","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/Specialize.html#Lean.Compiler.SpecInfo.argKinds\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">SpecInfo</span>.<span class=\"name\">argKinds</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Compiler/Specialize.html#Lean.Compiler.SpecInfo\">SpecInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Compiler/Specialize.html#Lean.Compiler.SpecArgKind\">SpecArgKind</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Compiler/Specialize.lean#L101-L101","name":"Lean.Compiler.SpecInfo.mutualDecls","line":101,"kind":"def","docLink":"./Lean/Compiler/Specialize.html#Lean.Compiler.SpecInfo.mutualDecls","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/Specialize.html#Lean.Compiler.SpecInfo.mutualDecls\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">SpecInfo</span>.<span class=\"name\">mutualDecls</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Compiler/Specialize.html#Lean.Compiler.SpecInfo\">SpecInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Compiler/Specialize.lean#L100-L100","name":"Lean.Compiler.SpecInfo.mk","line":100,"kind":"ctor","docLink":"./Lean/Compiler/Specialize.html#Lean.Compiler.SpecInfo.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/Specialize.html#Lean.Compiler.SpecInfo.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">SpecInfo</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mutualDecls</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">argKinds</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Compiler/Specialize.html#Lean.Compiler.SpecArgKind\">SpecArgKind</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/Specialize.html#Lean.Compiler.SpecInfo\">SpecInfo</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Compiler/Specialize.lean#L100-L103","name":"Lean.Compiler.SpecInfo","line":100,"kind":"structure","docLink":"./Lean/Compiler/Specialize.html#Lean.Compiler.SpecInfo","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/Specialize.html#Lean.Compiler.SpecInfo\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">SpecInfo</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Compiler/Specialize.lean#L98-L98","name":"Lean.Compiler.instInhabitedSpecArgKind","line":98,"kind":"instance","docLink":"./Lean/Compiler/Specialize.html#Lean.Compiler.instInhabitedSpecArgKind","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/Specialize.html#Lean.Compiler.instInhabitedSpecArgKind\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">instInhabitedSpecArgKind</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Compiler/Specialize.html#Lean.Compiler.SpecArgKind\">SpecArgKind</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Compiler/Specialize.lean#L97-L97","name":"Lean.Compiler.SpecArgKind.other","line":97,"kind":"ctor","docLink":"./Lean/Compiler/Specialize.html#Lean.Compiler.SpecArgKind.other","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/Specialize.html#Lean.Compiler.SpecArgKind.other\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">SpecArgKind</span>.<span class=\"name\">other</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/Specialize.html#Lean.Compiler.SpecArgKind\">SpecArgKind</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Compiler/Specialize.lean#L96-L96","name":"Lean.Compiler.SpecArgKind.fixedInst","line":96,"kind":"ctor","docLink":"./Lean/Compiler/Specialize.html#Lean.Compiler.SpecArgKind.fixedInst","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/Specialize.html#Lean.Compiler.SpecArgKind.fixedInst\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">SpecArgKind</span>.<span class=\"name\">fixedInst</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/Specialize.html#Lean.Compiler.SpecArgKind\">SpecArgKind</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Compiler/Specialize.lean#L95-L95","name":"Lean.Compiler.SpecArgKind.fixedHO","line":95,"kind":"ctor","docLink":"./Lean/Compiler/Specialize.html#Lean.Compiler.SpecArgKind.fixedHO","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/Specialize.html#Lean.Compiler.SpecArgKind.fixedHO\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">SpecArgKind</span>.<span class=\"name\">fixedHO</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/Specialize.html#Lean.Compiler.SpecArgKind\">SpecArgKind</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Compiler/Specialize.lean#L94-L94","name":"Lean.Compiler.SpecArgKind.fixedNeutral","line":94,"kind":"ctor","docLink":"./Lean/Compiler/Specialize.html#Lean.Compiler.SpecArgKind.fixedNeutral","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/Specialize.html#Lean.Compiler.SpecArgKind.fixedNeutral\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">SpecArgKind</span>.<span class=\"name\">fixedNeutral</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/Specialize.html#Lean.Compiler.SpecArgKind\">SpecArgKind</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Compiler/Specialize.lean#L93-L93","name":"Lean.Compiler.SpecArgKind.fixed","line":93,"kind":"ctor","docLink":"./Lean/Compiler/Specialize.html#Lean.Compiler.SpecArgKind.fixed","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/Specialize.html#Lean.Compiler.SpecArgKind.fixed\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">SpecArgKind</span>.<span class=\"name\">fixed</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/Specialize.html#Lean.Compiler.SpecArgKind\">SpecArgKind</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Compiler/Specialize.lean#L92-L98","name":"Lean.Compiler.SpecArgKind","line":92,"kind":"inductive","docLink":"./Lean/Compiler/Specialize.html#Lean.Compiler.SpecArgKind","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/Specialize.html#Lean.Compiler.SpecArgKind\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">SpecArgKind</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Compiler/Specialize.lean#L87-L90","name":"Lean.Compiler.hasNospecializeAttributeOld","line":87,"kind":"opaque","docLink":"./Lean/Compiler/Specialize.html#Lean.Compiler.hasNospecializeAttributeOld","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/Specialize.html#Lean.Compiler.hasNospecializeAttributeOld\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">hasNospecializeAttributeOld</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Compiler/Specialize.lean#L81-L85","name":"Lean.Compiler.hasSpecializeAttributeOld","line":81,"kind":"opaque","docLink":"./Lean/Compiler/Specialize.html#Lean.Compiler.hasSpecializeAttributeOld","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/Specialize.html#Lean.Compiler.hasSpecializeAttributeOld\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">hasSpecializeAttributeOld</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Compiler/Specialize.lean#L76-L77","name":"Lean.Compiler.hasNospecializeAttribute","line":76,"kind":"def","docLink":"./Lean/Compiler/Specialize.html#Lean.Compiler.hasNospecializeAttribute","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/Specialize.html#Lean.Compiler.hasNospecializeAttribute\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">hasNospecializeAttribute</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Compiler/Specialize.lean#L73-L74","name":"Lean.Compiler.hasSpecializeAttribute","line":73,"kind":"def","docLink":"./Lean/Compiler/Specialize.html#Lean.Compiler.hasSpecializeAttribute","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/Specialize.html#Lean.Compiler.hasSpecializeAttribute\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">hasSpecializeAttribute</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Compiler/Specialize.lean#L70-L71","name":"Lean.Compiler.getSpecializationArgs?","line":70,"kind":"def","docLink":"./Lean/Compiler/Specialize.html#Lean.Compiler.getSpecializationArgs?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/Specialize.html#Lean.Compiler.getSpecializationArgs?\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">getSpecializationArgs?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Compiler/Specialize.lean#L47-L68","name":"Lean.Compiler.specializeAttr","line":47,"kind":"opaque","docLink":"./Lean/Compiler/Specialize.html#Lean.Compiler.specializeAttr","doc":"Marks a definition to always be specialized during code generation.\n\nSpecialization is an optimization in the code generator for generating variants of a function that\nare specialized to specific parameter values. This is in particular useful for functions that take\nother functions as parameters: Usually when passing functions as parameters, a closure needs to be\nallocated that will then be called. Using `@[specialize]` prevents both of these operations by\nusing the provided function directly in the specialization of the inner function.\n\n`@[specialize]` can take additional arguments for the parameter names or indices (starting at 1) of\nthe parameters that should be specialized. By default, instance and function parameters are\nspecialized.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/Specialize.html#Lean.Compiler.specializeAttr\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">specializeAttr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Attributes.html#Lean.ParametricAttribute\">ParametricAttribute</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Compiler/Specialize.lean#L16-L21","name":"Lean.Compiler.nospecializeAttr","line":16,"kind":"opaque","docLink":"./Lean/Compiler/Specialize.html#Lean.Compiler.nospecializeAttr","doc":"Marks a definition to never be specialized during code generation.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/Specialize.html#Lean.Compiler.nospecializeAttr\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">nospecializeAttr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Attributes.html#Lean.TagAttribute\">TagAttribute</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Compiler/Specialize.lean#L14-L14","name":"Lean.Compiler.instBEqSpecializeAttributeKind","line":14,"kind":"instance","docLink":"./Lean/Compiler/Specialize.html#Lean.Compiler.instBEqSpecializeAttributeKind","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/Specialize.html#Lean.Compiler.instBEqSpecializeAttributeKind\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">instBEqSpecializeAttributeKind</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <a href=\"./Lean/Compiler/Specialize.html#Lean.Compiler.SpecializeAttributeKind\">SpecializeAttributeKind</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Compiler/Specialize.lean#L14-L14","name":"Lean.Compiler.instInhabitedSpecializeAttributeKind","line":14,"kind":"instance","docLink":"./Lean/Compiler/Specialize.html#Lean.Compiler.instInhabitedSpecializeAttributeKind","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/Specialize.html#Lean.Compiler.instInhabitedSpecializeAttributeKind\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">instInhabitedSpecializeAttributeKind</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Compiler/Specialize.html#Lean.Compiler.SpecializeAttributeKind\">SpecializeAttributeKind</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Compiler/Specialize.lean#L13-L13","name":"Lean.Compiler.SpecializeAttributeKind.nospecialize","line":13,"kind":"ctor","docLink":"./Lean/Compiler/Specialize.html#Lean.Compiler.SpecializeAttributeKind.nospecialize","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/Specialize.html#Lean.Compiler.SpecializeAttributeKind.nospecialize\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">SpecializeAttributeKind</span>.<span class=\"name\">nospecialize</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/Specialize.html#Lean.Compiler.SpecializeAttributeKind\">SpecializeAttributeKind</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Compiler/Specialize.lean#L13-L13","name":"Lean.Compiler.SpecializeAttributeKind.specialize","line":13,"kind":"ctor","docLink":"./Lean/Compiler/Specialize.html#Lean.Compiler.SpecializeAttributeKind.specialize","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/Specialize.html#Lean.Compiler.SpecializeAttributeKind.specialize\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">SpecializeAttributeKind</span>.<span class=\"name\">specialize</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/Specialize.html#Lean.Compiler.SpecializeAttributeKind\">SpecializeAttributeKind</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Compiler/Specialize.lean#L12-L14","name":"Lean.Compiler.SpecializeAttributeKind","line":12,"kind":"inductive","docLink":"./Lean/Compiler/Specialize.html#Lean.Compiler.SpecializeAttributeKind","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/Specialize.html#Lean.Compiler.SpecializeAttributeKind\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">SpecializeAttributeKind</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}