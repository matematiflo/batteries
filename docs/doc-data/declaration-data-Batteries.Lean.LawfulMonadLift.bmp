{"name":"Batteries.Lean.LawfulMonadLift","instances":[{"typeNames":["BaseIO","EIO"],"name":"instLawfulMonadLiftBaseIOEIO_batteries","className":"LawfulMonadLift"},{"typeNames":["ST","EST"],"name":"instLawfulMonadLiftSTEST_batteries","className":"LawfulMonadLift"},{"typeNames":["IO","Lean.Core.CoreM"],"name":"instLawfulMonadLiftIOCoreM_batteries","className":"LawfulMonadLift"},{"typeNames":["EIO","Lean.Elab.Command.CommandElabM"],"name":"instLawfulMonadLiftTEIOExceptionCommandElabM_batteries","className":"LawfulMonadLiftT"},{"typeNames":["EIO","Lean.Core.CoreM"],"name":"instLawfulMonadLiftTEIOExceptionCoreM_batteries","className":"LawfulMonadLiftT"},{"typeNames":["Lean.Core.CoreM","Lean.Meta.MetaM"],"name":"instLawfulMonadLiftTCoreMMetaM_batteries","className":"LawfulMonadLiftT"},{"typeNames":["Lean.Meta.MetaM","Lean.Elab.Term.TermElabM"],"name":"instLawfulMonadLiftTMetaMTermElabM_batteries","className":"LawfulMonadLiftT"},{"typeNames":["Lean.Elab.Term.TermElabM","Lean.Elab.Tactic.TacticM"],"name":"instLawfulMonadLiftTTermElabMTacticM_batteries","className":"LawfulMonadLiftT"}],"imports":["Init","Batteries.Lean.LawfulMonad"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/82fd0cf6aaa1e2580aa17b3b1e5b9140e6e6a5e5/Batteries/Lean/LawfulMonadLift.lean#L54-L54","name":"instLawfulMonadLiftTTermElabMTacticM_batteries","line":54,"kind":"instance","docLink":"./Batteries/Lean/LawfulMonadLift.html#instLawfulMonadLiftTTermElabMTacticM_batteries","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Lean/LawfulMonadLift.html#instLawfulMonadLiftTTermElabMTacticM_batteries\"><span class=\"name\">instLawfulMonadLiftTTermElabMTacticM_batteries</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Control/Lawful/MonadLift/Basic.html#LawfulMonadLiftT\">LawfulMonadLiftT</a> <a href=\"./Lean/Elab/Term.html#Lean.Elab.Term.TermElabM\">Lean.Elab.TermElabM</a> <a href=\"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.TacticM\">Lean.Elab.Tactic.TacticM</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/82fd0cf6aaa1e2580aa17b3b1e5b9140e6e6a5e5/Batteries/Lean/LawfulMonadLift.lean#L53-L53","name":"instLawfulMonadLiftTMetaMTermElabM_batteries","line":53,"kind":"instance","docLink":"./Batteries/Lean/LawfulMonadLift.html#instLawfulMonadLiftTMetaMTermElabM_batteries","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Lean/LawfulMonadLift.html#instLawfulMonadLiftTMetaMTermElabM_batteries\"><span class=\"name\">instLawfulMonadLiftTMetaMTermElabM_batteries</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Control/Lawful/MonadLift/Basic.html#LawfulMonadLiftT\">LawfulMonadLiftT</a> <a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Lean/Elab/Term.html#Lean.Elab.Term.TermElabM\">Lean.Elab.TermElabM</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/82fd0cf6aaa1e2580aa17b3b1e5b9140e6e6a5e5/Batteries/Lean/LawfulMonadLift.lean#L52-L52","name":"instLawfulMonadLiftTCoreMMetaM_batteries","line":52,"kind":"instance","docLink":"./Batteries/Lean/LawfulMonadLift.html#instLawfulMonadLiftTCoreMMetaM_batteries","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Lean/LawfulMonadLift.html#instLawfulMonadLiftTCoreMMetaM_batteries\"><span class=\"name\">instLawfulMonadLiftTCoreMMetaM_batteries</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Control/Lawful/MonadLift/Basic.html#LawfulMonadLiftT\">LawfulMonadLiftT</a> <a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> <a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/82fd0cf6aaa1e2580aa17b3b1e5b9140e6e6a5e5/Batteries/Lean/LawfulMonadLift.lean#L51-L51","name":"instLawfulMonadLiftTEIOExceptionCoreM_batteries","line":51,"kind":"instance","docLink":"./Batteries/Lean/LawfulMonadLift.html#instLawfulMonadLiftTEIOExceptionCoreM_batteries","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Lean/LawfulMonadLift.html#instLawfulMonadLiftTEIOExceptionCoreM_batteries\"><span class=\"name\">instLawfulMonadLiftTEIOExceptionCoreM_batteries</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Control/Lawful/MonadLift/Basic.html#LawfulMonadLiftT\">LawfulMonadLiftT</a> <span class=\"fn\">(<a href=\"./Init/System/IO.html#EIO\">EIO</a> <a href=\"./Lean/Exception.html#Lean.Exception\">Lean.Exception</a>)</span> <a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/82fd0cf6aaa1e2580aa17b3b1e5b9140e6e6a5e5/Batteries/Lean/LawfulMonadLift.lean#L50-L50","name":"instLawfulMonadLiftTEIOExceptionCommandElabM_batteries","line":50,"kind":"instance","docLink":"./Batteries/Lean/LawfulMonadLift.html#instLawfulMonadLiftTEIOExceptionCommandElabM_batteries","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Lean/LawfulMonadLift.html#instLawfulMonadLiftTEIOExceptionCommandElabM_batteries\"><span class=\"name\">instLawfulMonadLiftTEIOExceptionCommandElabM_batteries</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Control/Lawful/MonadLift/Basic.html#LawfulMonadLiftT\">LawfulMonadLiftT</a> <span class=\"fn\">(<a href=\"./Init/System/IO.html#EIO\">EIO</a> <a href=\"./Lean/Exception.html#Lean.Exception\">Lean.Exception</a>)</span> <a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.CommandElabM\">Lean.Elab.Command.CommandElabM</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/82fd0cf6aaa1e2580aa17b3b1e5b9140e6e6a5e5/Batteries/Lean/LawfulMonadLift.lean#L36-L48","name":"instLawfulMonadLiftIOCoreM_batteries","line":36,"kind":"instance","docLink":"./Batteries/Lean/LawfulMonadLift.html#instLawfulMonadLiftIOCoreM_batteries","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Lean/LawfulMonadLift.html#instLawfulMonadLiftIOCoreM_batteries\"><span class=\"name\">instLawfulMonadLiftIOCoreM_batteries</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Control/Lawful/MonadLift/Basic.html#LawfulMonadLift\">LawfulMonadLift</a> <a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/82fd0cf6aaa1e2580aa17b3b1e5b9140e6e6a5e5/Batteries/Lean/LawfulMonadLift.lean#L25-L34","name":"instLawfulMonadLiftSTEST_batteries","line":25,"kind":"instance","docLink":"./Batteries/Lean/LawfulMonadLift.html#instLawfulMonadLiftSTEST_batteries","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Lean/LawfulMonadLift.html#instLawfulMonadLiftSTEST_batteries\"><span class=\"name\">instLawfulMonadLiftSTEST_batteries</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">σ </span><span class=\"fn\">ε</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Control/Lawful/MonadLift/Basic.html#LawfulMonadLift\">LawfulMonadLift</a> <span class=\"fn\">(<a href=\"./Init/System/ST.html#ST\">ST</a> <span class=\"fn\">σ</span>)</span> <span class=\"fn\">(<a href=\"./Init/System/ST.html#EST\">EST</a> <span class=\"fn\">ε</span> <span class=\"fn\">σ</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/82fd0cf6aaa1e2580aa17b3b1e5b9140e6e6a5e5/Batteries/Lean/LawfulMonadLift.lean#L14-L23","name":"instLawfulMonadLiftBaseIOEIO_batteries","line":14,"kind":"instance","docLink":"./Batteries/Lean/LawfulMonadLift.html#instLawfulMonadLiftBaseIOEIO_batteries","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Lean/LawfulMonadLift.html#instLawfulMonadLiftBaseIOEIO_batteries\"><span class=\"name\">instLawfulMonadLiftBaseIOEIO_batteries</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ε</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Control/Lawful/MonadLift/Basic.html#LawfulMonadLift\">LawfulMonadLift</a> <a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Init/System/IO.html#EIO\">EIO</a> <span class=\"fn\">ε</span>)</span></span></div></div>"}]}