{"name":"Init.GrindInstances.Ring.Int","instances":[{"typeNames":["Int"],"name":"Lean.Grind.instCommRingInt","className":"Lean.Grind.CommRing"},{"typeNames":["Int","OfNat.ofNat"],"name":"Lean.Grind.instIsCharPIntOfNatNat","className":"Lean.Grind.IsCharP"},{"typeNames":["Int"],"name":"Lean.Grind.instNoNatZeroDivisorsInt","className":"Lean.Grind.NoNatZeroDivisors"}],"imports":["Init.Grind.Ring.Basic","Init.Data.Int.Lemmas"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/GrindInstances/Ring/Int.lean#L39-L43","name":"Lean.Grind.instNoNatZeroDivisorsInt","line":39,"kind":"instance","docLink":"./Init/GrindInstances/Ring/Int.html#Lean.Grind.instNoNatZeroDivisorsInt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/GrindInstances/Ring/Int.html#Lean.Grind.instNoNatZeroDivisorsInt\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">instNoNatZeroDivisorsInt</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Grind/Module/Basic.html#Lean.Grind.NoNatZeroDivisors\">NoNatZeroDivisors</a> <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/GrindInstances/Ring/Int.lean#L36-L37","name":"Lean.Grind.instIsCharPIntOfNatNat","line":36,"kind":"instance","docLink":"./Init/GrindInstances/Ring/Int.html#Lean.Grind.instIsCharPIntOfNatNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/GrindInstances/Ring/Int.html#Lean.Grind.instIsCharPIntOfNatNat\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">instIsCharPIntOfNatNat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Grind/Ring/Basic.html#Lean.Grind.IsCharP\">IsCharP</a> <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/GrindInstances/Ring/Int.lean#L16-L34","name":"Lean.Grind.instCommRingInt","line":16,"kind":"instance","docLink":"./Init/GrindInstances/Ring/Int.html#Lean.Grind.instCommRingInt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/GrindInstances/Ring/Int.html#Lean.Grind.instCommRingInt\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">instCommRingInt</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Grind/Ring/Basic.html#Lean.Grind.CommRing\">CommRing</a> <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a></span></div></div>"}]}