{"name":"Lake.Build.Common","instances":[{"typeNames":["Lake.JobM"],"name":"Lake.instMonadWorkspaceJobM","className":"Lake.MonadWorkspace"},{"typeNames":["Lake.BuildMetadata"],"name":"Lake.instToJsonBuildMetadata","className":"Lean.ToJson"},{"typeNames":["Lake.BuildMetadata"],"name":"Lake.instFromJsonBuildMetadata","className":"Lean.FromJson"},{"typeNames":["Lake.FileOutputHash"],"name":"Lake.instToJsonFileOutputHash","className":"Lean.ToJson"},{"typeNames":["Lake.FileOutputHash"],"name":"Lake.instFromJsonFileOutputHash","className":"Lean.FromJson"},{"typeNames":["Lake.FileOutputHash","Lake.Artifact"],"name":"Lake.instResolveArtifactsFileOutputHashArtifactOfMonadLakeEnvOfMonadLiftTBaseIOOfMonad","className":"Lake.ResolveArtifacts"}],"imports":["Lake.Config.Monad","Lake.Util.JsonObject","Lake.Build.Target.Fetch","Lake.Build.Actions","Lake.Build.Job"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Common.lean#L755-L774","name":"Lake.buildLeanExe","line":755,"kind":"def","docLink":"./Lake/Build/Common.html#Lake.buildLeanExe","doc":"Build an executable by linking the results of `linkJobs`\nusing the Lean toolchain's linker.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Common.html#Lake.buildLeanExe\"><span class=\"name\">Lake</span>.<span class=\"name\">buildLeanExe</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">exeFile</span> : <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">linkObjs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Lake/Build/Job/Basic.html#Lake.Job\">Job</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">linkLibs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Lake/Build/Job/Basic.html#Lake.Job\">Job</a> <a href=\"./Lake/Config/Dynlib.html#Lake.Dynlib\">Dynlib</a>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">weakArgs </span><span class=\"fn\">traceArgs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#String\">String</a></span> := <a href=\"./Init/Prelude.html#List.toArray\">#[</a><a href=\"./Init/Prelude.html#List.toArray\">]</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">sharedLean</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Job/Monad.html#Lake.SpawnM\">SpawnM</a> <span class=\"fn\">(<a href=\"./Lake/Build/Job/Basic.html#Lake.Job\">Job</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Common.lean#L730-L753","name":"Lake.buildLeanSharedLib","line":730,"kind":"def","docLink":"./Lake/Build/Common.html#Lake.buildLeanSharedLib","doc":"Build a shared library by linking the results of `linkJobs`\nusing `linker`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Common.html#Lake.buildLeanSharedLib\"><span class=\"name\">Lake</span>.<span class=\"name\">buildLeanSharedLib</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">libName</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">libFile</span> : <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">linkObjs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Lake/Build/Job/Basic.html#Lake.Job\">Job</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">linkLibs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Lake/Build/Job/Basic.html#Lake.Job\">Job</a> <a href=\"./Lake/Config/Dynlib.html#Lake.Dynlib\">Dynlib</a>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">weakArgs </span><span class=\"fn\">traceArgs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#String\">String</a></span> := <a href=\"./Init/Prelude.html#List.toArray\">#[</a><a href=\"./Init/Prelude.html#List.toArray\">]</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">plugin</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">linkDeps</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/System/Platform.html#System.Platform.isWindows\">System.Platform.isWindows</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Job/Monad.html#Lake.SpawnM\">SpawnM</a> <span class=\"fn\">(<a href=\"./Lake/Build/Job/Basic.html#Lake.Job\">Job</a> <a href=\"./Lake/Config/Dynlib.html#Lake.Dynlib\">Dynlib</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Common.lean#L706-L728","name":"Lake.buildSharedLib","line":706,"kind":"def","docLink":"./Lake/Build/Common.html#Lake.buildSharedLib","doc":"Build a shared library by linking the results of `linkJobs`\nusing the Lean toolchain's C compiler.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Common.html#Lake.buildSharedLib\"><span class=\"name\">Lake</span>.<span class=\"name\">buildSharedLib</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">libName</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">libFile</span> : <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">linkObjs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Lake/Build/Job/Basic.html#Lake.Job\">Job</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">linkLibs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Lake/Build/Job/Basic.html#Lake.Job\">Job</a> <a href=\"./Lake/Config/Dynlib.html#Lake.Dynlib\">Dynlib</a>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">weakArgs </span><span class=\"fn\">traceArgs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#String\">String</a></span> := <a href=\"./Init/Prelude.html#List.toArray\">#[</a><a href=\"./Init/Prelude.html#List.toArray\">]</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">linker</span> : <a href=\"./Init/Prelude.html#String\">String</a> := <span class=\"fn\">&quot;c++&quot;</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">extraDepTrace</span> : <span class=\"fn\"><a href=\"./Lake/Build/Job/Monad.html#Lake.JobM\">JobM</a> <a href=\"./Lake/Build/Trace.html#Lake.BuildTrace\">BuildTrace</a></span> := <span class=\"fn\"><a href=\"./Init/Prelude.html#Pure.pure\">pure</a> <a href=\"./Lake/Build/Trace.html#Lake.BuildTrace.nil\">BuildTrace.nil</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">plugin</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">linkDeps</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/System/Platform.html#System.Platform.isWindows\">System.Platform.isWindows</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Job/Monad.html#Lake.SpawnM\">SpawnM</a> <span class=\"fn\">(<a href=\"./Lake/Build/Job/Basic.html#Lake.Job\">Job</a> <a href=\"./Lake/Config/Dynlib.html#Lake.Dynlib\">Dynlib</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Common.lean#L663-L669","name":"Lake.buildStaticLib","line":663,"kind":"def","docLink":"./Lake/Build/Common.html#Lake.buildStaticLib","doc":"Build a static library from object file jobs using the Lean toolchain's `ar`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Common.html#Lake.buildStaticLib\"><span class=\"name\">Lake</span>.<span class=\"name\">buildStaticLib</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">libFile</span> : <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">oFileJobs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Lake/Build/Job/Basic.html#Lake.Job\">Job</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">thin</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Job/Monad.html#Lake.SpawnM\">SpawnM</a> <span class=\"fn\">(<a href=\"./Lake/Build/Job/Basic.html#Lake.Job\">Job</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Common.lean#L644-L661","name":"Lake.buildLeanO","line":644,"kind":"def","docLink":"./Lake/Build/Common.html#Lake.buildLeanO","doc":"Build an object file from a source fie job (i.e, a `lean -c` output)\nusing the Lean toolchain's C compiler.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Common.html#Lake.buildLeanO\"><span class=\"name\">Lake</span>.<span class=\"name\">buildLeanO</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">oFile</span> : <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">srcJob</span> : <span class=\"fn\"><a href=\"./Lake/Build/Job/Basic.html#Lake.Job\">Job</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">weakArgs </span><span class=\"fn\">traceArgs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#String\">String</a></span> := <a href=\"./Init/Prelude.html#List.toArray\">#[</a><a href=\"./Init/Prelude.html#List.toArray\">]</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">leanIncludeDir?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a></span> := <a href=\"./Init/Prelude.html#Option.none\">none</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Job/Monad.html#Lake.SpawnM\">SpawnM</a> <span class=\"fn\">(<a href=\"./Lake/Build/Job/Basic.html#Lake.Job\">Job</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Common.lean#L617-L642","name":"Lake.buildO","line":617,"kind":"def","docLink":"./Lake/Build/Common.html#Lake.buildO","doc":"Build an object file from a source file job using `compiler`. The invocation is:\n\n```\ncompiler -c -o oFile srcFile weakArgs... traceArgs...\n```\n\nThe `traceArgs` are included as part of the dependency trace hash, whereas\nthe `weakArgs` are not. Thus, system-dependent options like `-I` or `-L` should\nbe `weakArgs` to avoid build artifact incompatibility between systems\n(i.e., a change in the file path should not cause a rebuild).\n\nYou can add more components to the trace via `extraDepTrace`,\nwhich will be computed in the resulting `Job` before building.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Common.html#Lake.buildO\"><span class=\"name\">Lake</span>.<span class=\"name\">buildO</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">oFile</span> : <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">srcJob</span> : <span class=\"fn\"><a href=\"./Lake/Build/Job/Basic.html#Lake.Job\">Job</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">weakArgs </span><span class=\"fn\">traceArgs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#String\">String</a></span> := <a href=\"./Init/Prelude.html#List.toArray\">#[</a><a href=\"./Init/Prelude.html#List.toArray\">]</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">compiler</span> : <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a> := <a href=\"./Init/System/FilePath.html#System.FilePath.mk\">{</a> <span class=\"fn\">toString</span> := <span class=\"fn\">&quot;cc&quot;</span> <a href=\"./Init/System/FilePath.html#System.FilePath.mk\">}</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">extraDepTrace</span> : <span class=\"fn\"><a href=\"./Lake/Build/Job/Monad.html#Lake.JobM\">JobM</a> <a href=\"./Lake/Build/Trace.html#Lake.BuildTrace\">BuildTrace</a></span> := <span class=\"fn\"><a href=\"./Init/Prelude.html#Pure.pure\">pure</a> <a href=\"./Lake/Build/Trace.html#Lake.BuildTrace.nil\">BuildTrace.nil</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Job/Monad.html#Lake.SpawnM\">SpawnM</a> <span class=\"fn\">(<a href=\"./Lake/Build/Job/Basic.html#Lake.Job\">Job</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Common.lean#L595-L615","name":"Lake.inputDir","line":595,"kind":"def","docLink":"./Lake/Build/Common.html#Lake.inputDir","doc":"A build job for a directory of files that are expected to already exist.\nReturns an array of the files in the directory that match the filter.\n\nIf `text := true`, the files are handled as text files rather than a binary files.\nAny byte difference in a binary file will trigger a rebuild of its dependents.\nIn contrast, text file traces have normalized line endings to avoid unnecessary\nrebuilds across platforms.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Common.html#Lake.inputDir\"><span class=\"name\">Lake</span>.<span class=\"name\">inputDir</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">path</span> : <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">text</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">filter</span> : <span class=\"fn\"><a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Job/Monad.html#Lake.SpawnM\">SpawnM</a> <span class=\"fn\">(<a href=\"./Lake/Build/Job/Basic.html#Lake.Job\">Job</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Common.lean#L584-L593","name":"Lake.inputFile","line":584,"kind":"def","docLink":"./Lake/Build/Common.html#Lake.inputFile","doc":"A build job for file that is expected to already exist  (e.g., a data blob or source file).\n\nIf `text := true`, the file is handled as a text file rather than a binary file.\nAny byte difference in a binary file will trigger a rebuild of its dependents.\nIn contrast, text file traces have normalized line endings to avoid unnecessary\nrebuilds across platforms.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Common.html#Lake.inputFile\"><span class=\"name\">Lake</span>.<span class=\"name\">inputFile</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">path</span> : <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">text</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Job/Monad.html#Lake.SpawnM\">SpawnM</a> <span class=\"fn\">(<a href=\"./Lake/Build/Job/Basic.html#Lake.Job\">Job</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Common.lean#L575-L582","name":"Lake.inputTextFile","line":575,"kind":"def","docLink":"./Lake/Build/Common.html#Lake.inputTextFile","doc":"A build job for text file that is expected to already exist (e.g., a source file).\n\nText file traces have normalized line endings to avoid unnecessary rebuilds across platforms.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Common.html#Lake.inputTextFile\"><span class=\"name\">Lake</span>.<span class=\"name\">inputTextFile</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">path</span> : <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Job/Monad.html#Lake.SpawnM\">SpawnM</a> <span class=\"fn\">(<a href=\"./Lake/Build/Job/Basic.html#Lake.Job\">Job</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Common.lean#L566-L573","name":"Lake.inputBinFile","line":566,"kind":"def","docLink":"./Lake/Build/Common.html#Lake.inputBinFile","doc":"A build job for binary file that is expected to already exist (e.g., a data blob).\n\nAny byte difference in a binary file will trigger a rebuild of its dependents.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Common.html#Lake.inputBinFile\"><span class=\"name\">Lake</span>.<span class=\"name\">inputBinFile</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">path</span> : <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Job/Monad.html#Lake.SpawnM\">SpawnM</a> <span class=\"fn\">(<a href=\"./Lake/Build/Job/Basic.html#Lake.Job\">Job</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Common.lean#L552-L562","name":"Lake.buildFileAfterDepArray","line":552,"kind":"def","docLink":"./Lake/Build/Common.html#Lake.buildFileAfterDepArray","doc":"Build `file` using `build` after `deps` have built if any of their traces change.\n\nIf `text := true`, `file` is handled as a text file rather than a binary file.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Common.html#Lake.buildFileAfterDepArray\"><span class=\"name\">Lake</span>.<span class=\"name\">buildFileAfterDepArray</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">file</span> : <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">deps</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Lake/Build/Job/Basic.html#Lake.Job\">Job</a> <span class=\"fn\">α</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">build</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">α</span></span> → <span class=\"fn\"><a href=\"./Lake/Build/Job/Monad.html#Lake.JobM\">JobM</a> <a href=\"./Init/Prelude.html#PUnit\">PUnit</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">extraDepTrace</span> : <span class=\"fn\"><a href=\"./Lake/Build/Job/Monad.html#Lake.JobM\">JobM</a> <a href=\"./Lake/Build/Trace.html#Lake.BuildTrace\">BuildTrace</a></span> := <span class=\"fn\"><a href=\"./Init/Prelude.html#Pure.pure\">pure</a> <a href=\"./Lake/Build/Trace.html#Lake.BuildTrace.nil\">BuildTrace.nil</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">text</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Job/Monad.html#Lake.SpawnM\">SpawnM</a> <span class=\"fn\">(<a href=\"./Lake/Build/Job/Basic.html#Lake.Job\">Job</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Common.lean#L540-L550","name":"Lake.buildFileAfterDepList","line":540,"kind":"def","docLink":"./Lake/Build/Common.html#Lake.buildFileAfterDepList","doc":"Build `file` using `build` after `deps` have built if any of their traces change.\n\nIf `text := true`, `file` is handled as a text file rather than a binary file.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Common.html#Lake.buildFileAfterDepList\"><span class=\"name\">Lake</span>.<span class=\"name\">buildFileAfterDepList</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">file</span> : <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">deps</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Lake/Build/Job/Basic.html#Lake.Job\">Job</a> <span class=\"fn\">α</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">build</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span> → <span class=\"fn\"><a href=\"./Lake/Build/Job/Monad.html#Lake.JobM\">JobM</a> <a href=\"./Init/Prelude.html#PUnit\">PUnit</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">extraDepTrace</span> : <span class=\"fn\"><a href=\"./Lake/Build/Job/Monad.html#Lake.JobM\">JobM</a> <a href=\"./Lake/Build/Trace.html#Lake.BuildTrace\">BuildTrace</a></span> := <span class=\"fn\"><a href=\"./Init/Prelude.html#Pure.pure\">pure</a> <a href=\"./Lake/Build/Trace.html#Lake.BuildTrace.nil\">BuildTrace.nil</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">text</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Job/Monad.html#Lake.SpawnM\">SpawnM</a> <span class=\"fn\">(<a href=\"./Lake/Build/Job/Basic.html#Lake.Job\">Job</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Common.lean#L526-L538","name":"Lake.buildFileAfterDep","line":526,"kind":"def","docLink":"./Lake/Build/Common.html#Lake.buildFileAfterDep","doc":"Build `file` using `build` after `dep` completes if the dependency's\ntrace (and/or `extraDepTrace`) has changed.\n\nIf `text := true`, `file` is handled as a text file rather than a binary file.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Common.html#Lake.buildFileAfterDep\"><span class=\"name\">Lake</span>.<span class=\"name\">buildFileAfterDep</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">file</span> : <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dep</span> : <span class=\"fn\"><a href=\"./Lake/Build/Job/Basic.html#Lake.Job\">Job</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">build</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Lake/Build/Job/Monad.html#Lake.JobM\">JobM</a> <a href=\"./Init/Prelude.html#PUnit\">PUnit</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">extraDepTrace</span> : <span class=\"fn\"><a href=\"./Lake/Build/Job/Monad.html#Lake.JobM\">JobM</a> <a href=\"./Lake/Build/Trace.html#Lake.BuildTrace\">BuildTrace</a></span> := <span class=\"fn\"><a href=\"./Init/Prelude.html#Pure.pure\">pure</a> <a href=\"./Lake/Build/Trace.html#Lake.BuildTrace.nil\">BuildTrace.nil</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">text</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Job/Monad.html#Lake.SpawnM\">SpawnM</a> <span class=\"fn\">(<a href=\"./Lake/Build/Job/Basic.html#Lake.Job\">Job</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Common.lean#L520-L524","name":"Lake.buildArtifactUnlessUpToDate.doBuild","line":520,"kind":"def","docLink":"./Lake/Build/Common.html#Lake.buildArtifactUnlessUpToDate.doBuild","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Common.html#Lake.buildArtifactUnlessUpToDate.doBuild\"><span class=\"name\">Lake</span>.<span class=\"name\">buildArtifactUnlessUpToDate</span>.<span class=\"name\">doBuild</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">file</span> : <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">build</span> : <span class=\"fn\"><a href=\"./Lake/Build/Job/Monad.html#Lake.JobM\">JobM</a> <a href=\"./Init/Prelude.html#PUnit\">PUnit</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">text</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">depTrace</span> : <a href=\"./Lake/Build/Trace.html#Lake.BuildTrace\">BuildTrace</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">traceFile</span> : <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Job/Monad.html#Lake.JobM\">JobM</a> <a href=\"./Lake/Build/Trace.html#Lake.Hash\">Hash</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Common.lean#L471-L524","name":"Lake.buildArtifactUnlessUpToDate","line":471,"kind":"def","docLink":"./Lake/Build/Common.html#Lake.buildArtifactUnlessUpToDate","doc":"Uses the current job's trace to search Lake's local artifact cache for an artifact\nwith a matching extension (`ext`) and content hash. If one is found, use it.\nOtherwise, builds `file` using `build` and saves it to the cache. If Lake's\nlocal artifact cache is not enabled, falls back to `buildFileUnlessUpToDate'`.\n\nIf `text := true`, `file` is hashed as a text file rather than a binary file.\n\nIf `restore := true`, if `file` is missing but the artifact is in the cache,\nit will be copied to the `file`. This function will also return `file` rather\nthan the path to the cached artifact.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Common.html#Lake.buildArtifactUnlessUpToDate\"><span class=\"name\">Lake</span>.<span class=\"name\">buildArtifactUnlessUpToDate</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">file</span> : <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">build</span> : <span class=\"fn\"><a href=\"./Lake/Build/Job/Monad.html#Lake.JobM\">JobM</a> <a href=\"./Init/Prelude.html#PUnit\">PUnit</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">text</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ext</span> : <a href=\"./Init/Prelude.html#String\">String</a> := <span class=\"fn\">&quot;art&quot;</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">restore </span><span class=\"fn\">exe</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Job/Monad.html#Lake.JobM\">JobM</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Common.lean#L461-L469","name":"Lake.fetchLocalArtifact","line":461,"kind":"def","docLink":"./Lake/Build/Common.html#Lake.fetchLocalArtifact","doc":"Construct an artifact from a path outside the Lake artifact cache.\n\nIf `text := true`, `file` is hashed as a text file rather than a binary file.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Common.html#Lake.fetchLocalArtifact\"><span class=\"name\">Lake</span>.<span class=\"name\">fetchLocalArtifact</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">path</span> : <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">text</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Job/Monad.html#Lake.JobM\">JobM</a> <a href=\"./Lake/Config/Artifact.html#Lake.Artifact\">Artifact</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Common.lean#L457-L459","name":"Lake.instResolveArtifactsFileOutputHashArtifactOfMonadLakeEnvOfMonadLiftTBaseIOOfMonad","line":457,"kind":"instance","docLink":"./Lake/Build/Common.html#Lake.instResolveArtifactsFileOutputHashArtifactOfMonadLakeEnvOfMonadLiftTBaseIOOfMonad","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Common.html#Lake.instResolveArtifactsFileOutputHashArtifactOfMonadLakeEnvOfMonadLiftTBaseIOOfMonad\"><span class=\"name\">Lake</span>.<span class=\"name\">instResolveArtifactsFileOutputHashArtifactOfMonadLakeEnvOfMonadLiftTBaseIOOfMonad</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a> u_1</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ext</span> : <a href=\"./Init/Prelude.html#String\">String</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Config/Monad.html#Lake.MonadLakeEnv\">MonadLakeEnv</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#MonadLiftT\">MonadLiftT</a> <a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Common.html#Lake.ResolveArtifacts\">ResolveArtifacts</a> <span class=\"fn\">m</span> <span class=\"fn\">(<a href=\"./Lake/Build/Common.html#Lake.FileOutputHash\">FileOutputHash</a> <span class=\"fn\">ext</span>)</span> <a href=\"./Lake/Config/Artifact.html#Lake.Artifact\">Artifact</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Common.lean#L455-L455","name":"Lake.instFromJsonFileOutputHash","line":455,"kind":"instance","docLink":"./Lake/Build/Common.html#Lake.instFromJsonFileOutputHash","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Common.html#Lake.instFromJsonFileOutputHash\"><span class=\"name\">Lake</span>.<span class=\"name\">instFromJsonFileOutputHash</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ext</span> : <a href=\"./Init/Prelude.html#String\">String</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Json/FromToJson.html#Lean.FromJson\">Lean.FromJson</a> <span class=\"fn\">(<a href=\"./Lake/Build/Common.html#Lake.FileOutputHash\">FileOutputHash</a> <span class=\"fn\">ext</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Common.lean#L454-L454","name":"Lake.instToJsonFileOutputHash","line":454,"kind":"instance","docLink":"./Lake/Build/Common.html#Lake.instToJsonFileOutputHash","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Common.html#Lake.instToJsonFileOutputHash\"><span class=\"name\">Lake</span>.<span class=\"name\">instToJsonFileOutputHash</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ext</span> : <a href=\"./Init/Prelude.html#String\">String</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Json/FromToJson.html#Lean.ToJson\">Lean.ToJson</a> <span class=\"fn\">(<a href=\"./Lake/Build/Common.html#Lake.FileOutputHash\">FileOutputHash</a> <span class=\"fn\">ext</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Common.lean#L452-L452","name":"Lake.FileOutputHash.hash","line":452,"kind":"def","docLink":"./Lake/Build/Common.html#Lake.FileOutputHash.hash","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Common.html#Lake.FileOutputHash.hash\"><span class=\"name\">Lake</span>.<span class=\"name\">FileOutputHash</span>.<span class=\"name\">hash</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ext</span> : <a href=\"./Init/Prelude.html#String\">String</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lake/Build/Common.html#Lake.FileOutputHash\">FileOutputHash</a> <span class=\"fn\">ext</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lake/Build/Trace.html#Lake.Hash\">Hash</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Common.lean#L451-L451","name":"Lake.FileOutputHash.mk","line":451,"kind":"ctor","docLink":"./Lake/Build/Common.html#Lake.FileOutputHash.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Common.html#Lake.FileOutputHash.mk\"><span class=\"name\">Lake</span>.<span class=\"name\">FileOutputHash</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ext</span> : <a href=\"./Init/Prelude.html#String\">String</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hash</span> : <a href=\"./Lake/Build/Trace.html#Lake.Hash\">Hash</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Common.html#Lake.FileOutputHash\">FileOutputHash</a> <span class=\"fn\">ext</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Common.lean#L450-L452","name":"Lake.FileOutputHash","line":450,"kind":"structure","docLink":"./Lake/Build/Common.html#Lake.FileOutputHash","doc":"The content hash of an artifact which is stored with extension `ext` in the Lake cache. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Common.html#Lake.FileOutputHash\"><span class=\"name\">Lake</span>.<span class=\"name\">FileOutputHash</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ext</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Common.lean#L418-L448","name":"Lake.resolveArtifactsUsing?","line":418,"kind":"def","docLink":"./Lake/Build/Common.html#Lake.resolveArtifactsUsing?","doc":"Retrieve artifacts from the Lake cache using the the content hashes stored as `α`\nin either the saved trace file or in the cached input-to-content mapping.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Common.html#Lake.resolveArtifactsUsing?\"><span class=\"name\">Lake</span>.<span class=\"name\">resolveArtifactsUsing?</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Data/Json/FromToJson.html#Lean.FromJson\">Lean.FromJson</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Build/Common.html#Lake.ResolveArtifacts\">ResolveArtifacts</a> <a href=\"./Lake/Build/Job/Monad.html#Lake.JobM\">JobM</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">inputHash</span> : <a href=\"./Lake/Build/Trace.html#Lake.Hash\">Hash</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">traceFile</span> : <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">savedTrace</span> : <a href=\"./Lake/Build/Common.html#Lake.SavedTrace\">SavedTrace</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cache</span> : <a href=\"./Lake/Config/Cache.html#Lake.CacheRef\">CacheRef</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Job/Monad.html#Lake.JobM\">JobM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">β</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Common.lean#L415-L415","name":"Lake.ResolveArtifacts.resolveArtifacts?","line":415,"kind":"def","docLink":"./Lake/Build/Common.html#Lake.ResolveArtifacts.resolveArtifacts?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Common.html#Lake.ResolveArtifacts.resolveArtifacts?\"><span class=\"name\">Lake</span>.<span class=\"name\">ResolveArtifacts</span>.<span class=\"name\">resolveArtifacts?</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> v → <a href=\"./foundational_types.html\">Type</a> w</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <a href=\"./foundational_types.html\">(Type</a> v)</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lake/Build/Common.html#Lake.ResolveArtifacts\">ResolveArtifacts</a> <span class=\"fn\">m</span> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">contentHashes</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">β</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Common.lean#L414-L414","name":"Lake.ResolveArtifacts.mk","line":414,"kind":"ctor","docLink":"./Lake/Build/Common.html#Lake.ResolveArtifacts.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Common.html#Lake.ResolveArtifacts.mk\"><span class=\"name\">Lake</span>.<span class=\"name\">ResolveArtifacts</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> v → <a href=\"./foundational_types.html\">Type</a> w</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <a href=\"./foundational_types.html\">(Type</a> v)</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">resolveArtifacts?</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">β</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Common.html#Lake.ResolveArtifacts\">ResolveArtifacts</a> <span class=\"fn\">m</span> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Common.lean#L414-L415","name":"Lake.ResolveArtifacts","line":414,"kind":"class","docLink":"./Lake/Build/Common.html#Lake.ResolveArtifacts","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Common.html#Lake.ResolveArtifacts\"><span class=\"name\">Lake</span>.<span class=\"name\">ResolveArtifacts</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> v → <a href=\"./foundational_types.html\">Type</a> w</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">β</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <a href=\"./foundational_types.html\">(Type</a> v)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (max u w)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Common.lean#L404-L412","name":"Lake.computeArtifactTrace","line":404,"kind":"def","docLink":"./Lake/Build/Common.html#Lake.computeArtifactTrace","doc":"Computes the trace of a cached artifact.\n`buildFile` is where the uncached artifact would be located.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Common.html#Lake.computeArtifactTrace\"><span class=\"name\">Lake</span>.<span class=\"name\">computeArtifactTrace</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">buildFile </span><span class=\"fn\">art</span> : <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">contentHash</span> : <a href=\"./Lake/Build/Trace.html#Lake.Hash\">Hash</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Lake/Build/Trace.html#Lake.BuildTrace\">BuildTrace</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Common.lean#L398-L402","name":"Lake.cacheArtifact","line":398,"kind":"def","docLink":"./Lake/Build/Common.html#Lake.cacheArtifact","doc":"Copies `file` to the Lake cache with the file extension `ext`, and\nsaves its hash in its `.hash` file.\n\nIf `text := true`, `file` contents are hashed as a text file rather than a binary file.\n\nIf the Lake cache is disabled, the behavior of this function is undefined.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Common.html#Lake.cacheArtifact\"><span class=\"name\">Lake</span>.<span class=\"name\">cacheArtifact</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a> u_1</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Config/Monad.html#Lake.MonadLakeEnv\">MonadLakeEnv</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#MonadLiftT\">MonadLiftT</a> <a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">file</span> : <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ext</span> : <a href=\"./Init/Prelude.html#String\">String</a> := <span class=\"fn\">&quot;art&quot;</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">text </span><span class=\"fn\">exe</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Lake/Config/Artifact.html#Lake.Artifact\">Artifact</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Common.lean#L364-L396","name":"Lake.Cache.saveArtifact","line":364,"kind":"def","docLink":"./Lake/Build/Common.html#Lake.Cache.saveArtifact","doc":"Copies `file` to the Lake cache with the file extension `ext`, and\nsaves its hash in its `.hash` file.\n\nIf `text := true`, `file` contents are hashed as a text file rather than a binary file.\n\nIf the Lake cache is disabled, the behavior of this function is undefined.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Common.html#Lake.Cache.saveArtifact\"><span class=\"name\">Lake</span>.<span class=\"name\">Cache</span>.<span class=\"name\">saveArtifact</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cache</span> : <a href=\"./Lake/Config/Cache.html#Lake.Cache\">Cache</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">file</span> : <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ext</span> : <a href=\"./Init/Prelude.html#String\">String</a> := <span class=\"fn\">&quot;art&quot;</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">text </span><span class=\"fn\">exe</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Lake/Config/Artifact.html#Lake.Artifact\">Artifact</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Common.lean#L356-L362","name":"Lake.buildFileUnlessUpToDate","line":356,"kind":"def","docLink":"./Lake/Build/Common.html#Lake.buildFileUnlessUpToDate","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Common.html#Lake.buildFileUnlessUpToDate\"><span class=\"name\">Lake</span>.<span class=\"name\">buildFileUnlessUpToDate</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">file</span> : <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">depTrace</span> : <a href=\"./Lake/Build/Trace.html#Lake.BuildTrace\">BuildTrace</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">build</span> : <span class=\"fn\"><a href=\"./Lake/Build/Job/Monad.html#Lake.JobM\">JobM</a> <a href=\"./Init/Prelude.html#PUnit\">PUnit</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">text</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Job/Monad.html#Lake.JobM\">JobM</a> <a href=\"./Lake/Build/Trace.html#Lake.BuildTrace\">BuildTrace</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Common.lean#L334-L354","name":"Lake.buildFileUnlessUpToDate'","line":334,"kind":"def","docLink":"./Lake/Build/Common.html#Lake.buildFileUnlessUpToDate'","doc":"Builds `file` using `build` unless it already exists and the current job's\ntrace matches the trace stored in the `.trace` file. If built, saves the new\ntrace and caches `file`'s hash in a `.hash` file. Otherwise, tries to fetch the\nhash from the `.hash` file using `fetchFileTrace`. Build logs (if any) are\nsaved to the trace file and replayed from there if the build is skipped.\n\nFor example, given `file := \"foo.c\"`, compares `getTrace` with that in\n`foo.c.trace`. If built, the hash is cached in `foo.c.hash` and the new\ntrace is saved to `foo.c.trace` (including the build log).\n\nIf `text := true`, `file` is hashed as a text file rather than a binary file.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Common.html#Lake.buildFileUnlessUpToDate'\"><span class=\"name\">Lake</span>.<span class=\"name\">buildFileUnlessUpToDate'</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">file</span> : <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">build</span> : <span class=\"fn\"><a href=\"./Lake/Build/Job/Monad.html#Lake.JobM\">JobM</a> <a href=\"./Init/Prelude.html#PUnit\">PUnit</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">text</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Job/Monad.html#Lake.JobM\">JobM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Common.lean#L323-L332","name":"Lake.fetchFileTrace","line":323,"kind":"def","docLink":"./Lake/Build/Common.html#Lake.fetchFileTrace","doc":"Fetches the trace of a file that may have already have its hash cached\nin a `.hash` file. If no such `.hash` file exists, recomputes and creates it.\n\nIf `text := true`, `file` is hashed as text file rather than a binary file.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Common.html#Lake.fetchFileTrace\"><span class=\"name\">Lake</span>.<span class=\"name\">fetchFileTrace</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">file</span> : <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">text</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Job/Monad.html#Lake.JobM\">JobM</a> <a href=\"./Lake/Build/Trace.html#Lake.BuildTrace\">BuildTrace</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Common.lean#L306-L321","name":"Lake.fetchFileHash","line":306,"kind":"def","docLink":"./Lake/Build/Common.html#Lake.fetchFileHash","doc":"Fetches the hash of a file that may already be cached in a `.hash` file.\nIf hash files are not trusted (e.g., with `--rehash`) or the `.hash` file does\nnot exist, it will be created with a newly computed hash.\n\nIf `text := true`, `file` is hashed as a text file rather than a binary file.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Common.html#Lake.fetchFileHash\"><span class=\"name\">Lake</span>.<span class=\"name\">fetchFileHash</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">file</span> : <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">text</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Job/Monad.html#Lake.JobM\">JobM</a> <a href=\"./Lake/Build/Trace.html#Lake.Hash\">Hash</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Common.lean#L298-L304","name":"Lake.clearFileHash","line":298,"kind":"def","docLink":"./Lake/Build/Common.html#Lake.clearFileHash","doc":"Remove the cached hash of a file (its `.hash` file) if it exists. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Common.html#Lake.clearFileHash\"><span class=\"name\">Lake</span>.<span class=\"name\">clearFileHash</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">file</span> : <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Common.lean#L289-L296","name":"Lake.cacheFileHash","line":289,"kind":"def","docLink":"./Lake/Build/Common.html#Lake.cacheFileHash","doc":"Computes the hash of a file and saves it to a `.hash` file.\n\nIf `text := true`, `file` is hashed as a text file rather than a binary file.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Common.html#Lake.cacheFileHash\"><span class=\"name\">Lake</span>.<span class=\"name\">cacheFileHash</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">file</span> : <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">text</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Common.lean#L283-L287","name":"Lake.writeFileHash","line":283,"kind":"def","docLink":"./Lake/Build/Common.html#Lake.writeFileHash","doc":"Saves the hash of a file and to its `.hash` file. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Common.html#Lake.writeFileHash\"><span class=\"name\">Lake</span>.<span class=\"name\">writeFileHash</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">file</span> : <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hash</span> : <a href=\"./Lake/Build/Trace.html#Lake.Hash\">Hash</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Common.lean#L269-L281","name":"Lake.buildUnlessUpToDate","line":269,"kind":"def","docLink":"./Lake/Build/Common.html#Lake.buildUnlessUpToDate","doc":"Checks whether `info` is up-to-date, and runs `build` to recreate it if not.\nIf rebuilt, saves the new `depTrace` and build log to `traceFile`.\n\nSee `buildUnlessUpToDate?` for more details on how Lake determines whether\n`info` is up-to-date.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Common.html#Lake.buildUnlessUpToDate\"><span class=\"name\">Lake</span>.<span class=\"name\">buildUnlessUpToDate</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.CheckExists\">CheckExists</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.GetMTime\">GetMTime</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">info</span> : <span class=\"fn\">ι</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">depTrace</span> : <a href=\"./Lake/Build/Trace.html#Lake.BuildTrace\">BuildTrace</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">traceFile</span> : <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">build</span> : <span class=\"fn\"><a href=\"./Lake/Build/Job/Monad.html#Lake.JobM\">JobM</a> <a href=\"./Init/Prelude.html#PUnit\">PUnit</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">action</span> : <a href=\"./Lake/Build/Job/Basic.html#Lake.JobAction\">JobAction</a> := <a href=\"./Lake/Build/Job/Basic.html#Lake.JobAction.build\">JobAction.build</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">oldTrace</span> : <a href=\"./Lake/Build/Trace.html#Lake.MTime\">MTime</a> := <span class=\"fn\"><span class=\"fn\">depTrace</span>.<a href=\"./Lake/Build/Trace.html#Lake.BuildTrace.mtime\">mtime</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Job/Monad.html#Lake.JobM\">JobM</a> <a href=\"./Init/Prelude.html#PUnit\">PUnit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Common.lean#L242-L267","name":"Lake.buildUnlessUpToDate?","line":242,"kind":"def","docLink":"./Lake/Build/Common.html#Lake.buildUnlessUpToDate?","doc":"Checks whether `info` is up-to-date, and runs `build` to recreate it if not.\nIf rebuilt, saves the new `depTrace` and build log to `traceFile`.\nReturns whether `info` was already up-to-date.\n\n**Up-to-date Checking**\n\nIf `traceFile` exists, checks that the hash in `depTrace` matches that\nof the `traceFile`. If not, and old mode is enabled (e.g., `--old`), falls back\nto the `oldTrace` modification time as the point of comparison.\nIf up-to-date, replay the build log stored in `traceFile`.\n\nIf `traceFile` does not exist, checks that `info` has a newer modification time\nthen `depTrace` / `oldTrace`. No log will be replayed.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Common.html#Lake.buildUnlessUpToDate?\"><span class=\"name\">Lake</span>.<span class=\"name\">buildUnlessUpToDate?</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.CheckExists\">CheckExists</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.GetMTime\">GetMTime</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">info</span> : <span class=\"fn\">ι</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">depTrace</span> : <a href=\"./Lake/Build/Trace.html#Lake.BuildTrace\">BuildTrace</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">traceFile</span> : <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">build</span> : <span class=\"fn\"><a href=\"./Lake/Build/Job/Monad.html#Lake.JobM\">JobM</a> <a href=\"./Init/Prelude.html#PUnit\">PUnit</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">action</span> : <a href=\"./Lake/Build/Job/Basic.html#Lake.JobAction\">JobAction</a> := <a href=\"./Lake/Build/Job/Basic.html#Lake.JobAction.build\">JobAction.build</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">oldTrace</span> : <a href=\"./Lake/Build/Trace.html#Lake.MTime\">MTime</a> := <span class=\"fn\"><span class=\"fn\">depTrace</span>.<a href=\"./Lake/Build/Trace.html#Lake.BuildTrace.mtime\">mtime</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Job/Monad.html#Lake.JobM\">JobM</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Common.lean#L221-L240","name":"Lake.buildAction","line":221,"kind":"def","docLink":"./Lake/Build/Common.html#Lake.buildAction","doc":"Runs `build` as a build action of kind `action`.\n\nThe build's input trace (`depTrace`), output hashes (the result of `build`),\nand log are saved to `traceFile`, if the build completes without a fatal error\n(i.e., it does not `throw`).\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Common.html#Lake.buildAction\"><span class=\"name\">Lake</span>.<span class=\"name\">buildAction</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Data/Json/FromToJson.html#Lean.ToJson\">Lean.ToJson</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">depTrace</span> : <a href=\"./Lake/Build/Trace.html#Lake.BuildTrace\">BuildTrace</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">traceFile</span> : <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">build</span> : <span class=\"fn\"><a href=\"./Lake/Build/Job/Monad.html#Lake.JobM\">JobM</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">action</span> : <a href=\"./Lake/Build/Job/Basic.html#Lake.JobAction\">JobAction</a> := <a href=\"./Lake/Build/Job/Basic.html#Lake.JobAction.build\">JobAction.build</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Job/Monad.html#Lake.JobM\">JobM</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Common.lean#L204-L219","name":"Lake.SavedTrace.replayOrFetch","line":204,"kind":"def","docLink":"./Lake/Build/Common.html#Lake.SavedTrace.replayOrFetch","doc":"Replays the saved log from the trace if it exists and is not synthetic.\nOtherwise, writes a new synthetic trace file recording the fetch of the artifact from the cache.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Common.html#Lake.SavedTrace.replayOrFetch\"><span class=\"name\">Lake</span>.<span class=\"name\">SavedTrace</span>.<span class=\"name\">replayOrFetch</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">traceFile</span> : <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">inputHash</span> : <a href=\"./Lake/Build/Trace.html#Lake.Hash\">Hash</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">outputs</span> : <a href=\"./Lean/Data/Json/Basic.html#Lean.Json\">Lean.Json</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">savedTrace</span> : <a href=\"./Lake/Build/Common.html#Lake.SavedTrace\">SavedTrace</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Job/Monad.html#Lake.JobM\">JobM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Common.lean#L185-L202","name":"Lake.SavedTrace.replayIfUpToDate","line":185,"kind":"def","docLink":"./Lake/Build/Common.html#Lake.SavedTrace.replayIfUpToDate","doc":"Checks whether `info` is up-to-date, and replays the log of the trace if available. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Common.html#Lake.SavedTrace.replayIfUpToDate\"><span class=\"name\">Lake</span>.<span class=\"name\">SavedTrace</span>.<span class=\"name\">replayIfUpToDate</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.CheckExists\">CheckExists</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.GetMTime\">GetMTime</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">info</span> : <span class=\"fn\">ι</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">depTrace</span> : <a href=\"./Lake/Build/Trace.html#Lake.BuildTrace\">BuildTrace</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">savedTrace</span> : <a href=\"./Lake/Build/Common.html#Lake.SavedTrace\">SavedTrace</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">oldTrace</span> : <a href=\"./Lake/Build/Trace.html#Lake.MTime\">MTime</a> := <span class=\"fn\"><span class=\"fn\">depTrace</span>.<a href=\"./Lake/Build/Trace.html#Lake.BuildTrace.mtime\">mtime</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Job/Monad.html#Lake.JobM\">JobM</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Common.lean#L168-L183","name":"Lake.checkHashUpToDate","line":168,"kind":"def","docLink":"./Lake/Build/Common.html#Lake.checkHashUpToDate","doc":"Checks if the `info` is up-to-date by comparing `depTrace` with `depHash`.\nIf old mode is enabled (e.g., `--old`), uses the `oldTrace` modification time\nas the point of comparison instead.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Common.html#Lake.checkHashUpToDate\"><span class=\"name\">Lake</span>.<span class=\"name\">checkHashUpToDate</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.CheckExists\">CheckExists</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.GetMTime\">GetMTime</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">info</span> : <span class=\"fn\">ι</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">depTrace</span> : <a href=\"./Lake/Build/Trace.html#Lake.BuildTrace\">BuildTrace</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">depHash</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lake/Build/Trace.html#Lake.Hash\">Hash</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">oldTrace</span> : <a href=\"./Lake/Build/Trace.html#Lake.MTime\">MTime</a> := <span class=\"fn\"><span class=\"fn\">depTrace</span>.<a href=\"./Lake/Build/Trace.html#Lake.BuildTrace.mtime\">mtime</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Job/Monad.html#Lake.JobM\">JobM</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Common.lean#L165-L166","name":"Lake.writeTraceFile","line":165,"kind":"def","docLink":"./Lake/Build/Common.html#Lake.writeTraceFile","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Common.html#Lake.writeTraceFile\"><span class=\"name\">Lake</span>.<span class=\"name\">writeTraceFile</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Data/Json/FromToJson.html#Lean.ToJson\">Lean.ToJson</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">path</span> : <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">depTrace</span> : <a href=\"./Lake/Build/Trace.html#Lake.BuildTrace\">BuildTrace</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">outputs</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">log</span> : <a href=\"./Lake/Util/Log.html#Lake.Log\">Log</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Common.lean#L160-L163","name":"Lake.writeBuildTrace","line":160,"kind":"def","docLink":"./Lake/Build/Common.html#Lake.writeBuildTrace","doc":"Write a trace file containing metadata about a build. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Common.html#Lake.writeBuildTrace\"><span class=\"name\">Lake</span>.<span class=\"name\">writeBuildTrace</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Data/Json/FromToJson.html#Lean.ToJson\">Lean.ToJson</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">path</span> : <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">depTrace</span> : <a href=\"./Lake/Build/Trace.html#Lake.BuildTrace\">BuildTrace</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">outputs</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">log</span> : <a href=\"./Lake/Util/Log.html#Lake.Log\">Log</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Common.lean#L156-L158","name":"Lake.writeFetchTrace","line":156,"kind":"def","docLink":"./Lake/Build/Common.html#Lake.writeFetchTrace","doc":"Write a trace file containing metadata on an artifact fetched from a cache. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Common.html#Lake.writeFetchTrace\"><span class=\"name\">Lake</span>.<span class=\"name\">writeFetchTrace</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">path</span> : <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">inputHash</span> : <a href=\"./Lake/Build/Trace.html#Lake.Hash\">Hash</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">outputs</span> : <a href=\"./Lean/Data/Json/Basic.html#Lean.Json\">Lean.Json</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Common.lean#L151-L154","name":"Lake.BuildMetadata.writeFile","line":151,"kind":"def","docLink":"./Lake/Build/Common.html#Lake.BuildMetadata.writeFile","doc":"Write a trace file containing the metadata. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Common.html#Lake.BuildMetadata.writeFile\"><span class=\"name\">Lake</span>.<span class=\"name\">BuildMetadata</span>.<span class=\"name\">writeFile</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">path</span> : <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">data</span> : <a href=\"./Lake/Build/Common.html#Lake.BuildMetadata\">BuildMetadata</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Common.lean#L143-L149","name":"Lake.readTraceFile?","line":143,"kind":"def","docLink":"./Lake/Build/Common.html#Lake.readTraceFile?","doc":"Tries to read data from a trace file. On failure, returns `none`.\nLogs if the read failed or the contents where invalid.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Common.html#Lake.readTraceFile?\"><span class=\"name\">Lake</span>.<span class=\"name\">readTraceFile?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">path</span> : <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Util/Log.html#Lake.LogIO\">LogIO</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lake/Build/Common.html#Lake.BuildMetadata\">BuildMetadata</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Common.lean#L130-L141","name":"Lake.readTraceFile","line":130,"kind":"def","docLink":"./Lake/Build/Common.html#Lake.readTraceFile","doc":"Try to read data from a trace file.\nLogs if the read failed or the contents where invalid.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Common.html#Lake.readTraceFile\"><span class=\"name\">Lake</span>.<span class=\"name\">readTraceFile</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">path</span> : <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Util/Log.html#Lake.LogIO\">LogIO</a> <a href=\"./Lake/Build/Common.html#Lake.SavedTrace\">SavedTrace</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Common.lean#L128-L128","name":"Lake.SavedTrace.ok","line":128,"kind":"ctor","docLink":"./Lake/Build/Common.html#Lake.SavedTrace.ok","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Common.html#Lake.SavedTrace.ok\"><span class=\"name\">Lake</span>.<span class=\"name\">SavedTrace</span>.<span class=\"name\">ok</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">data</span> : <a href=\"./Lake/Build/Common.html#Lake.BuildMetadata\">BuildMetadata</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lake/Build/Common.html#Lake.SavedTrace\">SavedTrace</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Common.lean#L127-L127","name":"Lake.SavedTrace.invalid","line":127,"kind":"ctor","docLink":"./Lake/Build/Common.html#Lake.SavedTrace.invalid","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Common.html#Lake.SavedTrace.invalid\"><span class=\"name\">Lake</span>.<span class=\"name\">SavedTrace</span>.<span class=\"name\">invalid</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lake/Build/Common.html#Lake.SavedTrace\">SavedTrace</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Common.lean#L126-L126","name":"Lake.SavedTrace.missing","line":126,"kind":"ctor","docLink":"./Lake/Build/Common.html#Lake.SavedTrace.missing","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Common.html#Lake.SavedTrace.missing\"><span class=\"name\">Lake</span>.<span class=\"name\">SavedTrace</span>.<span class=\"name\">missing</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lake/Build/Common.html#Lake.SavedTrace\">SavedTrace</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Common.lean#L124-L128","name":"Lake.SavedTrace","line":124,"kind":"inductive","docLink":"./Lake/Build/Common.html#Lake.SavedTrace","doc":"The state of the trace file data saved on the file system. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Common.html#Lake.SavedTrace\"><span class=\"name\">Lake</span>.<span class=\"name\">SavedTrace</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Common.lean#L119-L122","name":"Lake.BuildMetadata.ofBuild","line":119,"kind":"def","docLink":"./Lake/Build/Common.html#Lake.BuildMetadata.ofBuild","doc":"Construct trace file contents from a build's trace, outputs, and log. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Common.html#Lake.BuildMetadata.ofBuild\"><span class=\"name\">Lake</span>.<span class=\"name\">BuildMetadata</span>.<span class=\"name\">ofBuild</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Data/Json/FromToJson.html#Lean.ToJson\">Lean.ToJson</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">depTrace</span> : <a href=\"./Lake/Build/Trace.html#Lake.BuildTrace\">BuildTrace</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">outputs</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">log</span> : <a href=\"./Lake/Util/Log.html#Lake.Log\">Log</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lake/Build/Common.html#Lake.BuildMetadata\">BuildMetadata</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Common.lean#L97-L99","name":"Lake.BuildMetadata.ofFetch","line":97,"kind":"def","docLink":"./Lake/Build/Common.html#Lake.BuildMetadata.ofFetch","doc":"Construct build metadata from a cached input-to-output mapping. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Common.html#Lake.BuildMetadata.ofFetch\"><span class=\"name\">Lake</span>.<span class=\"name\">BuildMetadata</span>.<span class=\"name\">ofFetch</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">inputHash</span> : <a href=\"./Lake/Build/Trace.html#Lake.Hash\">Hash</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">outputs</span> : <a href=\"./Lean/Data/Json/Basic.html#Lean.Json\">Lean.Json</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lake/Build/Common.html#Lake.BuildMetadata\">BuildMetadata</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Common.lean#L90-L95","name":"Lake.BuildMetadata.parse","line":90,"kind":"def","docLink":"./Lake/Build/Common.html#Lake.BuildMetadata.parse","doc":"Parse build metadata from a trace file's contents. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Common.html#Lake.BuildMetadata.parse\"><span class=\"name\">Lake</span>.<span class=\"name\">BuildMetadata</span>.<span class=\"name\">parse</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">contents</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Except\">Except</a> <a href=\"./Init/Prelude.html#String\">String</a> <a href=\"./Lake/Build/Common.html#Lake.BuildMetadata\">BuildMetadata</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Common.lean#L87-L88","name":"Lake.BuildMetadata.ofHash","line":87,"kind":"def","docLink":"./Lake/Build/Common.html#Lake.BuildMetadata.ofHash","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Common.html#Lake.BuildMetadata.ofHash\"><span class=\"name\">Lake</span>.<span class=\"name\">BuildMetadata</span>.<span class=\"name\">ofHash</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hash</span> : <a href=\"./Lake/Build/Trace.html#Lake.Hash\">Hash</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lake/Build/Common.html#Lake.BuildMetadata\">BuildMetadata</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Common.lean#L80-L85","name":"Lake.BuildMetadata.ofStub","line":80,"kind":"def","docLink":"./Lake/Build/Common.html#Lake.BuildMetadata.ofStub","doc":"Construct build metadata from a trace stub.\nThat is, the old version of the trace file format that just contained a hash.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Common.html#Lake.BuildMetadata.ofStub\"><span class=\"name\">Lake</span>.<span class=\"name\">BuildMetadata</span>.<span class=\"name\">ofStub</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hash</span> : <a href=\"./Lake/Build/Trace.html#Lake.Hash\">Hash</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lake/Build/Common.html#Lake.BuildMetadata\">BuildMetadata</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Common.lean#L78-L78","name":"Lake.instFromJsonBuildMetadata","line":78,"kind":"instance","docLink":"./Lake/Build/Common.html#Lake.instFromJsonBuildMetadata","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Common.html#Lake.instFromJsonBuildMetadata\"><span class=\"name\">Lake</span>.<span class=\"name\">instFromJsonBuildMetadata</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Json/FromToJson.html#Lean.FromJson\">Lean.FromJson</a> <a href=\"./Lake/Build/Common.html#Lake.BuildMetadata\">BuildMetadata</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Common.lean#L69-L76","name":"Lake.BuildMetadata.fromJson?","line":69,"kind":"def","docLink":"./Lake/Build/Common.html#Lake.BuildMetadata.fromJson?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Common.html#Lake.BuildMetadata.fromJson?\"><span class=\"name\">Lake</span>.<span class=\"name\">BuildMetadata</span>.<span class=\"name\">fromJson?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">json</span> : <a href=\"./Lean/Data/Json/Basic.html#Lean.Json\">Lean.Json</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Except\">Except</a> <a href=\"./Init/Prelude.html#String\">String</a> <a href=\"./Lake/Build/Common.html#Lake.BuildMetadata\">BuildMetadata</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Common.lean#L67-L67","name":"Lake.instToJsonBuildMetadata","line":67,"kind":"instance","docLink":"./Lake/Build/Common.html#Lake.instToJsonBuildMetadata","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Common.html#Lake.instToJsonBuildMetadata\"><span class=\"name\">Lake</span>.<span class=\"name\">instToJsonBuildMetadata</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Json/FromToJson.html#Lean.ToJson\">Lean.ToJson</a> <a href=\"./Lake/Build/Common.html#Lake.BuildMetadata\">BuildMetadata</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Common.lean#L66-L66","name":"Lake.BuildMetadata.synthetic","line":66,"kind":"def","docLink":"./Lake/Build/Common.html#Lake.BuildMetadata.synthetic","doc":"A trace file that was created from fetching an artifact from the cache. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Common.html#Lake.BuildMetadata.synthetic\"><span class=\"name\">Lake</span>.<span class=\"name\">BuildMetadata</span>.<span class=\"name\">synthetic</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lake/Build/Common.html#Lake.BuildMetadata\">BuildMetadata</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Common.lean#L64-L64","name":"Lake.BuildMetadata.log","line":64,"kind":"def","docLink":"./Lake/Build/Common.html#Lake.BuildMetadata.log","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Common.html#Lake.BuildMetadata.log\"><span class=\"name\">Lake</span>.<span class=\"name\">BuildMetadata</span>.<span class=\"name\">log</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lake/Build/Common.html#Lake.BuildMetadata\">BuildMetadata</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lake/Util/Log.html#Lake.Log\">Log</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Common.lean#L63-L63","name":"Lake.BuildMetadata.outputs?","line":63,"kind":"def","docLink":"./Lake/Build/Common.html#Lake.BuildMetadata.outputs?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Common.html#Lake.BuildMetadata.outputs?\"><span class=\"name\">Lake</span>.<span class=\"name\">BuildMetadata</span>.<span class=\"name\">outputs?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lake/Build/Common.html#Lake.BuildMetadata\">BuildMetadata</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Data/Json/Basic.html#Lean.Json\">Lean.Json</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Common.lean#L62-L62","name":"Lake.BuildMetadata.inputs","line":62,"kind":"def","docLink":"./Lake/Build/Common.html#Lake.BuildMetadata.inputs","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Common.html#Lake.BuildMetadata.inputs\"><span class=\"name\">Lake</span>.<span class=\"name\">BuildMetadata</span>.<span class=\"name\">inputs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lake/Build/Common.html#Lake.BuildMetadata\">BuildMetadata</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> (<a href=\"./Init/Prelude.html#String\">String</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Data/Json/Basic.html#Lean.Json\">Lean.Json</a>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Common.lean#L61-L61","name":"Lake.BuildMetadata.depHash","line":61,"kind":"def","docLink":"./Lake/Build/Common.html#Lake.BuildMetadata.depHash","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Common.html#Lake.BuildMetadata.depHash\"><span class=\"name\">Lake</span>.<span class=\"name\">BuildMetadata</span>.<span class=\"name\">depHash</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lake/Build/Common.html#Lake.BuildMetadata\">BuildMetadata</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lake/Build/Trace.html#Lake.Hash\">Hash</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Common.lean#L60-L60","name":"Lake.BuildMetadata.mk","line":60,"kind":"ctor","docLink":"./Lake/Build/Common.html#Lake.BuildMetadata.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Common.html#Lake.BuildMetadata.mk\"><span class=\"name\">Lake</span>.<span class=\"name\">BuildMetadata</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">depHash</span> : <a href=\"./Lake/Build/Trace.html#Lake.Hash\">Hash</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">inputs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> (<a href=\"./Init/Prelude.html#String\">String</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Data/Json/Basic.html#Lean.Json\">Lean.Json</a>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">outputs?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Data/Json/Basic.html#Lean.Json\">Lean.Json</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">log</span> : <a href=\"./Lake/Util/Log.html#Lake.Log\">Log</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">synthetic</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lake/Build/Common.html#Lake.BuildMetadata\">BuildMetadata</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Common.lean#L56-L67","name":"Lake.BuildMetadata","line":56,"kind":"structure","docLink":"./Lake/Build/Common.html#Lake.BuildMetadata","doc":"The build trace file format,\nwhich stores information about a (successful) build.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Common.html#Lake.BuildMetadata\"><span class=\"name\">Lake</span>.<span class=\"name\">BuildMetadata</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Common.lean#L51-L54","name":"Lake.addPureTrace","line":51,"kind":"def","docLink":"./Lake/Build/Common.html#Lake.addPureTrace","doc":"Mixes the trace of a pure value into the current job's trace. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Common.html#Lake.addPureTrace\"><span class=\"name\">Lake</span>.<span class=\"name\">addPureTrace</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString\">ToString</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.ComputeHash\">ComputeHash</a> <span class=\"fn\">α</span> <a href=\"./Init/Control/Id.html#Id\">Id</a></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">caption</span> : <a href=\"./Init/Prelude.html#String\">String</a> := <span class=\"fn\">&quot;pure&quot;</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Job/Monad.html#Lake.JobM\">JobM</a> <a href=\"./Init/Prelude.html#PUnit\">PUnit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Common.lean#L47-L49","name":"Lake.addLeanTrace","line":47,"kind":"def","docLink":"./Lake/Build/Common.html#Lake.addLeanTrace","doc":"Mixes Lean's trace into the current job's trace. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Common.html#Lake.addLeanTrace\"><span class=\"name\">Lake</span>.<span class=\"name\">addLeanTrace</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Job/Monad.html#Lake.JobM\">JobM</a> <a href=\"./Init/Prelude.html#PUnit\">PUnit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Common.lean#L39-L45","name":"Lake.addPlatformTrace","line":39,"kind":"def","docLink":"./Lake/Build/Common.html#Lake.addPlatformTrace","doc":"Mixes the platform into the current job's trace.\nIf an artifact includes this trace, it is platform-dependent\nand will be rebuilt on different host platforms.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Common.html#Lake.addPlatformTrace\"><span class=\"name\">Lake</span>.<span class=\"name\">addPlatformTrace</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Job/Monad.html#Lake.JobM\">JobM</a> <a href=\"./Init/Prelude.html#PUnit\">PUnit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Common.lean#L32-L37","name":"Lake.platformTrace","line":32,"kind":"def","docLink":"./Lake/Build/Common.html#Lake.platformTrace","doc":"Build trace for the host platform.\nIf an artifact includes this trace, it is platform-dependent\nand will be rebuilt on different host platforms.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Common.html#Lake.platformTrace\"><span class=\"name\">Lake</span>.<span class=\"name\">platformTrace</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lake/Build/Trace.html#Lake.BuildTrace\">BuildTrace</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Common.lean#L28-L29","name":"Lake.noBuildCode","line":28,"kind":"def","docLink":"./Lake/Build/Common.html#Lake.noBuildCode","doc":"Exit code to return if `--no-build` is set and a build is required. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Common.html#Lake.noBuildCode\"><span class=\"name\">Lake</span>.<span class=\"name\">noBuildCode</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lake/Util/Exit.html#Lake.ExitCode\">ExitCode</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Common.lean#L26-L26","name":"Lake.instToJsonPUnit_lake","line":26,"kind":"def","docLink":"./Lake/Build/Common.html#Lake.instToJsonPUnit_lake","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Common.html#Lake.instToJsonPUnit_lake\"><span class=\"name\">Lake</span>.<span class=\"name\">instToJsonPUnit_lake</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Json/FromToJson.html#Lean.ToJson\">Lean.ToJson</a> <a href=\"./Init/Prelude.html#PUnit\">PUnit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Common.lean#L24-L24","name":"Lake.instMonadWorkspaceJobM","line":24,"kind":"instance","docLink":"./Lake/Build/Common.html#Lake.instMonadWorkspaceJobM","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Common.html#Lake.instMonadWorkspaceJobM\"><span class=\"name\">Lake</span>.<span class=\"name\">instMonadWorkspaceJobM</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Config/Monad.html#Lake.MonadWorkspace\">MonadWorkspace</a> <a href=\"./Lake/Build/Job/Monad.html#Lake.JobM\">JobM</a></span></div></div>"}]}