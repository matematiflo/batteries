{"name":"Lean.Language.Lean.Types","instances":[{"typeNames":["Lean.Language.Lean.CommandResultSnapshot"],"name":"Lean.Language.Lean.instNonemptyCommandResultSnapshot","className":"Nonempty"},{"typeNames":["Lean.Language.Lean.CommandResultSnapshot"],"name":"Lean.Language.Lean.instToSnapshotTreeCommandResultSnapshot","className":"Lean.Language.ToSnapshotTree"},{"typeNames":["Lean.Language.Lean.CommandElaboratingSnapshot"],"name":"Lean.Language.Lean.instNonemptyCommandElaboratingSnapshot","className":"Nonempty"},{"typeNames":["Lean.Language.Lean.CommandElaboratingSnapshot"],"name":"Lean.Language.Lean.instToSnapshotTreeCommandElaboratingSnapshot","className":"Lean.Language.ToSnapshotTree"},{"typeNames":["Lean.Language.Lean.CommandParsedSnapshot"],"name":"Lean.Language.Lean.instNonemptyCommandParsedSnapshot","className":"Nonempty"},{"typeNames":["Lean.Language.Lean.CommandParsedSnapshot"],"name":"Lean.Language.Lean.instToSnapshotTreeCommandParsedSnapshot","className":"Lean.Language.ToSnapshotTree"},{"typeNames":["Lean.Language.Lean.HeaderProcessedSnapshot"],"name":"Lean.Language.Lean.instToSnapshotTreeHeaderProcessedSnapshot","className":"Lean.Language.ToSnapshotTree"},{"typeNames":["Lean.Language.Lean.HeaderParsedSnapshot"],"name":"Lean.Language.Lean.instToSnapshotTreeHeaderParsedSnapshot","className":"Lean.Language.ToSnapshotTree"}],"imports":["Lean.Language.Basic","Lean.Elab.Command"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Language/Lean/Types.lean#L135-L136","name":"Lean.Language.Lean.InitialSnapshot","line":135,"kind":"def","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.InitialSnapshot","doc":"Initial snapshot of the Lean language processor: a \"header parsed\" snapshot. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.InitialSnapshot\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">InitialSnapshot</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Language/Lean/Types.lean#L130-L133","name":"Lean.Language.Lean.HeaderParsedSnapshot.processedResult","line":130,"kind":"def","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedSnapshot.processedResult","doc":"Shortcut accessor to the final header state, if successful. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedSnapshot.processedResult\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">HeaderParsedSnapshot</span>.<span class=\"name\">processedResult</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">snap</span> : <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedSnapshot\">HeaderParsedSnapshot</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask\">SnapshotTask</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderProcessedState\">HeaderProcessedState</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Language/Lean/Types.lean#L126-L128","name":"Lean.Language.Lean.instToSnapshotTreeHeaderParsedSnapshot","line":126,"kind":"instance","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.instToSnapshotTreeHeaderParsedSnapshot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.instToSnapshotTreeHeaderParsedSnapshot\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">instToSnapshotTreeHeaderParsedSnapshot</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.ToSnapshotTree\">ToSnapshotTree</a> <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedSnapshot\">HeaderParsedSnapshot</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Language/Lean/Types.lean#L123-L123","name":"Lean.Language.Lean.HeaderParsedSnapshot.result?","line":123,"kind":"def","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedSnapshot.result?","doc":"State after successful parsing. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedSnapshot.result?\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">HeaderParsedSnapshot</span>.<span class=\"name\">result?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedSnapshot\">HeaderParsedSnapshot</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedState\">HeaderParsedState</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Language/Lean/Types.lean#L121-L121","name":"Lean.Language.Lean.HeaderParsedSnapshot.stx","line":121,"kind":"def","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedSnapshot.stx","doc":"Resulting syntax tree. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedSnapshot.stx\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">HeaderParsedSnapshot</span>.<span class=\"name\">stx</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedSnapshot\">HeaderParsedSnapshot</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Language/Lean/Types.lean#L119-L119","name":"Lean.Language.Lean.HeaderParsedSnapshot.ictx","line":119,"kind":"def","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedSnapshot.ictx","doc":"Parser input context supplied by the driver, stored here for incremental parsing. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedSnapshot.ictx\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">HeaderParsedSnapshot</span>.<span class=\"name\">ictx</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedSnapshot\">HeaderParsedSnapshot</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.InputContext\">Parser.InputContext</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Language/Lean/Types.lean#L117-L117","name":"Lean.Language.Lean.HeaderParsedSnapshot.metaSnap","line":117,"kind":"def","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedSnapshot.metaSnap","doc":"Holds produced diagnostics. Separate snapshot so that it can be tagged with the header syntax,\nwhich should not be done for this snapshot containing `firstCmdSnap`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedSnapshot.metaSnap\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">HeaderParsedSnapshot</span>.<span class=\"name\">metaSnap</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedSnapshot\">HeaderParsedSnapshot</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask\">SnapshotTask</a> <a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotLeaf\">SnapshotLeaf</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Language/Lean/Types.lean#L112-L112","name":"Lean.Language.Lean.HeaderParsedSnapshot.mk","line":112,"kind":"ctor","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedSnapshot.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedSnapshot.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">HeaderParsedSnapshot</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">toSnapshot</span> : <a href=\"./Lean/Language/Basic.html#Lean.Language.Snapshot\">Snapshot</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">metaSnap</span> : <span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask\">SnapshotTask</a> <a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotLeaf\">SnapshotLeaf</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ictx</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.InputContext\">Parser.InputContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stx</span> : <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">result?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedState\">HeaderParsedState</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedSnapshot\">HeaderParsedSnapshot</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Language/Lean/Types.lean#L112-L124","name":"Lean.Language.Lean.HeaderParsedSnapshot.toSnapshot","line":112,"kind":"def","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedSnapshot.toSnapshot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedSnapshot.toSnapshot\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">HeaderParsedSnapshot</span>.<span class=\"name\">toSnapshot</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedSnapshot\">HeaderParsedSnapshot</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Language/Basic.html#Lean.Language.Snapshot\">Snapshot</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Language/Lean/Types.lean#L111-L124","name":"Lean.Language.Lean.HeaderParsedSnapshot","line":111,"kind":"structure","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedSnapshot","doc":"State after the module header has been parsed. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedSnapshot\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">HeaderParsedSnapshot</span></a></span><span class=\"decl_extends\">extends</span> <a href=\"./Lean/Language/Basic.html#Lean.Language.Snapshot\">Lean.Language.Snapshot</a><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Language/Lean/Types.lean#L109-L109","name":"Lean.Language.Lean.HeaderParsedState.processedSnap","line":109,"kind":"def","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedState.processedSnap","doc":"Header processing task. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedState.processedSnap\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">HeaderParsedState</span>.<span class=\"name\">processedSnap</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedState\">HeaderParsedState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask\">SnapshotTask</a> <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderProcessedSnapshot\">HeaderProcessedSnapshot</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Language/Lean/Types.lean#L107-L107","name":"Lean.Language.Lean.HeaderParsedState.parserState","line":107,"kind":"def","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedState.parserState","doc":"Resulting parser state. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedState.parserState\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">HeaderParsedState</span>.<span class=\"name\">parserState</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedState\">HeaderParsedState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Module.html#Lean.Parser.ModuleParserState\">Parser.ModuleParserState</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Language/Lean/Types.lean#L105-L105","name":"Lean.Language.Lean.HeaderParsedState.mk","line":105,"kind":"ctor","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedState.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedState.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">HeaderParsedState</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">parserState</span> : <a href=\"./Lean/Parser/Module.html#Lean.Parser.ModuleParserState\">Parser.ModuleParserState</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">processedSnap</span> : <span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask\">SnapshotTask</a> <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderProcessedSnapshot\">HeaderProcessedSnapshot</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedState\">HeaderParsedState</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Language/Lean/Types.lean#L104-L109","name":"Lean.Language.Lean.HeaderParsedState","line":104,"kind":"structure","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedState","doc":"State after successfully parsing the module header. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedState\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">HeaderParsedState</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Language/Lean/Types.lean#L100-L102","name":"Lean.Language.Lean.instToSnapshotTreeHeaderProcessedSnapshot","line":100,"kind":"instance","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.instToSnapshotTreeHeaderProcessedSnapshot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.instToSnapshotTreeHeaderProcessedSnapshot\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">instToSnapshotTreeHeaderProcessedSnapshot</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.ToSnapshotTree\">ToSnapshotTree</a> <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderProcessedSnapshot\">HeaderProcessedSnapshot</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Language/Lean/Types.lean#L98-L98","name":"Lean.Language.Lean.HeaderProcessedSnapshot.result?","line":98,"kind":"def","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderProcessedSnapshot.result?","doc":"State after successful importing. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderProcessedSnapshot.result?\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">HeaderProcessedSnapshot</span>.<span class=\"name\">result?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderProcessedSnapshot\">HeaderProcessedSnapshot</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderProcessedState\">HeaderProcessedState</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Language/Lean/Types.lean#L96-L96","name":"Lean.Language.Lean.HeaderProcessedSnapshot.metaSnap","line":96,"kind":"def","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderProcessedSnapshot.metaSnap","doc":"Holds produced diagnostics and info tree. Separate snapshot so that it can be tagged with the\nheader syntax, which should not be done for this snapshot containing `firstCmdSnap`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderProcessedSnapshot.metaSnap\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">HeaderProcessedSnapshot</span>.<span class=\"name\">metaSnap</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderProcessedSnapshot\">HeaderProcessedSnapshot</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask\">SnapshotTask</a> <a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotLeaf\">SnapshotLeaf</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Language/Lean/Types.lean#L91-L91","name":"Lean.Language.Lean.HeaderProcessedSnapshot.mk","line":91,"kind":"ctor","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderProcessedSnapshot.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderProcessedSnapshot.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">HeaderProcessedSnapshot</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">toSnapshot</span> : <a href=\"./Lean/Language/Basic.html#Lean.Language.Snapshot\">Snapshot</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">metaSnap</span> : <span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask\">SnapshotTask</a> <a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotLeaf\">SnapshotLeaf</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">result?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderProcessedState\">HeaderProcessedState</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderProcessedSnapshot\">HeaderProcessedSnapshot</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Language/Lean/Types.lean#L91-L99","name":"Lean.Language.Lean.HeaderProcessedSnapshot.toSnapshot","line":91,"kind":"def","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderProcessedSnapshot.toSnapshot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderProcessedSnapshot.toSnapshot\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">HeaderProcessedSnapshot</span>.<span class=\"name\">toSnapshot</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderProcessedSnapshot\">HeaderProcessedSnapshot</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Language/Basic.html#Lean.Language.Snapshot\">Snapshot</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Language/Lean/Types.lean#L90-L99","name":"Lean.Language.Lean.HeaderProcessedSnapshot","line":90,"kind":"structure","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderProcessedSnapshot","doc":"State after the module header has been processed including imports. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderProcessedSnapshot\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">HeaderProcessedSnapshot</span></a></span><span class=\"decl_extends\">extends</span> <a href=\"./Lean/Language/Basic.html#Lean.Language.Snapshot\">Lean.Language.Snapshot</a><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Language/Lean/Types.lean#L88-L88","name":"Lean.Language.Lean.HeaderProcessedState.firstCmdSnap","line":88,"kind":"def","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderProcessedState.firstCmdSnap","doc":"First command task (there is always at least a terminal command). "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderProcessedState.firstCmdSnap\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">HeaderProcessedState</span>.<span class=\"name\">firstCmdSnap</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderProcessedState\">HeaderProcessedState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask\">SnapshotTask</a> <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandParsedSnapshot\">CommandParsedSnapshot</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Language/Lean/Types.lean#L86-L86","name":"Lean.Language.Lean.HeaderProcessedState.cmdState","line":86,"kind":"def","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderProcessedState.cmdState","doc":"The resulting initial elaboration state. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderProcessedState.cmdState\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">HeaderProcessedState</span>.<span class=\"name\">cmdState</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderProcessedState\">HeaderProcessedState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.State\">Elab.Command.State</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Language/Lean/Types.lean#L84-L84","name":"Lean.Language.Lean.HeaderProcessedState.mk","line":84,"kind":"ctor","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderProcessedState.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderProcessedState.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">HeaderProcessedState</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cmdState</span> : <a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.State\">Elab.Command.State</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">firstCmdSnap</span> : <span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask\">SnapshotTask</a> <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandParsedSnapshot\">CommandParsedSnapshot</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderProcessedState\">HeaderProcessedState</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Language/Lean/Types.lean#L83-L88","name":"Lean.Language.Lean.HeaderProcessedState","line":83,"kind":"structure","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderProcessedState","doc":"State after successful importing. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderProcessedState\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">HeaderProcessedState</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Language/Lean/Types.lean#L79-L81","name":"Lean.Language.Lean.instToSnapshotTreeCommandParsedSnapshot.go","line":79,"kind":"opaque","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.instToSnapshotTreeCommandParsedSnapshot.go","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.instToSnapshotTreeCommandParsedSnapshot.go\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">instToSnapshotTreeCommandParsedSnapshot</span>.<span class=\"name\">go</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandParsedSnapshot\">CommandParsedSnapshot</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTree\">SnapshotTree</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Language/Lean/Types.lean#L77-L81","name":"Lean.Language.Lean.instToSnapshotTreeCommandParsedSnapshot","line":77,"kind":"instance","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.instToSnapshotTreeCommandParsedSnapshot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.instToSnapshotTreeCommandParsedSnapshot\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">instToSnapshotTreeCommandParsedSnapshot</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.ToSnapshotTree\">ToSnapshotTree</a> <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandParsedSnapshot\">CommandParsedSnapshot</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Language/Lean/Types.lean#L76-L76","name":"Lean.Language.Lean.instNonemptyCommandParsedSnapshot","line":76,"kind":"instance","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.instNonemptyCommandParsedSnapshot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.instNonemptyCommandParsedSnapshot\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">instNonemptyCommandParsedSnapshot</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandParsedSnapshot\">CommandParsedSnapshot</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Language/Lean/Types.lean#L75-L75","name":"Lean.Language.Lean.CommandParsedSnapshot.nextCmdSnap?","line":75,"kind":"def","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandParsedSnapshot.nextCmdSnap?","doc":"Next command, unless this is a terminal command. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandParsedSnapshot.nextCmdSnap?\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">CommandParsedSnapshot</span>.<span class=\"name\">nextCmdSnap?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandParsedSnapshot\">CommandParsedSnapshot</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask\">SnapshotTask</a> <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandParsedSnapshot\">CommandParsedSnapshot</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Language/Lean/Types.lean#L73-L73","name":"Lean.Language.Lean.CommandParsedSnapshot.elabSnap","line":73,"kind":"def","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandParsedSnapshot.elabSnap","doc":"State before the command is elaborated. This snapshot is always fulfilled immediately. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandParsedSnapshot.elabSnap\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">CommandParsedSnapshot</span>.<span class=\"name\">elabSnap</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandParsedSnapshot\">CommandParsedSnapshot</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandElaboratingSnapshot\">CommandElaboratingSnapshot</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Language/Lean/Types.lean#L71-L71","name":"Lean.Language.Lean.CommandParsedSnapshot.parserState","line":71,"kind":"def","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandParsedSnapshot.parserState","doc":"Resulting parser state. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandParsedSnapshot.parserState\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">CommandParsedSnapshot</span>.<span class=\"name\">parserState</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandParsedSnapshot\">CommandParsedSnapshot</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Module.html#Lean.Parser.ModuleParserState\">Parser.ModuleParserState</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Language/Lean/Types.lean#L69-L69","name":"Lean.Language.Lean.CommandParsedSnapshot.stx","line":69,"kind":"def","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandParsedSnapshot.stx","doc":"Syntax tree of the command. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandParsedSnapshot.stx\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">CommandParsedSnapshot</span>.<span class=\"name\">stx</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandParsedSnapshot\">CommandParsedSnapshot</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Language/Lean/Types.lean#L67-L67","name":"Lean.Language.Lean.CommandParsedSnapshot.mk","line":67,"kind":"ctor","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandParsedSnapshot.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandParsedSnapshot.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">CommandParsedSnapshot</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">toSnapshot</span> : <a href=\"./Lean/Language/Basic.html#Lean.Language.Snapshot\">Snapshot</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stx</span> : <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">parserState</span> : <a href=\"./Lean/Parser/Module.html#Lean.Parser.ModuleParserState\">Parser.ModuleParserState</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">elabSnap</span> : <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandElaboratingSnapshot\">CommandElaboratingSnapshot</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">nextCmdSnap?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask\">SnapshotTask</a> <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandParsedSnapshot\">CommandParsedSnapshot</a>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandParsedSnapshot\">CommandParsedSnapshot</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Language/Lean/Types.lean#L67-L76","name":"Lean.Language.Lean.CommandParsedSnapshot.toSnapshot","line":67,"kind":"def","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandParsedSnapshot.toSnapshot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandParsedSnapshot.toSnapshot\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">CommandParsedSnapshot</span>.<span class=\"name\">toSnapshot</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandParsedSnapshot\">CommandParsedSnapshot</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Language/Basic.html#Lean.Language.Snapshot\">Snapshot</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Language/Lean/Types.lean#L66-L76","name":"Lean.Language.Lean.CommandParsedSnapshot","line":66,"kind":"structure","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandParsedSnapshot","doc":"State after a command has been parsed. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandParsedSnapshot\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">CommandParsedSnapshot</span></a></span><span class=\"decl_extends\">extends</span> <a href=\"./Lean/Language/Basic.html#Lean.Language.Snapshot\">Lean.Language.Snapshot</a><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Language/Lean/Types.lean#L60-L64","name":"Lean.Language.Lean.instToSnapshotTreeCommandElaboratingSnapshot.go","line":60,"kind":"def","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.instToSnapshotTreeCommandElaboratingSnapshot.go","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.instToSnapshotTreeCommandElaboratingSnapshot.go\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">instToSnapshotTreeCommandElaboratingSnapshot</span>.<span class=\"name\">go</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandElaboratingSnapshot\">CommandElaboratingSnapshot</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTree\">SnapshotTree</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Language/Lean/Types.lean#L58-L64","name":"Lean.Language.Lean.instToSnapshotTreeCommandElaboratingSnapshot","line":58,"kind":"instance","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.instToSnapshotTreeCommandElaboratingSnapshot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.instToSnapshotTreeCommandElaboratingSnapshot\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">instToSnapshotTreeCommandElaboratingSnapshot</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.ToSnapshotTree\">ToSnapshotTree</a> <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandElaboratingSnapshot\">CommandElaboratingSnapshot</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Language/Lean/Types.lean#L57-L57","name":"Lean.Language.Lean.instNonemptyCommandElaboratingSnapshot","line":57,"kind":"instance","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.instNonemptyCommandElaboratingSnapshot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.instNonemptyCommandElaboratingSnapshot\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">instNonemptyCommandElaboratingSnapshot</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandElaboratingSnapshot\">CommandElaboratingSnapshot</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Language/Lean/Types.lean#L56-L56","name":"Lean.Language.Lean.CommandElaboratingSnapshot.reportSnap","line":56,"kind":"def","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandElaboratingSnapshot.reportSnap","doc":"Additional, untyped snapshots used for reporting, not reuse. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandElaboratingSnapshot.reportSnap\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">CommandElaboratingSnapshot</span>.<span class=\"name\">reportSnap</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandElaboratingSnapshot\">CommandElaboratingSnapshot</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask\">SnapshotTask</a> <a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTree\">SnapshotTree</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Language/Lean/Types.lean#L54-L54","name":"Lean.Language.Lean.CommandElaboratingSnapshot.infoTreeSnap","line":54,"kind":"def","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandElaboratingSnapshot.infoTreeSnap","doc":"State after all elaborator tasks are finished. In particular, contains the complete info tree.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandElaboratingSnapshot.infoTreeSnap\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">CommandElaboratingSnapshot</span>.<span class=\"name\">infoTreeSnap</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandElaboratingSnapshot\">CommandElaboratingSnapshot</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask\">SnapshotTask</a> <a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotLeaf\">SnapshotLeaf</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Language/Lean/Types.lean#L50-L50","name":"Lean.Language.Lean.CommandElaboratingSnapshot.resultSnap","line":50,"kind":"def","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandElaboratingSnapshot.resultSnap","doc":"State after command elaborator has returned. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandElaboratingSnapshot.resultSnap\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">CommandElaboratingSnapshot</span>.<span class=\"name\">resultSnap</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandElaboratingSnapshot\">CommandElaboratingSnapshot</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask\">SnapshotTask</a> <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandResultSnapshot\">CommandResultSnapshot</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Language/Lean/Types.lean#L48-L48","name":"Lean.Language.Lean.CommandElaboratingSnapshot.elabSnap","line":48,"kind":"def","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandElaboratingSnapshot.elabSnap","doc":"Snapshot for incremental reporting and reuse during elaboration, type dependent on specific\nelaborator.\n "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandElaboratingSnapshot.elabSnap\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">CommandElaboratingSnapshot</span>.<span class=\"name\">elabSnap</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandElaboratingSnapshot\">CommandElaboratingSnapshot</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask\">SnapshotTask</a> <a href=\"./Lean/Language/Basic.html#Lean.Language.DynamicSnapshot\">DynamicSnapshot</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Language/Lean/Types.lean#L43-L43","name":"Lean.Language.Lean.CommandElaboratingSnapshot.mk","line":43,"kind":"ctor","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandElaboratingSnapshot.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandElaboratingSnapshot.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">CommandElaboratingSnapshot</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">toSnapshot</span> : <a href=\"./Lean/Language/Basic.html#Lean.Language.Snapshot\">Snapshot</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">elabSnap</span> : <span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask\">SnapshotTask</a> <a href=\"./Lean/Language/Basic.html#Lean.Language.DynamicSnapshot\">DynamicSnapshot</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">resultSnap</span> : <span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask\">SnapshotTask</a> <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandResultSnapshot\">CommandResultSnapshot</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">infoTreeSnap</span> : <span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask\">SnapshotTask</a> <a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotLeaf\">SnapshotLeaf</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">reportSnap</span> : <span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask\">SnapshotTask</a> <a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTree\">SnapshotTree</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandElaboratingSnapshot\">CommandElaboratingSnapshot</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Language/Lean/Types.lean#L43-L57","name":"Lean.Language.Lean.CommandElaboratingSnapshot.toSnapshot","line":43,"kind":"def","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandElaboratingSnapshot.toSnapshot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandElaboratingSnapshot.toSnapshot\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">CommandElaboratingSnapshot</span>.<span class=\"name\">toSnapshot</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandElaboratingSnapshot\">CommandElaboratingSnapshot</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Language/Basic.html#Lean.Language.Snapshot\">Snapshot</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Language/Lean/Types.lean#L39-L57","name":"Lean.Language.Lean.CommandElaboratingSnapshot","line":39,"kind":"structure","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandElaboratingSnapshot","doc":"State before a command is elaborated. This is separate from `CommandParsedSnapshot` so that all\nsnapshots belonging to a command are grouped below a task with the command's syntax tree.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandElaboratingSnapshot\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">CommandElaboratingSnapshot</span></a></span><span class=\"decl_extends\">extends</span> <a href=\"./Lean/Language/Basic.html#Lean.Language.Snapshot\">Lean.Language.Snapshot</a><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Language/Lean/Types.lean#L36-L37","name":"Lean.Language.Lean.instToSnapshotTreeCommandResultSnapshot","line":36,"kind":"instance","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.instToSnapshotTreeCommandResultSnapshot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.instToSnapshotTreeCommandResultSnapshot\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">instToSnapshotTreeCommandResultSnapshot</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.ToSnapshotTree\">ToSnapshotTree</a> <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandResultSnapshot\">CommandResultSnapshot</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Language/Lean/Types.lean#L35-L35","name":"Lean.Language.Lean.instNonemptyCommandResultSnapshot","line":35,"kind":"instance","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.instNonemptyCommandResultSnapshot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.instNonemptyCommandResultSnapshot\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">instNonemptyCommandResultSnapshot</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandResultSnapshot\">CommandResultSnapshot</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Language/Lean/Types.lean#L34-L34","name":"Lean.Language.Lean.CommandResultSnapshot.cmdState","line":34,"kind":"def","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandResultSnapshot.cmdState","doc":"Resulting elaboration state. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandResultSnapshot.cmdState\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">CommandResultSnapshot</span>.<span class=\"name\">cmdState</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandResultSnapshot\">CommandResultSnapshot</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.State\">Elab.Command.State</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Language/Lean/Types.lean#L32-L32","name":"Lean.Language.Lean.CommandResultSnapshot.mk","line":32,"kind":"ctor","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandResultSnapshot.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandResultSnapshot.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">CommandResultSnapshot</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">toSnapshot</span> : <a href=\"./Lean/Language/Basic.html#Lean.Language.Snapshot\">Snapshot</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cmdState</span> : <a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.State\">Elab.Command.State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandResultSnapshot\">CommandResultSnapshot</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Language/Lean/Types.lean#L32-L35","name":"Lean.Language.Lean.CommandResultSnapshot.toSnapshot","line":32,"kind":"def","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandResultSnapshot.toSnapshot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandResultSnapshot.toSnapshot\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">CommandResultSnapshot</span>.<span class=\"name\">toSnapshot</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandResultSnapshot\">CommandResultSnapshot</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Language/Basic.html#Lean.Language.Snapshot\">Snapshot</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Language/Lean/Types.lean#L28-L35","name":"Lean.Language.Lean.CommandResultSnapshot","line":28,"kind":"structure","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandResultSnapshot","doc":"Snapshot after command elaborator has returned. Also contains diagnostics from the elaborator's main\ntask. Asynchronous elaboration tasks may not yet be finished.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandResultSnapshot\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">CommandResultSnapshot</span></a></span><span class=\"decl_extends\">extends</span> <a href=\"./Lean/Language/Basic.html#Lean.Language.Snapshot\">Lean.Language.Snapshot</a><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}