{"name":"Lean.Compiler.InlineAttrs","instances":[{"typeNames":["Lean.Compiler.InlineAttributeKind"],"name":"Lean.Compiler.instInhabitedInlineAttributeKind","className":"Inhabited"},{"typeNames":["Lean.Compiler.InlineAttributeKind"],"name":"Lean.Compiler.instBEqInlineAttributeKind","className":"BEq"},{"typeNames":["Lean.Compiler.InlineAttributeKind"],"name":"Lean.Compiler.instHashableInlineAttributeKind","className":"Hashable"}],"imports":["Lean.Attributes"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Compiler/InlineAttrs.lean#L116-L118","name":"Lean.Compiler.hasMacroInlineAttributeOld","line":116,"kind":"def","docLink":"./Lean/Compiler/InlineAttrs.html#Lean.Compiler.hasMacroInlineAttributeOld","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/InlineAttrs.html#Lean.Compiler.hasMacroInlineAttributeOld\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">hasMacroInlineAttributeOld</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Compiler/InlineAttrs.lean#L112-L114","name":"Lean.Compiler.hasNoInlineAttributeOld","line":112,"kind":"def","docLink":"./Lean/Compiler/InlineAttrs.html#Lean.Compiler.hasNoInlineAttributeOld","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/InlineAttrs.html#Lean.Compiler.hasNoInlineAttributeOld\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">hasNoInlineAttributeOld</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Compiler/InlineAttrs.lean#L108-L110","name":"Lean.Compiler.hasInlineIfReduceAttributeOld","line":108,"kind":"def","docLink":"./Lean/Compiler/InlineAttrs.html#Lean.Compiler.hasInlineIfReduceAttributeOld","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/InlineAttrs.html#Lean.Compiler.hasInlineIfReduceAttributeOld\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">hasInlineIfReduceAttributeOld</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Compiler/InlineAttrs.lean#L104-L106","name":"Lean.Compiler.hasInlineAttributeOld","line":104,"kind":"def","docLink":"./Lean/Compiler/InlineAttrs.html#Lean.Compiler.hasInlineAttributeOld","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/InlineAttrs.html#Lean.Compiler.hasInlineAttributeOld\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">hasInlineAttributeOld</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Compiler/InlineAttrs.lean#L92-L93","name":"Lean.Compiler.hasAlwaysInlineAttribute","line":92,"kind":"def","docLink":"./Lean/Compiler/InlineAttrs.html#Lean.Compiler.hasAlwaysInlineAttribute","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/InlineAttrs.html#Lean.Compiler.hasAlwaysInlineAttribute\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">hasAlwaysInlineAttribute</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Compiler/InlineAttrs.lean#L89-L90","name":"Lean.Compiler.hasMacroInlineAttribute","line":89,"kind":"def","docLink":"./Lean/Compiler/InlineAttrs.html#Lean.Compiler.hasMacroInlineAttribute","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/InlineAttrs.html#Lean.Compiler.hasMacroInlineAttribute\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">hasMacroInlineAttribute</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Compiler/InlineAttrs.lean#L86-L87","name":"Lean.Compiler.hasNoInlineAttribute","line":86,"kind":"def","docLink":"./Lean/Compiler/InlineAttrs.html#Lean.Compiler.hasNoInlineAttribute","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/InlineAttrs.html#Lean.Compiler.hasNoInlineAttribute\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">hasNoInlineAttribute</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Compiler/InlineAttrs.lean#L83-L84","name":"Lean.Compiler.hasInlineIfReduceAttribute","line":83,"kind":"def","docLink":"./Lean/Compiler/InlineAttrs.html#Lean.Compiler.hasInlineIfReduceAttribute","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/InlineAttrs.html#Lean.Compiler.hasInlineIfReduceAttribute\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">hasInlineIfReduceAttribute</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Compiler/InlineAttrs.lean#L80-L81","name":"Lean.Compiler.hasInlineAttribute","line":80,"kind":"def","docLink":"./Lean/Compiler/InlineAttrs.html#Lean.Compiler.hasInlineAttribute","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/InlineAttrs.html#Lean.Compiler.hasInlineAttribute\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">hasInlineAttribute</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Compiler/InlineAttrs.lean#L72-L73","name":"Lean.Compiler.getInlineAttribute?","line":72,"kind":"def","docLink":"./Lean/Compiler/InlineAttrs.html#Lean.Compiler.getInlineAttribute?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/InlineAttrs.html#Lean.Compiler.getInlineAttribute?\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">getInlineAttribute?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Compiler/InlineAttrs.html#Lean.Compiler.InlineAttributeKind\">InlineAttributeKind</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Compiler/InlineAttrs.lean#L69-L70","name":"Lean.Compiler.setInlineAttribute","line":69,"kind":"def","docLink":"./Lean/Compiler/InlineAttrs.html#Lean.Compiler.setInlineAttribute","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/InlineAttrs.html#Lean.Compiler.setInlineAttribute\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">setInlineAttribute</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">kind</span> : <a href=\"./Lean/Compiler/InlineAttrs.html#Lean.Compiler.InlineAttributeKind\">InlineAttributeKind</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Except\">Except</a> <a href=\"./Init/Prelude.html#String\">String</a> <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Compiler/InlineAttrs.lean#L35-L67","name":"Lean.Compiler.inlineAttrs","line":35,"kind":"opaque","docLink":"./Lean/Compiler/InlineAttrs.html#Lean.Compiler.inlineAttrs","doc":"Changes the inlining behavior. This attribute comes in several variants:\n- `@[inline]`: marks the definition to be inlined when it is appropriate.\n- `@[inline_if_reduce]`: marks the definition to be inlined if an application of it after inlining\n  and applying reduction isn't a `match` expression. This attribute can be used for inlining\n  structurally recursive functions.\n- `@[noinline]`: marks the definition to never be inlined.\n- `@[always_inline]`: marks the definition to always be inlined.\n- `@[macro_inline]`: marks the definition to always be inlined at the beginning of compilation.\n  This makes it possible to define functions that evaluate some of their parameters lazily.\n  Example:\n  ```\n  @[macro_inline]\n  def test (x y : Nat) : Nat :=\n    if x = 42 then x else y\n\n  #eval test 42 (2^1000000000000) -- doesn't compute 2^1000000000000\n  ```\n  Only non-recursive functions may be marked `@[macro_inline]`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/InlineAttrs.html#Lean.Compiler.inlineAttrs\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">inlineAttrs</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Attributes.html#Lean.EnumAttributes\">EnumAttributes</a> <a href=\"./Lean/Compiler/InlineAttrs.html#Lean.Compiler.InlineAttributeKind\">InlineAttributeKind</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Compiler/InlineAttrs.lean#L14-L14","name":"Lean.Compiler.instHashableInlineAttributeKind","line":14,"kind":"instance","docLink":"./Lean/Compiler/InlineAttrs.html#Lean.Compiler.instHashableInlineAttributeKind","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/InlineAttrs.html#Lean.Compiler.instHashableInlineAttributeKind\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">instHashableInlineAttributeKind</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <a href=\"./Lean/Compiler/InlineAttrs.html#Lean.Compiler.InlineAttributeKind\">InlineAttributeKind</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Compiler/InlineAttrs.lean#L14-L14","name":"Lean.Compiler.instBEqInlineAttributeKind","line":14,"kind":"instance","docLink":"./Lean/Compiler/InlineAttrs.html#Lean.Compiler.instBEqInlineAttributeKind","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/InlineAttrs.html#Lean.Compiler.instBEqInlineAttributeKind\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">instBEqInlineAttributeKind</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <a href=\"./Lean/Compiler/InlineAttrs.html#Lean.Compiler.InlineAttributeKind\">InlineAttributeKind</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Compiler/InlineAttrs.lean#L14-L14","name":"Lean.Compiler.instInhabitedInlineAttributeKind","line":14,"kind":"instance","docLink":"./Lean/Compiler/InlineAttrs.html#Lean.Compiler.instInhabitedInlineAttributeKind","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/InlineAttrs.html#Lean.Compiler.instInhabitedInlineAttributeKind\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">instInhabitedInlineAttributeKind</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Compiler/InlineAttrs.html#Lean.Compiler.InlineAttributeKind\">InlineAttributeKind</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Compiler/InlineAttrs.lean#L13-L13","name":"Lean.Compiler.InlineAttributeKind.alwaysInline","line":13,"kind":"ctor","docLink":"./Lean/Compiler/InlineAttrs.html#Lean.Compiler.InlineAttributeKind.alwaysInline","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/InlineAttrs.html#Lean.Compiler.InlineAttributeKind.alwaysInline\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">InlineAttributeKind</span>.<span class=\"name\">alwaysInline</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/InlineAttrs.html#Lean.Compiler.InlineAttributeKind\">InlineAttributeKind</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Compiler/InlineAttrs.lean#L13-L13","name":"Lean.Compiler.InlineAttributeKind.inlineIfReduce","line":13,"kind":"ctor","docLink":"./Lean/Compiler/InlineAttrs.html#Lean.Compiler.InlineAttributeKind.inlineIfReduce","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/InlineAttrs.html#Lean.Compiler.InlineAttributeKind.inlineIfReduce\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">InlineAttributeKind</span>.<span class=\"name\">inlineIfReduce</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/InlineAttrs.html#Lean.Compiler.InlineAttributeKind\">InlineAttributeKind</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Compiler/InlineAttrs.lean#L13-L13","name":"Lean.Compiler.InlineAttributeKind.macroInline","line":13,"kind":"ctor","docLink":"./Lean/Compiler/InlineAttrs.html#Lean.Compiler.InlineAttributeKind.macroInline","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/InlineAttrs.html#Lean.Compiler.InlineAttributeKind.macroInline\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">InlineAttributeKind</span>.<span class=\"name\">macroInline</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/InlineAttrs.html#Lean.Compiler.InlineAttributeKind\">InlineAttributeKind</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Compiler/InlineAttrs.lean#L13-L13","name":"Lean.Compiler.InlineAttributeKind.noinline","line":13,"kind":"ctor","docLink":"./Lean/Compiler/InlineAttrs.html#Lean.Compiler.InlineAttributeKind.noinline","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/InlineAttrs.html#Lean.Compiler.InlineAttributeKind.noinline\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">InlineAttributeKind</span>.<span class=\"name\">noinline</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/InlineAttrs.html#Lean.Compiler.InlineAttributeKind\">InlineAttributeKind</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Compiler/InlineAttrs.lean#L13-L13","name":"Lean.Compiler.InlineAttributeKind.inline","line":13,"kind":"ctor","docLink":"./Lean/Compiler/InlineAttrs.html#Lean.Compiler.InlineAttributeKind.inline","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/InlineAttrs.html#Lean.Compiler.InlineAttributeKind.inline\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">InlineAttributeKind</span>.<span class=\"name\">inline</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/InlineAttrs.html#Lean.Compiler.InlineAttributeKind\">InlineAttributeKind</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Compiler/InlineAttrs.lean#L12-L14","name":"Lean.Compiler.InlineAttributeKind","line":12,"kind":"inductive","docLink":"./Lean/Compiler/InlineAttrs.html#Lean.Compiler.InlineAttributeKind","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/InlineAttrs.html#Lean.Compiler.InlineAttributeKind\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">InlineAttributeKind</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}