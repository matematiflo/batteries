{"name":"Lean.DefEqAttrib","instances":[],"imports":["Lean.PrettyPrinter"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/DefEqAttrib.lean#L89-L109","name":"Lean.inferDefEqAttr","line":89,"kind":"def","docLink":"./Lean/DefEqAttrib.html#Lean.inferDefEqAttr","doc":"For automatically generated theorems (equational theorems etc.), we want to set the `defeq` attribute\nif the proof is `rfl`, essentially reproducing the behavior before the introduction of the `defeq`\nattribute. This function infers the `defeq` attribute based on the declaration value.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/DefEqAttrib.html#Lean.inferDefEqAttr\"><span class=\"name\">Lean</span>.<span class=\"name\">inferDefEqAttr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/DefEqAttrib.lean#L47-L65","name":"Lean.defeqAttr","line":47,"kind":"opaque","docLink":"./Lean/DefEqAttrib.html#Lean.defeqAttr","doc":"Marks the theorem as a definitional equality.\n\nThe theorem must be an equality that holds by `rfl`. This allows `dsimp` to use this theorem\nwhen rewriting.\n\nA theorem with with a definition that is (syntactically) `:= rfl` is implicitly marked `@[defeq]`.\nTo avoid this behavior, write `:= (rfl)` instead.\n\nThe attribute should be given before a `@[simp]` attribute to have effect.\n\nWhen using the module system, an exported theorem can only be `@[defeq]` if all definitions that\nneed to be unfolded to prove the theorem are exported and exposed.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/DefEqAttrib.html#Lean.defeqAttr\"><span class=\"name\">Lean</span>.<span class=\"name\">defeqAttr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Attributes.html#Lean.TagAttribute\">TagAttribute</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/DefEqAttrib.lean#L23-L45","name":"Lean.validateDefEqAttr","line":23,"kind":"def","docLink":"./Lean/DefEqAttrib.html#Lean.validateDefEqAttr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/DefEqAttrib.html#Lean.validateDefEqAttr\"><span class=\"name\">Lean</span>.<span class=\"name\">validateDefEqAttr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Attributes.html#Lean.AttrM\">AttrM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"}]}