{"name":"Lake.Config.LeanConfig","instances":[{"typeNames":["Lake.BuildType"],"name":"Lake.instInhabitedBuildType","className":"Inhabited"},{"typeNames":["Lake.BuildType"],"name":"Lake.instReprBuildType","className":"Repr"},{"typeNames":["Eq"],"name":"Lake.instDecidableEqBuildType","className":"Decidable"},{"typeNames":["Lake.BuildType"],"name":"Lake.instOrdBuildType","className":"Ord"},{"typeNames":["Lake.BuildType"],"name":"Lake.instLTBuildType","className":"LT"},{"typeNames":["Lake.BuildType"],"name":"Lake.instLEBuildType","className":"LE"},{"typeNames":["Lake.BuildType"],"name":"Lake.instMinBuildType","className":"Min"},{"typeNames":["Lake.BuildType"],"name":"Lake.instMaxBuildType","className":"Max"},{"typeNames":["Lake.Backend"],"name":"Lake.instReprBackend","className":"Repr"},{"typeNames":["Eq"],"name":"Lake.instDecidableEqBackend","className":"Decidable"},{"typeNames":["Lake.Backend"],"name":"Lake.instInhabitedBackend","className":"Inhabited"},{"typeNames":["Lake.Backend"],"name":"Lake.instToStringBackend","className":"ToString"},{"typeNames":["Lake.BuildType"],"name":"Lake.instToStringBuildType","className":"ToString"},{"typeNames":["Lake.LeanConfig","Lean.Name.mkStr1","Option"],"name":"Lake.LeanConfig.platformIndependent.instConfigField","className":"Lake.ConfigField"},{"typeNames":["Lake.LeanConfig","Lean.Name.mkStr1","Lake.TargetArray"],"name":"Lake.LeanConfig.plugins.instConfigField","className":"Lake.ConfigField"},{"typeNames":["Lake.LeanConfig","Lean.Name.mkStr1","Lake.TargetArray"],"name":"Lake.LeanConfig.dynlibs.instConfigField","className":"Lake.ConfigField"},{"typeNames":["Lake.LeanConfig","Lean.Name.mkStr1","Lake.TargetArray"],"name":"Lake.LeanConfig.moreLinkLibs.instConfigField","className":"Lake.ConfigField"},{"typeNames":["Lake.LeanConfig","Lean.Name.mkStr1","Array"],"name":"Lake.LeanConfig.weakLinkArgs.instConfigField","className":"Lake.ConfigField"},{"typeNames":["Lake.LeanConfig","Lean.Name.mkStr1","Array"],"name":"Lake.LeanConfig.moreLeanArgs.instConfigField","className":"Lake.ConfigField"},{"typeNames":["Lake.LeanConfig","Lean.Name.mkStr1","Array"],"name":"Lake.LeanConfig.leanOptions.instConfigField","className":"Lake.ConfigField"},{"typeNames":["Lake.LeanConfig","Lean.Name.mkStr1","Lake.TargetArray"],"name":"Lake.LeanConfig.moreLinkObjs.instConfigField","className":"Lake.ConfigField"},{"typeNames":["Lean.Name.mkStr2"],"name":"Lake.LeanConfig.instConfigMeta","className":"Lake.ConfigInfo"},{"typeNames":["Lake.LeanConfig","Lean.Name.mkStr1","Array"],"name":"Lake.LeanConfig.moreServerOptions.instConfigField","className":"Lake.ConfigField"},{"typeNames":["Lake.LeanConfig","Lean.Name.mkStr1","Array"],"name":"Lake.LeanConfig.weakLeanArgs.instConfigField","className":"Lake.ConfigField"},{"typeNames":["Lake.LeanConfig","Lean.Name.mkStr1","Array"],"name":"Lake.LeanConfig.moreLinkArgs.instConfigField","className":"Lake.ConfigField"},{"typeNames":["Lake.LeanConfig","Lean.Name.mkStr1","Lake.Backend"],"name":"Lake.LeanConfig.backend.instConfigField","className":"Lake.ConfigField"},{"typeNames":["Lake.LeanConfig"],"name":"Lake.LeanConfig.instConfigFields","className":"Lake.ConfigFields"},{"typeNames":["Lake.LeanConfig","Lean.Name.mkStr1","Array"],"name":"Lake.LeanConfig.weakLeancArgs.instConfigField","className":"Lake.ConfigField"},{"typeNames":["Lake.LeanConfig","Lean.Name.mkStr1","Lake.BuildType"],"name":"Lake.LeanConfig.buildType.instConfigField","className":"Lake.ConfigField"},{"typeNames":["Lake.LeanConfig","Lean.Name.mkStr1","Array"],"name":"Lake.LeanConfig.moreLeancArgs.instConfigField","className":"Lake.ConfigField"},{"typeNames":["Lake.LeanConfig"],"name":"Lake.instInhabitedLeanConfig","className":"Inhabited"},{"typeNames":["Lake.LeanConfig"],"name":"Lake.instReprLeanConfig","className":"Repr"},{"typeNames":["Lake.LeanConfig"],"name":"Lake.instEmptyCollectionLeanConfig","className":"EmptyCollection"}],"imports":["Lean.Util.LeanOptions","Lake.Build.Target.Basic","Lake.Config.Dynlib","Lake.Config.Meta"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Config/LeanConfig.lean#L250-L252","name":"Lake.BuildType.leanArgs","line":250,"kind":"def","docLink":"./Lake/Config/LeanConfig.html#Lake.BuildType.leanArgs","doc":"The arguments to pass to `lean` based on the build type. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.BuildType.leanArgs\"><span class=\"name\">Lake</span>.<span class=\"name\">BuildType</span>.<span class=\"name\">leanArgs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">t</span> : <a href=\"./Lake/Config/LeanConfig.html#Lake.BuildType\">BuildType</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Config/LeanConfig.lean#L244-L247","name":"Lake.BuildType.leanOptions","line":244,"kind":"def","docLink":"./Lake/Config/LeanConfig.html#Lake.BuildType.leanOptions","doc":"The options to pass to `lean` based on the build type. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.BuildType.leanOptions\"><span class=\"name\">Lake</span>.<span class=\"name\">BuildType</span>.<span class=\"name\">leanOptions</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Config/LeanConfig.html#Lake.BuildType\">BuildType</a> â†’ <a href=\"./Lean/Util/LeanOptions.html#Lean.LeanOptions\">Lean.LeanOptions</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Config/LeanConfig.lean#L242-L242","name":"Lake.instEmptyCollectionLeanConfig","line":242,"kind":"instance","docLink":"./Lake/Config/LeanConfig.html#Lake.instEmptyCollectionLeanConfig","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.instEmptyCollectionLeanConfig\"><span class=\"name\">Lake</span>.<span class=\"name\">instEmptyCollectionLeanConfig</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#EmptyCollection\">EmptyCollection</a> <a href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig\">LeanConfig</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Config/LeanConfig.lean#L240-L240","name":"Lake.instReprLeanConfig","line":240,"kind":"instance","docLink":"./Lake/Config/LeanConfig.html#Lake.instReprLeanConfig","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.instReprLeanConfig\"><span class=\"name\">Lake</span>.<span class=\"name\">instReprLeanConfig</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig\">LeanConfig</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Config/LeanConfig.lean#L240-L240","name":"Lake.instInhabitedLeanConfig","line":240,"kind":"instance","docLink":"./Lake/Config/LeanConfig.html#Lake.instInhabitedLeanConfig","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.instInhabitedLeanConfig\"><span class=\"name\">Lake</span>.<span class=\"name\">instInhabitedLeanConfig</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig\">LeanConfig</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Config/LeanConfig.lean#L239-L239","name":"Lake.LeanConfig.plugins","line":239,"kind":"def","docLink":"./Lake/Config/LeanConfig.html#Lake.LeanConfig.plugins","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig.plugins\"><span class=\"name\">Lake</span>.<span class=\"name\">LeanConfig</span>.<span class=\"name\">plugins</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig\">LeanConfig</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Target/Basic.html#Lake.TargetArray\">TargetArray</a> <a href=\"./Lake/Config/Dynlib.html#Lake.Dynlib\">Dynlib</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Config/LeanConfig.lean#L234-L234","name":"Lake.LeanConfig.dynlibs","line":234,"kind":"def","docLink":"./Lake/Config/LeanConfig.html#Lake.LeanConfig.dynlibs","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig.dynlibs\"><span class=\"name\">Lake</span>.<span class=\"name\">LeanConfig</span>.<span class=\"name\">dynlibs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig\">LeanConfig</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Target/Basic.html#Lake.TargetArray\">TargetArray</a> <a href=\"./Lake/Config/Dynlib.html#Lake.Dynlib\">Dynlib</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Config/LeanConfig.lean#L229-L229","name":"Lake.LeanConfig.platformIndependent","line":229,"kind":"def","docLink":"./Lake/Config/LeanConfig.html#Lake.LeanConfig.platformIndependent","doc":"Asserts whether Lake should assume Lean modules are platform-independent.\n\n* If `false`, Lake will add `System.Platform.target` to the module traces\nwithin the code unit (e.g., package or library). This will force Lean code\nto be re-elaborated on different platforms.\n\n* If `true`, Lake will exclude platform-dependent elements\n(e.g., precompiled modules, external libraries) from a module's trace,\npreventing re-elaboration on different platforms. Note that this will not\neffect  modules outside the code unit in question. For example, a\nplatform-independent package which depends on a platform-dependent library\nwill still be platform-dependent.\n\n* If `none`, Lake will construct traces as natural. That is, it will include\nplatform-dependent artifacts in the trace if they module depends on them,\nbut otherwise not force modules to be platform-dependent.\n\nThere is no check  for correctness here, so a configuration can lie\nand Lake will not catch it. Defaults to `none`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig.platformIndependent\"><span class=\"name\">Lake</span>.<span class=\"name\">LeanConfig</span>.<span class=\"name\">platformIndependent</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig\">LeanConfig</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Config/LeanConfig.lean#L207-L207","name":"Lake.LeanConfig.backend","line":207,"kind":"def","docLink":"./Lake/Config/LeanConfig.html#Lake.LeanConfig.backend","doc":"Compiler backend that modules should be built using (e.g., `C`, `LLVM`).\nDefaults to `C`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig.backend\"><span class=\"name\">Lake</span>.<span class=\"name\">LeanConfig</span>.<span class=\"name\">backend</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig\">LeanConfig</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lake/Config/LeanConfig.html#Lake.Backend\">Backend</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Config/LeanConfig.lean#L202-L202","name":"Lake.LeanConfig.weakLinkArgs","line":202,"kind":"def","docLink":"./Lake/Config/LeanConfig.html#Lake.LeanConfig.weakLinkArgs","doc":"Additional arguments to pass to `leanc` when linking (e.g., for shared\nlibraries or binary executables). These will come *after* the paths of\nthe linked objects.\n\nUnlike `moreLinkArgs`, these arguments do not affect the trace\nof the build result, so they can be changed without triggering a rebuild.\nThey come *before* `moreLinkArgs`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig.weakLinkArgs\"><span class=\"name\">Lake</span>.<span class=\"name\">LeanConfig</span>.<span class=\"name\">weakLinkArgs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig\">LeanConfig</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Config/LeanConfig.lean#L192-L192","name":"Lake.LeanConfig.moreLinkArgs","line":192,"kind":"def","docLink":"./Lake/Config/LeanConfig.html#Lake.LeanConfig.moreLinkArgs","doc":"Additional arguments to pass to `leanc` when linking (e.g., for shared\nlibraries or binary executables). These will come *after* the paths of\nthe linked objects.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig.moreLinkArgs\"><span class=\"name\">Lake</span>.<span class=\"name\">LeanConfig</span>.<span class=\"name\">moreLinkArgs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig\">LeanConfig</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Config/LeanConfig.lean#L186-L186","name":"Lake.LeanConfig.moreLinkLibs","line":186,"kind":"def","docLink":"./Lake/Config/LeanConfig.html#Lake.LeanConfig.moreLinkLibs","doc":"Additional target libraries to pass to `leanc` when linking\n(e.g., for shared libraries or binary executables).\nThese will come *after* the paths of other link objects.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig.moreLinkLibs\"><span class=\"name\">Lake</span>.<span class=\"name\">LeanConfig</span>.<span class=\"name\">moreLinkLibs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig\">LeanConfig</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Target/Basic.html#Lake.TargetArray\">TargetArray</a> <a href=\"./Lake/Config/Dynlib.html#Lake.Dynlib\">Dynlib</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Config/LeanConfig.lean#L180-L180","name":"Lake.LeanConfig.moreLinkObjs","line":180,"kind":"def","docLink":"./Lake/Config/LeanConfig.html#Lake.LeanConfig.moreLinkObjs","doc":"Additional target objects to use when linking (both static and shared).\nThese will come *after* the paths of native facets.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig.moreLinkObjs\"><span class=\"name\">Lake</span>.<span class=\"name\">LeanConfig</span>.<span class=\"name\">moreLinkObjs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig\">LeanConfig</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Target/Basic.html#Lake.TargetArray\">TargetArray</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Config/LeanConfig.lean#L175-L175","name":"Lake.LeanConfig.weakLeancArgs","line":175,"kind":"def","docLink":"./Lake/Config/LeanConfig.html#Lake.LeanConfig.weakLeancArgs","doc":"Additional arguments to pass to `leanc`\nwhen compiling a module's C source files generated by `lean`.\n\nUnlike `moreLeancArgs`, these arguments do not affect the trace\nof the build result, so they can be changed without triggering a rebuild.\nThey come *before* `moreLeancArgs`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig.weakLeancArgs\"><span class=\"name\">Lake</span>.<span class=\"name\">LeanConfig</span>.<span class=\"name\">weakLeancArgs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig\">LeanConfig</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Config/LeanConfig.lean#L166-L166","name":"Lake.LeanConfig.moreServerOptions","line":166,"kind":"def","docLink":"./Lake/Config/LeanConfig.html#Lake.LeanConfig.moreServerOptions","doc":"Additional options to pass to the Lean language server\n(i.e., `lean --server`) launched by `lake serve`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig.moreServerOptions\"><span class=\"name\">Lake</span>.<span class=\"name\">LeanConfig</span>.<span class=\"name\">moreServerOptions</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig\">LeanConfig</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Util/LeanOptions.html#Lean.LeanOption\">LeanOption</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Config/LeanConfig.lean#L161-L161","name":"Lake.LeanConfig.moreLeancArgs","line":161,"kind":"def","docLink":"./Lake/Config/LeanConfig.html#Lake.LeanConfig.moreLeancArgs","doc":"Additional arguments to pass to `leanc`\nwhen compiling a module's C source files generated by `lean`.\n\nLake already passes some flags based on the `buildType`,\nbut you can change this by, for example, adding `-O0` and `-UNDEBUG`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig.moreLeancArgs\"><span class=\"name\">Lake</span>.<span class=\"name\">LeanConfig</span>.<span class=\"name\">moreLeancArgs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig\">LeanConfig</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Config/LeanConfig.lean#L153-L153","name":"Lake.LeanConfig.weakLeanArgs","line":153,"kind":"def","docLink":"./Lake/Config/LeanConfig.html#Lake.LeanConfig.weakLeanArgs","doc":"Additional arguments to pass to `lean`\nwhen compiling a module's Lean source files.\n\nUnlike `moreLeanArgs`, these arguments do not affect the trace\nof the build result, so they can be changed without triggering a rebuild.\nThey come *before* `moreLeanArgs`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig.weakLeanArgs\"><span class=\"name\">Lake</span>.<span class=\"name\">LeanConfig</span>.<span class=\"name\">weakLeanArgs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig\">LeanConfig</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Config/LeanConfig.lean#L144-L144","name":"Lake.LeanConfig.moreLeanArgs","line":144,"kind":"def","docLink":"./Lake/Config/LeanConfig.html#Lake.LeanConfig.moreLeanArgs","doc":"Additional arguments to pass to `lean`\nwhen compiling a module's Lean source files.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig.moreLeanArgs\"><span class=\"name\">Lake</span>.<span class=\"name\">LeanConfig</span>.<span class=\"name\">moreLeanArgs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig\">LeanConfig</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Config/LeanConfig.lean#L139-L139","name":"Lake.LeanConfig.leanOptions","line":139,"kind":"def","docLink":"./Lake/Config/LeanConfig.html#Lake.LeanConfig.leanOptions","doc":"An `Array` of additional options to pass to both the Lean language server\n(i.e., `lean --server`) launched by `lake serve` and to `lean` when compiling\na module's Lean source files.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig.leanOptions\"><span class=\"name\">Lake</span>.<span class=\"name\">LeanConfig</span>.<span class=\"name\">leanOptions</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig\">LeanConfig</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Util/LeanOptions.html#Lean.LeanOption\">LeanOption</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Config/LeanConfig.lean#L133-L133","name":"Lake.LeanConfig.buildType","line":133,"kind":"def","docLink":"./Lake/Config/LeanConfig.html#Lake.LeanConfig.buildType","doc":"The mode in which the modules should be built (e.g., `debug`, `release`).\nDefaults to `release`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig.buildType\"><span class=\"name\">Lake</span>.<span class=\"name\">LeanConfig</span>.<span class=\"name\">buildType</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig\">LeanConfig</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lake/Config/LeanConfig.html#Lake.BuildType\">BuildType</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Config/LeanConfig.lean#L128-L128","name":"Lake.LeanConfig.mk","line":128,"kind":"ctor","docLink":"./Lake/Config/LeanConfig.html#Lake.LeanConfig.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig.mk\"><span class=\"name\">Lake</span>.<span class=\"name\">LeanConfig</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">buildType</span> : <a href=\"./Lake/Config/LeanConfig.html#Lake.BuildType\">BuildType</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">leanOptions</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Util/LeanOptions.html#Lean.LeanOption\">LeanOption</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">moreLeanArgs </span><span class=\"fn\">weakLeanArgs </span><span class=\"fn\">moreLeancArgs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#String\">String</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">moreServerOptions</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Util/LeanOptions.html#Lean.LeanOption\">LeanOption</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">weakLeancArgs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#String\">String</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">moreLinkObjs</span> : <span class=\"fn\"><a href=\"./Lake/Build/Target/Basic.html#Lake.TargetArray\">TargetArray</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">moreLinkLibs</span> : <span class=\"fn\"><a href=\"./Lake/Build/Target/Basic.html#Lake.TargetArray\">TargetArray</a> <a href=\"./Lake/Config/Dynlib.html#Lake.Dynlib\">Dynlib</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">moreLinkArgs </span><span class=\"fn\">weakLinkArgs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#String\">String</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">backend</span> : <a href=\"./Lake/Config/LeanConfig.html#Lake.Backend\">Backend</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">platformIndependent</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dynlibs </span><span class=\"fn\">plugins</span> : <span class=\"fn\"><a href=\"./Lake/Build/Target/Basic.html#Lake.TargetArray\">TargetArray</a> <a href=\"./Lake/Config/Dynlib.html#Lake.Dynlib\">Dynlib</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig\">LeanConfig</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Config/LeanConfig.lean#L128-L128","name":"Lake.LeanConfig.moreLeancArgs.instConfigField","line":128,"kind":"instance","docLink":"./Lake/Config/LeanConfig.html#Lake.LeanConfig.moreLeancArgs.instConfigField","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig.moreLeancArgs.instConfigField\"><span class=\"name\">Lake</span>.<span class=\"name\">LeanConfig</span>.<span class=\"name\">moreLeancArgs</span>.<span class=\"name\">instConfigField</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Config/Meta.html#Lake.ConfigField\">ConfigField</a> <a href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig\">LeanConfig</a> <span class=\"fn\">`moreLeancArgs</span> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#String\">String</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Config/LeanConfig.lean#L128-L128","name":"Lake.LeanConfig.buildType.instConfigField","line":128,"kind":"instance","docLink":"./Lake/Config/LeanConfig.html#Lake.LeanConfig.buildType.instConfigField","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig.buildType.instConfigField\"><span class=\"name\">Lake</span>.<span class=\"name\">LeanConfig</span>.<span class=\"name\">buildType</span>.<span class=\"name\">instConfigField</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Config/Meta.html#Lake.ConfigField\">ConfigField</a> <a href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig\">LeanConfig</a> <span class=\"fn\">`buildType</span> <a href=\"./Lake/Config/LeanConfig.html#Lake.BuildType\">BuildType</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Config/LeanConfig.lean#L128-L128","name":"Lake.LeanConfig.weakLeancArgs.instConfigField","line":128,"kind":"instance","docLink":"./Lake/Config/LeanConfig.html#Lake.LeanConfig.weakLeancArgs.instConfigField","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig.weakLeancArgs.instConfigField\"><span class=\"name\">Lake</span>.<span class=\"name\">LeanConfig</span>.<span class=\"name\">weakLeancArgs</span>.<span class=\"name\">instConfigField</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Config/Meta.html#Lake.ConfigField\">ConfigField</a> <a href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig\">LeanConfig</a> <span class=\"fn\">`weakLeancArgs</span> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#String\">String</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Config/LeanConfig.lean#L128-L128","name":"Lake.LeanConfig.instConfigFields","line":128,"kind":"instance","docLink":"./Lake/Config/LeanConfig.html#Lake.LeanConfig.instConfigFields","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig.instConfigFields\"><span class=\"name\">Lake</span>.<span class=\"name\">LeanConfig</span>.<span class=\"name\">instConfigFields</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Config/Meta.html#Lake.ConfigFields\">ConfigFields</a> <a href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig\">LeanConfig</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Config/LeanConfig.lean#L128-L128","name":"Lake.LeanConfig.backend.instConfigField","line":128,"kind":"instance","docLink":"./Lake/Config/LeanConfig.html#Lake.LeanConfig.backend.instConfigField","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig.backend.instConfigField\"><span class=\"name\">Lake</span>.<span class=\"name\">LeanConfig</span>.<span class=\"name\">backend</span>.<span class=\"name\">instConfigField</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Config/Meta.html#Lake.ConfigField\">ConfigField</a> <a href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig\">LeanConfig</a> <span class=\"fn\">`backend</span> <a href=\"./Lake/Config/LeanConfig.html#Lake.Backend\">Backend</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Config/LeanConfig.lean#L128-L128","name":"Lake.LeanConfig.moreLinkArgs.instConfigField","line":128,"kind":"instance","docLink":"./Lake/Config/LeanConfig.html#Lake.LeanConfig.moreLinkArgs.instConfigField","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig.moreLinkArgs.instConfigField\"><span class=\"name\">Lake</span>.<span class=\"name\">LeanConfig</span>.<span class=\"name\">moreLinkArgs</span>.<span class=\"name\">instConfigField</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Config/Meta.html#Lake.ConfigField\">ConfigField</a> <a href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig\">LeanConfig</a> <span class=\"fn\">`moreLinkArgs</span> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#String\">String</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Config/LeanConfig.lean#L128-L128","name":"Lake.LeanConfig.weakLeanArgs.instConfigField","line":128,"kind":"instance","docLink":"./Lake/Config/LeanConfig.html#Lake.LeanConfig.weakLeanArgs.instConfigField","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig.weakLeanArgs.instConfigField\"><span class=\"name\">Lake</span>.<span class=\"name\">LeanConfig</span>.<span class=\"name\">weakLeanArgs</span>.<span class=\"name\">instConfigField</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Config/Meta.html#Lake.ConfigField\">ConfigField</a> <a href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig\">LeanConfig</a> <span class=\"fn\">`weakLeanArgs</span> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#String\">String</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Config/LeanConfig.lean#L128-L128","name":"Lake.LeanConfig.moreServerOptions.instConfigField","line":128,"kind":"instance","docLink":"./Lake/Config/LeanConfig.html#Lake.LeanConfig.moreServerOptions.instConfigField","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig.moreServerOptions.instConfigField\"><span class=\"name\">Lake</span>.<span class=\"name\">LeanConfig</span>.<span class=\"name\">moreServerOptions</span>.<span class=\"name\">instConfigField</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Config/Meta.html#Lake.ConfigField\">ConfigField</a> <a href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig\">LeanConfig</a> <span class=\"fn\">`moreServerOptions</span> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Util/LeanOptions.html#Lean.LeanOption\">LeanOption</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Config/LeanConfig.lean#L128-L128","name":"Lake.LeanConfig.instConfigMeta","line":128,"kind":"instance","docLink":"./Lake/Config/LeanConfig.html#Lake.LeanConfig.instConfigMeta","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig.instConfigMeta\"><span class=\"name\">Lake</span>.<span class=\"name\">LeanConfig</span>.<span class=\"name\">instConfigMeta</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Config/Meta.html#Lake.ConfigInfo\">ConfigInfo</a> <span class=\"fn\">`Lake.LeanConfig</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Config/LeanConfig.lean#L128-L128","name":"Lake.LeanConfig.moreLinkObjs.instConfigField","line":128,"kind":"instance","docLink":"./Lake/Config/LeanConfig.html#Lake.LeanConfig.moreLinkObjs.instConfigField","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig.moreLinkObjs.instConfigField\"><span class=\"name\">Lake</span>.<span class=\"name\">LeanConfig</span>.<span class=\"name\">moreLinkObjs</span>.<span class=\"name\">instConfigField</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Config/Meta.html#Lake.ConfigField\">ConfigField</a> <a href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig\">LeanConfig</a> <span class=\"fn\">`moreLinkObjs</span> <span class=\"fn\">(<a href=\"./Lake/Build/Target/Basic.html#Lake.TargetArray\">TargetArray</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Config/LeanConfig.lean#L128-L128","name":"Lake.LeanConfig.leanOptions.instConfigField","line":128,"kind":"instance","docLink":"./Lake/Config/LeanConfig.html#Lake.LeanConfig.leanOptions.instConfigField","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig.leanOptions.instConfigField\"><span class=\"name\">Lake</span>.<span class=\"name\">LeanConfig</span>.<span class=\"name\">leanOptions</span>.<span class=\"name\">instConfigField</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Config/Meta.html#Lake.ConfigField\">ConfigField</a> <a href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig\">LeanConfig</a> <span class=\"fn\">`leanOptions</span> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Util/LeanOptions.html#Lean.LeanOption\">LeanOption</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Config/LeanConfig.lean#L128-L128","name":"Lake.LeanConfig.moreLeanArgs.instConfigField","line":128,"kind":"instance","docLink":"./Lake/Config/LeanConfig.html#Lake.LeanConfig.moreLeanArgs.instConfigField","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig.moreLeanArgs.instConfigField\"><span class=\"name\">Lake</span>.<span class=\"name\">LeanConfig</span>.<span class=\"name\">moreLeanArgs</span>.<span class=\"name\">instConfigField</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Config/Meta.html#Lake.ConfigField\">ConfigField</a> <a href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig\">LeanConfig</a> <span class=\"fn\">`moreLeanArgs</span> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#String\">String</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Config/LeanConfig.lean#L128-L128","name":"Lake.LeanConfig.weakLinkArgs.instConfigField","line":128,"kind":"instance","docLink":"./Lake/Config/LeanConfig.html#Lake.LeanConfig.weakLinkArgs.instConfigField","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig.weakLinkArgs.instConfigField\"><span class=\"name\">Lake</span>.<span class=\"name\">LeanConfig</span>.<span class=\"name\">weakLinkArgs</span>.<span class=\"name\">instConfigField</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Config/Meta.html#Lake.ConfigField\">ConfigField</a> <a href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig\">LeanConfig</a> <span class=\"fn\">`weakLinkArgs</span> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#String\">String</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Config/LeanConfig.lean#L128-L128","name":"Lake.LeanConfig.moreLinkLibs.instConfigField","line":128,"kind":"instance","docLink":"./Lake/Config/LeanConfig.html#Lake.LeanConfig.moreLinkLibs.instConfigField","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig.moreLinkLibs.instConfigField\"><span class=\"name\">Lake</span>.<span class=\"name\">LeanConfig</span>.<span class=\"name\">moreLinkLibs</span>.<span class=\"name\">instConfigField</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Config/Meta.html#Lake.ConfigField\">ConfigField</a> <a href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig\">LeanConfig</a> <span class=\"fn\">`moreLinkLibs</span> <span class=\"fn\">(<a href=\"./Lake/Build/Target/Basic.html#Lake.TargetArray\">TargetArray</a> <a href=\"./Lake/Config/Dynlib.html#Lake.Dynlib\">Dynlib</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Config/LeanConfig.lean#L128-L128","name":"Lake.LeanConfig.dynlibs.instConfigField","line":128,"kind":"instance","docLink":"./Lake/Config/LeanConfig.html#Lake.LeanConfig.dynlibs.instConfigField","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig.dynlibs.instConfigField\"><span class=\"name\">Lake</span>.<span class=\"name\">LeanConfig</span>.<span class=\"name\">dynlibs</span>.<span class=\"name\">instConfigField</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Config/Meta.html#Lake.ConfigField\">ConfigField</a> <a href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig\">LeanConfig</a> <span class=\"fn\">`dynlibs</span> <span class=\"fn\">(<a href=\"./Lake/Build/Target/Basic.html#Lake.TargetArray\">TargetArray</a> <a href=\"./Lake/Config/Dynlib.html#Lake.Dynlib\">Dynlib</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Config/LeanConfig.lean#L128-L128","name":"Lake.LeanConfig.plugins.instConfigField","line":128,"kind":"instance","docLink":"./Lake/Config/LeanConfig.html#Lake.LeanConfig.plugins.instConfigField","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig.plugins.instConfigField\"><span class=\"name\">Lake</span>.<span class=\"name\">LeanConfig</span>.<span class=\"name\">plugins</span>.<span class=\"name\">instConfigField</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Config/Meta.html#Lake.ConfigField\">ConfigField</a> <a href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig\">LeanConfig</a> <span class=\"fn\">`plugins</span> <span class=\"fn\">(<a href=\"./Lake/Build/Target/Basic.html#Lake.TargetArray\">TargetArray</a> <a href=\"./Lake/Config/Dynlib.html#Lake.Dynlib\">Dynlib</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Config/LeanConfig.lean#L128-L128","name":"Lake.LeanConfig.platformIndependent.instConfigField","line":128,"kind":"instance","docLink":"./Lake/Config/LeanConfig.html#Lake.LeanConfig.platformIndependent.instConfigField","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig.platformIndependent.instConfigField\"><span class=\"name\">Lake</span>.<span class=\"name\">LeanConfig</span>.<span class=\"name\">platformIndependent</span>.<span class=\"name\">instConfigField</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Config/Meta.html#Lake.ConfigField\">ConfigField</a> <a href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig\">LeanConfig</a> <span class=\"fn\">`platformIndependent</span> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Config/LeanConfig.lean#L127-L128","name":"Lake.LeanConfig","line":127,"kind":"structure","docLink":"./Lake/Config/LeanConfig.html#Lake.LeanConfig","doc":"Configuration options common to targets that build modules. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.LeanConfig\"><span class=\"name\">Lake</span>.<span class=\"name\">LeanConfig</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Config/LeanConfig.lean#L125-L125","name":"Lake.instToStringBuildType","line":125,"kind":"instance","docLink":"./Lake/Config/LeanConfig.html#Lake.instToStringBuildType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.instToStringBuildType\"><span class=\"name\">Lake</span>.<span class=\"name\">instToStringBuildType</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString\">ToString</a> <a href=\"./Lake/Config/LeanConfig.html#Lake.BuildType\">BuildType</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Config/LeanConfig.lean#L118-L123","name":"Lake.BuildType.toString","line":118,"kind":"def","docLink":"./Lake/Config/LeanConfig.html#Lake.BuildType.toString","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.BuildType.toString\"><span class=\"name\">Lake</span>.<span class=\"name\">BuildType</span>.<span class=\"name\">toString</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">bt</span> : <a href=\"./Lake/Config/LeanConfig.html#Lake.BuildType\">BuildType</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String\">String</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Config/LeanConfig.lean#L110-L116","name":"Lake.BuildType.ofString?","line":110,"kind":"def","docLink":"./Lake/Config/LeanConfig.html#Lake.BuildType.ofString?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.BuildType.ofString?\"><span class=\"name\">Lake</span>.<span class=\"name\">BuildType</span>.<span class=\"name\">ofString?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lake/Config/LeanConfig.html#Lake.BuildType\">BuildType</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Config/LeanConfig.lean#L103-L108","name":"Lake.BuildType.leancArgs","line":103,"kind":"def","docLink":"./Lake/Config/LeanConfig.html#Lake.BuildType.leancArgs","doc":"The arguments to pass to `leanc` based on the build type. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.BuildType.leancArgs\"><span class=\"name\">Lake</span>.<span class=\"name\">BuildType</span>.<span class=\"name\">leancArgs</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Config/LeanConfig.html#Lake.BuildType\">BuildType</a> â†’ <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#String\">String</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Config/LeanConfig.lean#L92-L101","name":"Lake.Backend.orPreferLeft","line":92,"kind":"def","docLink":"./Lake/Config/LeanConfig.html#Lake.Backend.orPreferLeft","doc":"If the left backend is default, choose the right one.\nOtherwise, keep the left one.\nThis is used to implement preferential choice of backends,\nwhere the library config can refine the package config.\nFormally, a left absorbing monoid on {`C`, `LLVM`} with `Default` as the unit.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.Backend.orPreferLeft\"><span class=\"name\">Lake</span>.<span class=\"name\">Backend</span>.<span class=\"name\">orPreferLeft</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Config/LeanConfig.html#Lake.Backend\">Backend</a> â†’ <a href=\"./Lake/Config/LeanConfig.html#Lake.Backend\">Backend</a> â†’ <a href=\"./Lake/Config/LeanConfig.html#Lake.Backend\">Backend</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Config/LeanConfig.lean#L90-L90","name":"Lake.instToStringBackend","line":90,"kind":"instance","docLink":"./Lake/Config/LeanConfig.html#Lake.instToStringBackend","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.instToStringBackend\"><span class=\"name\">Lake</span>.<span class=\"name\">instToStringBackend</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString\">ToString</a> <a href=\"./Lake/Config/LeanConfig.html#Lake.Backend\">Backend</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Config/LeanConfig.lean#L84-L88","name":"Lake.Backend.toString","line":84,"kind":"def","docLink":"./Lake/Config/LeanConfig.html#Lake.Backend.toString","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.Backend.toString\"><span class=\"name\">Lake</span>.<span class=\"name\">Backend</span>.<span class=\"name\">toString</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">bt</span> : <a href=\"./Lake/Config/LeanConfig.html#Lake.Backend\">Backend</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String\">String</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Config/LeanConfig.lean#L77-L82","name":"Lake.Backend.ofString?","line":77,"kind":"def","docLink":"./Lake/Config/LeanConfig.html#Lake.Backend.ofString?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.Backend.ofString?\"><span class=\"name\">Lake</span>.<span class=\"name\">Backend</span>.<span class=\"name\">ofString?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lake/Config/LeanConfig.html#Lake.Backend\">Backend</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Config/LeanConfig.lean#L75-L75","name":"Lake.instInhabitedBackend","line":75,"kind":"instance","docLink":"./Lake/Config/LeanConfig.html#Lake.instInhabitedBackend","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.instInhabitedBackend\"><span class=\"name\">Lake</span>.<span class=\"name\">instInhabitedBackend</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lake/Config/LeanConfig.html#Lake.Backend\">Backend</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Config/LeanConfig.lean#L73-L73","name":"Lake.instDecidableEqBackend","line":73,"kind":"instance","docLink":"./Lake/Config/LeanConfig.html#Lake.instDecidableEqBackend","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.instDecidableEqBackend\"><span class=\"name\">Lake</span>.<span class=\"name\">instDecidableEqBackend</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <a href=\"./Lake/Config/LeanConfig.html#Lake.Backend\">Backend</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Config/LeanConfig.lean#L73-L73","name":"Lake.instReprBackend","line":73,"kind":"instance","docLink":"./Lake/Config/LeanConfig.html#Lake.instReprBackend","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.instReprBackend\"><span class=\"name\">Lake</span>.<span class=\"name\">instReprBackend</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Lake/Config/LeanConfig.html#Lake.Backend\">Backend</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Config/LeanConfig.lean#L69-L72","name":"Lake.Backend.default","line":69,"kind":"ctor","docLink":"./Lake/Config/LeanConfig.html#Lake.Backend.default","doc":"Use the default backend. Can be overridden by more specific configuration.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.Backend.default\"><span class=\"name\">Lake</span>.<span class=\"name\">Backend</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lake/Config/LeanConfig.html#Lake.Backend\">Backend</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Config/LeanConfig.lean#L65-L68","name":"Lake.Backend.llvm","line":65,"kind":"ctor","docLink":"./Lake/Config/LeanConfig.html#Lake.Backend.llvm","doc":"Force the LLVM backend.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.Backend.llvm\"><span class=\"name\">Lake</span>.<span class=\"name\">Backend</span>.<span class=\"name\">llvm</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lake/Config/LeanConfig.html#Lake.Backend\">Backend</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Config/LeanConfig.lean#L61-L64","name":"Lake.Backend.c","line":61,"kind":"ctor","docLink":"./Lake/Config/LeanConfig.html#Lake.Backend.c","doc":"Force the C backend.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.Backend.c\"><span class=\"name\">Lake</span>.<span class=\"name\">Backend</span>.<span class=\"name\">c</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lake/Config/LeanConfig.html#Lake.Backend\">Backend</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Config/LeanConfig.lean#L57-L73","name":"Lake.Backend","line":57,"kind":"inductive","docLink":"./Lake/Config/LeanConfig.html#Lake.Backend","doc":"Compiler backend with which to compile Lean.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.Backend\"><span class=\"name\">Lake</span>.<span class=\"name\">Backend</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Config/LeanConfig.lean#L55-L55","name":"Lake.instMaxBuildType","line":55,"kind":"instance","docLink":"./Lake/Config/LeanConfig.html#Lake.instMaxBuildType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.instMaxBuildType\"><span class=\"name\">Lake</span>.<span class=\"name\">instMaxBuildType</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Max\">Max</a> <a href=\"./Lake/Config/LeanConfig.html#Lake.BuildType\">BuildType</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Config/LeanConfig.lean#L54-L54","name":"Lake.instMinBuildType","line":54,"kind":"instance","docLink":"./Lake/Config/LeanConfig.html#Lake.instMinBuildType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.instMinBuildType\"><span class=\"name\">Lake</span>.<span class=\"name\">instMinBuildType</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Min\">Min</a> <a href=\"./Lake/Config/LeanConfig.html#Lake.BuildType\">BuildType</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Config/LeanConfig.lean#L53-L53","name":"Lake.instLEBuildType","line":53,"kind":"instance","docLink":"./Lake/Config/LeanConfig.html#Lake.instLEBuildType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.instLEBuildType\"><span class=\"name\">Lake</span>.<span class=\"name\">instLEBuildType</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#LE\">LE</a> <a href=\"./Lake/Config/LeanConfig.html#Lake.BuildType\">BuildType</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Config/LeanConfig.lean#L48-L52","name":"Lake.instLTBuildType","line":48,"kind":"instance","docLink":"./Lake/Config/LeanConfig.html#Lake.instLTBuildType","doc":"Ordering on build types. The ordering is used to determine\nthe *minimum* build version that is necessary for a build.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.instLTBuildType\"><span class=\"name\">Lake</span>.<span class=\"name\">instLTBuildType</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#LT\">LT</a> <a href=\"./Lake/Config/LeanConfig.html#Lake.BuildType\">BuildType</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Config/LeanConfig.lean#L46-L46","name":"Lake.instOrdBuildType","line":46,"kind":"instance","docLink":"./Lake/Config/LeanConfig.html#Lake.instOrdBuildType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.instOrdBuildType\"><span class=\"name\">Lake</span>.<span class=\"name\">instOrdBuildType</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Ord.html#Ord\">Ord</a> <a href=\"./Lake/Config/LeanConfig.html#Lake.BuildType\">BuildType</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Config/LeanConfig.lean#L46-L46","name":"Lake.instDecidableEqBuildType","line":46,"kind":"instance","docLink":"./Lake/Config/LeanConfig.html#Lake.instDecidableEqBuildType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.instDecidableEqBuildType\"><span class=\"name\">Lake</span>.<span class=\"name\">instDecidableEqBuildType</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <a href=\"./Lake/Config/LeanConfig.html#Lake.BuildType\">BuildType</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Config/LeanConfig.lean#L46-L46","name":"Lake.instReprBuildType","line":46,"kind":"instance","docLink":"./Lake/Config/LeanConfig.html#Lake.instReprBuildType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.instReprBuildType\"><span class=\"name\">Lake</span>.<span class=\"name\">instReprBuildType</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Lake/Config/LeanConfig.html#Lake.BuildType\">BuildType</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Config/LeanConfig.lean#L46-L46","name":"Lake.instInhabitedBuildType","line":46,"kind":"instance","docLink":"./Lake/Config/LeanConfig.html#Lake.instInhabitedBuildType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.instInhabitedBuildType\"><span class=\"name\">Lake</span>.<span class=\"name\">instInhabitedBuildType</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lake/Config/LeanConfig.html#Lake.BuildType\">BuildType</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Config/LeanConfig.lean#L41-L45","name":"Lake.BuildType.release","line":41,"kind":"ctor","docLink":"./Lake/Config/LeanConfig.html#Lake.BuildType.release","doc":"High optimization level and no debug info, code, or asserts\n(e.g., passes `-O3 -DNDEBUG` when compiling C code).\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.BuildType.release\"><span class=\"name\">Lake</span>.<span class=\"name\">BuildType</span>.<span class=\"name\">release</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lake/Config/LeanConfig.html#Lake.BuildType\">BuildType</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Config/LeanConfig.lean#L36-L40","name":"Lake.BuildType.minSizeRel","line":36,"kind":"ctor","docLink":"./Lake/Config/LeanConfig.html#Lake.BuildType.minSizeRel","doc":"Same as `release` but optimizing for size rather than speed\n(e.g., passes `-Os -DNDEBUG` when compiling C code).\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.BuildType.minSizeRel\"><span class=\"name\">Lake</span>.<span class=\"name\">BuildType</span>.<span class=\"name\">minSizeRel</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lake/Config/LeanConfig.html#Lake.BuildType\">BuildType</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Config/LeanConfig.lean#L31-L35","name":"Lake.BuildType.relWithDebInfo","line":31,"kind":"ctor","docLink":"./Lake/Config/LeanConfig.html#Lake.BuildType.relWithDebInfo","doc":"Optimized, *with* debug info, but no debug code or asserts\n(e.g., passes `-O3 -g -DNDEBUG` when compiling C code).\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.BuildType.relWithDebInfo\"><span class=\"name\">Lake</span>.<span class=\"name\">BuildType</span>.<span class=\"name\">relWithDebInfo</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lake/Config/LeanConfig.html#Lake.BuildType\">BuildType</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Config/LeanConfig.lean#L24-L30","name":"Lake.BuildType.debug","line":24,"kind":"ctor","docLink":"./Lake/Config/LeanConfig.html#Lake.BuildType.debug","doc":"Debug optimization, asserts enabled, custom debug code enabled, and\ndebug info included in executable (so you can step through the code with a\ndebugger and have address to source-file:line-number translation).\nFor example, passes `-Og -g` when compiling C code.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.BuildType.debug\"><span class=\"name\">Lake</span>.<span class=\"name\">BuildType</span>.<span class=\"name\">debug</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lake/Config/LeanConfig.html#Lake.BuildType\">BuildType</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Config/LeanConfig.lean#L19-L46","name":"Lake.BuildType","line":19,"kind":"inductive","docLink":"./Lake/Config/LeanConfig.html#Lake.BuildType","doc":"Lake equivalent of CMake's\n[`CMAKE_BUILD_TYPE`](https://stackoverflow.com/a/59314670).\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Config/LeanConfig.html#Lake.BuildType\"><span class=\"name\">Lake</span>.<span class=\"name\">BuildType</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}