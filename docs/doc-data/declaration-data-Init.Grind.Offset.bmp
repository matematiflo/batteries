{"name":"Init.Grind.Offset","instances":[],"imports":["Init.Core","Init.Omega"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/Grind/Offset.lean#L94-L94","name":"Lean.Grind.Nat.le_offset","line":94,"kind":"theorem","docLink":"./Init/Grind/Offset.html#Lean.Grind.Nat.le_offset","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Offset.html#Lean.Grind.Nat.le_offset\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Nat</span>.<span class=\"name\">le_offset</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">k</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/Grind/Offset.lean#L93-L93","name":"Lean.Grind.Nat.eq_of_le_of_le","line":93,"kind":"theorem","docLink":"./Init/Grind/Offset.html#Lean.Grind.Nat.eq_of_le_of_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Offset.html#Lean.Grind.Nat.eq_of_le_of_le\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Nat</span>.<span class=\"name\">eq_of_le_of_le</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">u </span><span class=\"fn\">v</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">v</span> → <span class=\"fn\"><span class=\"fn\">v</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">u</span> → <span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">v</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/Grind/Offset.lean#L92-L92","name":"Lean.Grind.Nat.le_of_eq_2","line":92,"kind":"theorem","docLink":"./Init/Grind/Offset.html#Lean.Grind.Nat.le_of_eq_2","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Offset.html#Lean.Grind.Nat.le_of_eq_2\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Nat</span>.<span class=\"name\">le_of_eq_2</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">u </span><span class=\"fn\">v</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">v</span> → <span class=\"fn\">v</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">u</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/Grind/Offset.lean#L91-L91","name":"Lean.Grind.Nat.le_of_eq_1","line":91,"kind":"theorem","docLink":"./Init/Grind/Offset.html#Lean.Grind.Nat.le_of_eq_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Offset.html#Lean.Grind.Nat.le_of_eq_1\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Nat</span>.<span class=\"name\">le_of_eq_1</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">u </span><span class=\"fn\">v</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">v</span> → <span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">v</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/Grind/Offset.lean#L84-L85","name":"Lean.Grind.Nat.lo_eq_false_of_ro","line":84,"kind":"theorem","docLink":"./Init/Grind/Offset.html#Lean.Grind.Nat.lo_eq_false_of_ro","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Offset.html#Lean.Grind.Nat.lo_eq_false_of_ro\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Nat</span>.<span class=\"name\">lo_eq_false_of_ro</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">u </span><span class=\"fn\">v </span><span class=\"fn\">k₁ </span><span class=\"fn\">k₂</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Grind/Offset.html#Lean.Grind.isLt\">isLt</a> <span class=\"fn\">k₁</span> <span class=\"fn\">k₂</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a> → <span class=\"fn\"><span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">v</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">k₁</span> → (<span class=\"fn\">v</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">k₂</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">u</span>) <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#False\">False</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/Grind/Offset.lean#L82-L83","name":"Lean.Grind.Nat.ro_eq_false_of_lo","line":82,"kind":"theorem","docLink":"./Init/Grind/Offset.html#Lean.Grind.Nat.ro_eq_false_of_lo","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Offset.html#Lean.Grind.Nat.ro_eq_false_of_lo\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Nat</span>.<span class=\"name\">ro_eq_false_of_lo</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">u </span><span class=\"fn\">v </span><span class=\"fn\">k₁ </span><span class=\"fn\">k₂</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Grind/Offset.html#Lean.Grind.isLt\">isLt</a> <span class=\"fn\">k₂</span> <span class=\"fn\">k₁</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a> → <span class=\"fn\"><span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">k₁</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">v</span> → (<span class=\"fn\">v</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">k₂</span>) <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#False\">False</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/Grind/Offset.lean#L80-L81","name":"Lean.Grind.Nat.lo_eq_false_of_lo","line":80,"kind":"theorem","docLink":"./Init/Grind/Offset.html#Lean.Grind.Nat.lo_eq_false_of_lo","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Offset.html#Lean.Grind.Nat.lo_eq_false_of_lo\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Nat</span>.<span class=\"name\">lo_eq_false_of_lo</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">u </span><span class=\"fn\">v </span><span class=\"fn\">k₁ </span><span class=\"fn\">k₂</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Grind/Offset.html#Lean.Grind.isLt\">isLt</a> <span class=\"fn\">0</span> (<span class=\"fn\">k₁</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">k₂</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a> → <span class=\"fn\"><span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">k₁</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">v</span> → (<span class=\"fn\">v</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">k₂</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">u</span>) <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#False\">False</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/Grind/Offset.lean#L78-L79","name":"Lean.Grind.Nat.le_eq_false_of_lo","line":78,"kind":"theorem","docLink":"./Init/Grind/Offset.html#Lean.Grind.Nat.le_eq_false_of_lo","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Offset.html#Lean.Grind.Nat.le_eq_false_of_lo\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Nat</span>.<span class=\"name\">le_eq_false_of_lo</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">u </span><span class=\"fn\">v </span><span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Grind/Offset.html#Lean.Grind.isLt\">isLt</a> <span class=\"fn\">0</span> <span class=\"fn\">k</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a> → <span class=\"fn\"><span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">v</span> → (<span class=\"fn\">v</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">u</span>) <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#False\">False</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/Grind/Offset.lean#L76-L77","name":"Lean.Grind.Nat.lo_eq_false_of_le","line":76,"kind":"theorem","docLink":"./Init/Grind/Offset.html#Lean.Grind.Nat.lo_eq_false_of_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Offset.html#Lean.Grind.Nat.lo_eq_false_of_le\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Nat</span>.<span class=\"name\">lo_eq_false_of_le</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">u </span><span class=\"fn\">v </span><span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Grind/Offset.html#Lean.Grind.isLt\">isLt</a> <span class=\"fn\">0</span> <span class=\"fn\">k</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a> → <span class=\"fn\"><span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">v</span> → (<span class=\"fn\">v</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">u</span>) <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#False\">False</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/Grind/Offset.lean#L69-L70","name":"Lean.Grind.Nat.ro_eq_true_of_ro","line":69,"kind":"theorem","docLink":"./Init/Grind/Offset.html#Lean.Grind.Nat.ro_eq_true_of_ro","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Offset.html#Lean.Grind.Nat.ro_eq_true_of_ro\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Nat</span>.<span class=\"name\">ro_eq_true_of_ro</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">u </span><span class=\"fn\">v </span><span class=\"fn\">k₁ </span><span class=\"fn\">k₂</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Grind/Offset.html#Lean.Grind.isLE\">isLE</a> <span class=\"fn\">k₁</span> <span class=\"fn\">k₂</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a> → <span class=\"fn\"><span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">v</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">k₁</span> → (<span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">v</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">k₂</span>) <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#True\">True</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/Grind/Offset.lean#L67-L68","name":"Lean.Grind.Nat.ro_eq_true_of_le","line":67,"kind":"theorem","docLink":"./Init/Grind/Offset.html#Lean.Grind.Nat.ro_eq_true_of_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Offset.html#Lean.Grind.Nat.ro_eq_true_of_le\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Nat</span>.<span class=\"name\">ro_eq_true_of_le</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">u </span><span class=\"fn\">v </span><span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">v</span> → (<span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">v</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">k</span>) <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#True\">True</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/Grind/Offset.lean#L65-L66","name":"Lean.Grind.Nat.ro_eq_true_of_lo","line":65,"kind":"theorem","docLink":"./Init/Grind/Offset.html#Lean.Grind.Nat.ro_eq_true_of_lo","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Offset.html#Lean.Grind.Nat.ro_eq_true_of_lo\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Nat</span>.<span class=\"name\">ro_eq_true_of_lo</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">u </span><span class=\"fn\">v </span><span class=\"fn\">k₁ </span><span class=\"fn\">k₂</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">k₁</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">v</span> → (<span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">v</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">k₂</span>) <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#True\">True</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/Grind/Offset.lean#L63-L64","name":"Lean.Grind.Nat.le_eq_true_of_le","line":63,"kind":"theorem","docLink":"./Init/Grind/Offset.html#Lean.Grind.Nat.le_eq_true_of_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Offset.html#Lean.Grind.Nat.le_eq_true_of_le\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Nat</span>.<span class=\"name\">le_eq_true_of_le</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">u </span><span class=\"fn\">v</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">v</span> → (<span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">v</span>) <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#True\">True</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/Grind/Offset.lean#L61-L62","name":"Lean.Grind.Nat.le_eq_true_of_lo","line":61,"kind":"theorem","docLink":"./Init/Grind/Offset.html#Lean.Grind.Nat.le_eq_true_of_lo","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Offset.html#Lean.Grind.Nat.le_eq_true_of_lo\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Nat</span>.<span class=\"name\">le_eq_true_of_lo</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">u </span><span class=\"fn\">v </span><span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">v</span> → (<span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">v</span>) <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#True\">True</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/Grind/Offset.lean#L59-L60","name":"Lean.Grind.Nat.lo_eq_true_of_lo","line":59,"kind":"theorem","docLink":"./Init/Grind/Offset.html#Lean.Grind.Nat.lo_eq_true_of_lo","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Offset.html#Lean.Grind.Nat.lo_eq_true_of_lo\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Nat</span>.<span class=\"name\">lo_eq_true_of_lo</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">u </span><span class=\"fn\">v </span><span class=\"fn\">k₁ </span><span class=\"fn\">k₂</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Grind/Offset.html#Lean.Grind.isLE\">isLE</a> <span class=\"fn\">k₂</span> <span class=\"fn\">k₁</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a> → <span class=\"fn\"><span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">k₁</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">v</span> → (<span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">k₂</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">v</span>) <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#True\">True</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/Grind/Offset.lean#L55-L56","name":"Lean.Grind.Nat.unsat_lo_ro","line":55,"kind":"theorem","docLink":"./Init/Grind/Offset.html#Lean.Grind.Nat.unsat_lo_ro","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Offset.html#Lean.Grind.Nat.unsat_lo_ro\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Nat</span>.<span class=\"name\">unsat_lo_ro</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">u </span><span class=\"fn\">v </span><span class=\"fn\">k₁ </span><span class=\"fn\">k₂</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Grind/Offset.html#Lean.Grind.isLt\">isLt</a> <span class=\"fn\">k₂</span> <span class=\"fn\">k₁</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a> → <span class=\"fn\"><span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">k₁</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">v</span> → <span class=\"fn\"><span class=\"fn\">v</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">k₂</span> → <a href=\"./Init/Prelude.html#False\">False</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/Grind/Offset.lean#L53-L54","name":"Lean.Grind.Nat.unsat_lo_lo","line":53,"kind":"theorem","docLink":"./Init/Grind/Offset.html#Lean.Grind.Nat.unsat_lo_lo","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Offset.html#Lean.Grind.Nat.unsat_lo_lo\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Nat</span>.<span class=\"name\">unsat_lo_lo</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">u </span><span class=\"fn\">v </span><span class=\"fn\">k₁ </span><span class=\"fn\">k₂</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Grind/Offset.html#Lean.Grind.isLt\">isLt</a> <span class=\"fn\">0</span> (<span class=\"fn\">k₁</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">k₂</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a> → <span class=\"fn\"><span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">k₁</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">v</span> → <span class=\"fn\"><span class=\"fn\">v</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">k₂</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">u</span> → <a href=\"./Init/Prelude.html#False\">False</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/Grind/Offset.lean#L51-L52","name":"Lean.Grind.Nat.unsat_le_lo","line":51,"kind":"theorem","docLink":"./Init/Grind/Offset.html#Lean.Grind.Nat.unsat_le_lo","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Offset.html#Lean.Grind.Nat.unsat_le_lo\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Nat</span>.<span class=\"name\">unsat_le_lo</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">u </span><span class=\"fn\">v </span><span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Grind/Offset.html#Lean.Grind.isLt\">isLt</a> <span class=\"fn\">0</span> <span class=\"fn\">k</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a> → <span class=\"fn\"><span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">v</span> → <span class=\"fn\"><span class=\"fn\">v</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">u</span> → <a href=\"./Init/Prelude.html#False\">False</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/Grind/Offset.lean#L47-L48","name":"Lean.Grind.Nat.of_ro_eq_false","line":47,"kind":"theorem","docLink":"./Init/Grind/Offset.html#Lean.Grind.Nat.of_ro_eq_false","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Offset.html#Lean.Grind.Nat.of_ro_eq_false\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Nat</span>.<span class=\"name\">of_ro_eq_false</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">u </span><span class=\"fn\">v </span><span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">v</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">k</span>) <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#False\">False</a> → <span class=\"fn\">v</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> (<span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>) <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">u</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/Grind/Offset.lean#L45-L46","name":"Lean.Grind.Nat.of_lo_eq_false","line":45,"kind":"theorem","docLink":"./Init/Grind/Offset.html#Lean.Grind.Nat.of_lo_eq_false","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Offset.html#Lean.Grind.Nat.of_lo_eq_false\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Nat</span>.<span class=\"name\">of_lo_eq_false</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">u </span><span class=\"fn\">v </span><span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">v</span>) <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#False\">False</a> → <span class=\"fn\">v</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> (<span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">1</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/Grind/Offset.lean#L43-L44","name":"Lean.Grind.Nat.of_lo_eq_false_1","line":43,"kind":"theorem","docLink":"./Init/Grind/Offset.html#Lean.Grind.Nat.of_lo_eq_false_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Offset.html#Lean.Grind.Nat.of_lo_eq_false_1\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Nat</span>.<span class=\"name\">of_lo_eq_false_1</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">u </span><span class=\"fn\">v</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">v</span>) <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#False\">False</a> → <span class=\"fn\">v</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">u</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/Grind/Offset.lean#L41-L42","name":"Lean.Grind.Nat.of_le_eq_false","line":41,"kind":"theorem","docLink":"./Init/Grind/Offset.html#Lean.Grind.Nat.of_le_eq_false","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Offset.html#Lean.Grind.Nat.of_le_eq_false\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Nat</span>.<span class=\"name\">of_le_eq_false</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">u </span><span class=\"fn\">v</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">v</span>) <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#False\">False</a> → <span class=\"fn\">v</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">u</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/Grind/Offset.lean#L37-L38","name":"Lean.Grind.Nat.ro_ro","line":37,"kind":"theorem","docLink":"./Init/Grind/Offset.html#Lean.Grind.Nat.ro_ro","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Offset.html#Lean.Grind.Nat.ro_ro\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Nat</span>.<span class=\"name\">ro_ro</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">u </span><span class=\"fn\">w </span><span class=\"fn\">v </span><span class=\"fn\">k₁ </span><span class=\"fn\">k₂</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">w</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">k₁</span> → <span class=\"fn\"><span class=\"fn\">w</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">v</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">k₂</span> → <span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">v</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> (<span class=\"fn\">k₁</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">k₂</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/Grind/Offset.lean#L35-L36","name":"Lean.Grind.Nat.ro_lo_2","line":35,"kind":"theorem","docLink":"./Init/Grind/Offset.html#Lean.Grind.Nat.ro_lo_2","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Offset.html#Lean.Grind.Nat.ro_lo_2\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Nat</span>.<span class=\"name\">ro_lo_2</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">u </span><span class=\"fn\">w </span><span class=\"fn\">v </span><span class=\"fn\">k₁ </span><span class=\"fn\">k₂</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Grind/Offset.html#Lean.Grind.isLt\">isLt</a> <span class=\"fn\">k₁</span> <span class=\"fn\">k₂</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a> → <span class=\"fn\"><span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">w</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">k₁</span> → <span class=\"fn\"><span class=\"fn\">w</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">k₂</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">v</span> → <span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> (<span class=\"fn\">k₂</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">k₁</span>) <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">v</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/Grind/Offset.lean#L33-L34","name":"Lean.Grind.Nat.ro_lo_1","line":33,"kind":"theorem","docLink":"./Init/Grind/Offset.html#Lean.Grind.Nat.ro_lo_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Offset.html#Lean.Grind.Nat.ro_lo_1\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Nat</span>.<span class=\"name\">ro_lo_1</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">u </span><span class=\"fn\">w </span><span class=\"fn\">v </span><span class=\"fn\">k₁ </span><span class=\"fn\">k₂</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">w</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">k₁</span> → <span class=\"fn\"><span class=\"fn\">w</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">k₂</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">v</span> → <span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">v</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> (<span class=\"fn\">k₁</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">k₂</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/Grind/Offset.lean#L31-L32","name":"Lean.Grind.Nat.ro_le","line":31,"kind":"theorem","docLink":"./Init/Grind/Offset.html#Lean.Grind.Nat.ro_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Offset.html#Lean.Grind.Nat.ro_le\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Nat</span>.<span class=\"name\">ro_le</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">u </span><span class=\"fn\">w </span><span class=\"fn\">v </span><span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">w</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">k</span> → <span class=\"fn\"><span class=\"fn\">w</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">v</span> → <span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">v</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">k</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/Grind/Offset.lean#L29-L30","name":"Lean.Grind.Nat.lo_ro_2","line":29,"kind":"theorem","docLink":"./Init/Grind/Offset.html#Lean.Grind.Nat.lo_ro_2","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Offset.html#Lean.Grind.Nat.lo_ro_2\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Nat</span>.<span class=\"name\">lo_ro_2</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">u </span><span class=\"fn\">w </span><span class=\"fn\">v </span><span class=\"fn\">k₁ </span><span class=\"fn\">k₂</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">k₁</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">w</span> → <span class=\"fn\"><span class=\"fn\">w</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">v</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">k₂</span> → <span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">v</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> (<span class=\"fn\">k₂</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">k₁</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/Grind/Offset.lean#L27-L28","name":"Lean.Grind.Nat.lo_ro_1","line":27,"kind":"theorem","docLink":"./Init/Grind/Offset.html#Lean.Grind.Nat.lo_ro_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Offset.html#Lean.Grind.Nat.lo_ro_1\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Nat</span>.<span class=\"name\">lo_ro_1</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">u </span><span class=\"fn\">w </span><span class=\"fn\">v </span><span class=\"fn\">k₁ </span><span class=\"fn\">k₂</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Grind/Offset.html#Lean.Grind.isLt\">isLt</a> <span class=\"fn\">k₂</span> <span class=\"fn\">k₁</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a> → <span class=\"fn\"><span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">k₁</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">w</span> → <span class=\"fn\"><span class=\"fn\">w</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">v</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">k₂</span> → <span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> (<span class=\"fn\">k₁</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">k₂</span>) <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">v</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/Grind/Offset.lean#L25-L26","name":"Lean.Grind.Nat.lo_lo","line":25,"kind":"theorem","docLink":"./Init/Grind/Offset.html#Lean.Grind.Nat.lo_lo","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Offset.html#Lean.Grind.Nat.lo_lo\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Nat</span>.<span class=\"name\">lo_lo</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">u </span><span class=\"fn\">w </span><span class=\"fn\">v </span><span class=\"fn\">k₁ </span><span class=\"fn\">k₂</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">k₁</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">w</span> → <span class=\"fn\"><span class=\"fn\">w</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">k₂</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">v</span> → <span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> (<span class=\"fn\">k₁</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">k₂</span>) <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">v</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/Grind/Offset.lean#L23-L24","name":"Lean.Grind.Nat.lo_le","line":23,"kind":"theorem","docLink":"./Init/Grind/Offset.html#Lean.Grind.Nat.lo_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Offset.html#Lean.Grind.Nat.lo_le\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Nat</span>.<span class=\"name\">lo_le</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">u </span><span class=\"fn\">w </span><span class=\"fn\">v </span><span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">w</span> → <span class=\"fn\"><span class=\"fn\">w</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">v</span> → <span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">v</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/Grind/Offset.lean#L21-L22","name":"Lean.Grind.Nat.le_lo","line":21,"kind":"theorem","docLink":"./Init/Grind/Offset.html#Lean.Grind.Nat.le_lo","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Offset.html#Lean.Grind.Nat.le_lo\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Nat</span>.<span class=\"name\">le_lo</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">u </span><span class=\"fn\">w </span><span class=\"fn\">v </span><span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">w</span> → <span class=\"fn\"><span class=\"fn\">w</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">v</span> → <span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">v</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/Grind/Offset.lean#L19-L20","name":"Lean.Grind.Nat.le_ro","line":19,"kind":"theorem","docLink":"./Init/Grind/Offset.html#Lean.Grind.Nat.le_ro","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Offset.html#Lean.Grind.Nat.le_ro\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Nat</span>.<span class=\"name\">le_ro</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">u </span><span class=\"fn\">w </span><span class=\"fn\">v </span><span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">w</span> → <span class=\"fn\"><span class=\"fn\">w</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">v</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">k</span> → <span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">v</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">k</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/Grind/Offset.lean#L16-L16","name":"Lean.Grind.isLE","line":16,"kind":"def","docLink":"./Init/Grind/Offset.html#Lean.Grind.isLE","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Offset.html#Lean.Grind.isLE\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">isLE</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/Grind/Offset.lean#L15-L15","name":"Lean.Grind.isLt","line":15,"kind":"def","docLink":"./Init/Grind/Offset.html#Lean.Grind.isLt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Offset.html#Lean.Grind.isLt\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">isLt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"}]}