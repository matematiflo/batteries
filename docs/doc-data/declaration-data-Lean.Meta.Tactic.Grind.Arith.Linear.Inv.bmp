{"name":"Lean.Meta.Tactic.Grind.Arith.Linear.Inv","instances":[],"imports":["Lean.Meta.Tactic.Grind.Arith.Linear.Util"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Meta/Tactic/Grind/Arith/Linear/Inv.lean#L99-L104","name":"Lean.Meta.Grind.Arith.Linear.checkInvariants","line":99,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Linear/Inv.html#Lean.Meta.Grind.Arith.Linear.checkInvariants","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Linear/Inv.html#Lean.Meta.Grind.Arith.Linear.checkInvariants\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Linear</span>.<span class=\"name\">checkInvariants</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.GoalM\">GoalM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Meta/Tactic/Grind/Arith/Linear/Inv.lean#L93-L97","name":"Lean.Meta.Grind.Arith.Linear.checkStructInvs","line":93,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Linear/Inv.html#Lean.Meta.Grind.Arith.Linear.checkStructInvs","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Linear/Inv.html#Lean.Meta.Grind.Arith.Linear.checkStructInvs\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Linear</span>.<span class=\"name\">checkStructInvs</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Arith/Linear/Util.html#Lean.Meta.Grind.Arith.Linear.LinearM\">LinearM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Meta/Tactic/Grind/Arith/Linear/Inv.lean#L81-L91","name":"Lean.Meta.Grind.Arith.Linear.checkVars","line":81,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Linear/Inv.html#Lean.Meta.Grind.Arith.Linear.checkVars","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Linear/Inv.html#Lean.Meta.Grind.Arith.Linear.checkVars\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Linear</span>.<span class=\"name\">checkVars</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Arith/Linear/Util.html#Lean.Meta.Grind.Arith.Linear.LinearM\">LinearM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Meta/Tactic/Grind/Arith/Linear/Inv.lean#L71-L79","name":"Lean.Meta.Grind.Arith.Linear.checkDiseqCnstrs","line":71,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Linear/Inv.html#Lean.Meta.Grind.Arith.Linear.checkDiseqCnstrs","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Linear/Inv.html#Lean.Meta.Grind.Arith.Linear.checkDiseqCnstrs\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Linear</span>.<span class=\"name\">checkDiseqCnstrs</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Arith/Linear/Util.html#Lean.Meta.Grind.Arith.Linear.LinearM\">LinearM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Meta/Tactic/Grind/Arith/Linear/Inv.lean#L66-L69","name":"Lean.Meta.Grind.Arith.Linear.checkUppers","line":66,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Linear/Inv.html#Lean.Meta.Grind.Arith.Linear.checkUppers","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Linear/Inv.html#Lean.Meta.Grind.Arith.Linear.checkUppers\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Linear</span>.<span class=\"name\">checkUppers</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Arith/Linear/Util.html#Lean.Meta.Grind.Arith.Linear.LinearM\">LinearM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Meta/Tactic/Grind/Arith/Linear/Inv.lean#L61-L64","name":"Lean.Meta.Grind.Arith.Linear.checkLowers","line":61,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Linear/Inv.html#Lean.Meta.Grind.Arith.Linear.checkLowers","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Linear/Inv.html#Lean.Meta.Grind.Arith.Linear.checkLowers\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Linear</span>.<span class=\"name\">checkLowers</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Arith/Linear/Util.html#Lean.Meta.Grind.Arith.Linear.LinearM\">LinearM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Meta/Tactic/Grind/Arith/Linear/Inv.lean#L51-L59","name":"Lean.Meta.Grind.Arith.Linear.checkLeCnstrs","line":51,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Linear/Inv.html#Lean.Meta.Grind.Arith.Linear.checkLeCnstrs","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Linear/Inv.html#Lean.Meta.Grind.Arith.Linear.checkLeCnstrs\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Linear</span>.<span class=\"name\">checkLeCnstrs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">css</span> : <span class=\"fn\"><a href=\"./Lean/Data/PersistentArray.html#Lean.PArray\">PArray</a> <span class=\"fn\">(<a href=\"./Lean/Data/PersistentArray.html#Lean.PArray\">PArray</a> <a href=\"./Lean/Meta/Tactic/Grind/Arith/Linear/Types.html#Lean.Meta.Grind.Arith.Linear.IneqCnstr\">IneqCnstr</a>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">isLower</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Arith/Linear/Util.html#Lean.Meta.Grind.Arith.Linear.LinearM\">LinearM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Meta/Tactic/Grind/Arith/Linear/Inv.lean#L41-L49","name":"Lean.Grind.Linarith.Poly.checkCnstrOf","line":41,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Linear/Inv.html#Lean.Grind.Linarith.Poly.checkCnstrOf","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Linear/Inv.html#Lean.Grind.Linarith.Poly.checkCnstrOf\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Linarith</span>.<span class=\"name\">Poly</span>.<span class=\"name\">checkCnstrOf</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Init/Grind/Ordered/Linarith.html#Lean.Grind.Linarith.Poly\">Poly</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Init/Grind/Ordered/Linarith.html#Lean.Grind.Linarith.Var\">Var</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Arith/Linear/Util.html#Lean.Meta.Grind.Arith.Linear.LinearM\">Meta.Grind.Arith.Linear.LinearM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Meta/Tactic/Grind/Arith/Linear/Inv.lean#L36-L39","name":"Lean.Grind.Linarith.Poly.checkNoElimVars","line":36,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Linear/Inv.html#Lean.Grind.Linarith.Poly.checkNoElimVars","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Linear/Inv.html#Lean.Grind.Linarith.Poly.checkNoElimVars\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Linarith</span>.<span class=\"name\">Poly</span>.<span class=\"name\">checkNoElimVars</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Init/Grind/Ordered/Linarith.html#Lean.Grind.Linarith.Poly\">Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Arith/Linear/Util.html#Lean.Meta.Grind.Arith.Linear.LinearM\">Meta.Grind.Arith.Linear.LinearM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Meta/Tactic/Grind/Arith/Linear/Inv.lean#L30-L33","name":"Lean.Grind.Linarith.Poly.checkOccs.go","line":30,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Linear/Inv.html#Lean.Grind.Linarith.Poly.checkOccs.go","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Linear/Inv.html#Lean.Grind.Linarith.Poly.checkOccs.go\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Linarith</span>.<span class=\"name\">Poly</span>.<span class=\"name\">checkOccs</span>.<span class=\"name\">go</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">y</span> : <a href=\"./Init/Grind/Ordered/Linarith.html#Lean.Grind.Linarith.Var\">Var</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Init/Grind/Ordered/Linarith.html#Lean.Grind.Linarith.Poly\">Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Arith/Linear/Util.html#Lean.Meta.Grind.Arith.Linear.LinearM\">Meta.Grind.Arith.Linear.LinearM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Meta/Tactic/Grind/Arith/Linear/Inv.lean#L28-L34","name":"Lean.Grind.Linarith.Poly.checkOccs","line":28,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Linear/Inv.html#Lean.Grind.Linarith.Poly.checkOccs","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Linear/Inv.html#Lean.Grind.Linarith.Poly.checkOccs\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Linarith</span>.<span class=\"name\">Poly</span>.<span class=\"name\">checkOccs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Init/Grind/Ordered/Linarith.html#Lean.Grind.Linarith.Poly\">Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Arith/Linear/Util.html#Lean.Meta.Grind.Arith.Linear.LinearM\">Meta.Grind.Arith.Linear.LinearM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Meta/Tactic/Grind/Arith/Linear/Inv.lean#L23-L26","name":"Lean.Grind.Linarith.Poly.checkCoeffs","line":23,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Linear/Inv.html#Lean.Grind.Linarith.Poly.checkCoeffs","doc":"Returns `true` if all coefficients are not `0`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Linear/Inv.html#Lean.Grind.Linarith.Poly.checkCoeffs\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Linarith</span>.<span class=\"name\">Poly</span>.<span class=\"name\">checkCoeffs</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Grind/Ordered/Linarith.html#Lean.Grind.Linarith.Poly\">Poly</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Meta/Tactic/Grind/Arith/Linear/Inv.lean#L18-L21","name":"Lean.Grind.Linarith.Poly.isSorted.go","line":18,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Linear/Inv.html#Lean.Grind.Linarith.Poly.isSorted.go","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Linear/Inv.html#Lean.Grind.Linarith.Poly.isSorted.go\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Linarith</span>.<span class=\"name\">Poly</span>.<span class=\"name\">isSorted</span>.<span class=\"name\">go</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Grind/Ordered/Linarith.html#Lean.Grind.Linarith.Var\">Var</a></span> → <span class=\"fn\"><a href=\"./Init/Grind/Ordered/Linarith.html#Lean.Grind.Linarith.Poly\">Poly</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Meta/Tactic/Grind/Arith/Linear/Inv.lean#L11-L21","name":"Lean.Grind.Linarith.Poly.isSorted","line":11,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Linear/Inv.html#Lean.Grind.Linarith.Poly.isSorted","doc":"Returns `true` if the variables in the given polynomial are sorted\nin decreasing order.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Linear/Inv.html#Lean.Grind.Linarith.Poly.isSorted\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Linarith</span>.<span class=\"name\">Poly</span>.<span class=\"name\">isSorted</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Init/Grind/Ordered/Linarith.html#Lean.Grind.Linarith.Poly\">Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"}]}