{"name":"Lake.Build.Trace","instances":[{"typeNames":["System.FilePath"],"name":"Lake.instCheckExistsFilePath","className":"Lake.CheckExists"},{"typeNames":[],"name":"Lake.inhabitedOfNilTrace","className":"Inhabited"},{"typeNames":["List"],"name":"Lake.instComputeTraceListOfMonad","className":"Lake.ComputeTrace"},{"typeNames":["Array"],"name":"Lake.instComputeTraceArrayOfMonad","className":"Lake.ComputeTrace"},{"typeNames":["Lake.Hash"],"name":"Lake.instBEqHash","className":"BEq"},{"typeNames":["Eq"],"name":"Lake.instDecidableEqHash","className":"Decidable"},{"typeNames":["Lake.Hash"],"name":"Lake.instReprHash","className":"Repr"},{"typeNames":["Lake.Hash"],"name":"Lake.instHashableHash","className":"Hashable"},{"typeNames":["Lake.Hash"],"name":"Lake.Hash.instNilTrace","className":"Lake.NilTrace"},{"typeNames":["Lake.Hash"],"name":"Lake.Hash.instMixTrace","className":"Lake.MixTrace"},{"typeNames":["Lake.Hash"],"name":"Lake.Hash.instToString","className":"ToString"},{"typeNames":["Lake.Hash"],"name":"Lake.Hash.instToJson","className":"Lean.ToJson"},{"typeNames":["Lake.Hash"],"name":"Lake.Hash.instFromJson","className":"Lean.FromJson"},{"typeNames":["Lake.Hash"],"name":"Lake.instComputeTraceHashOfComputeHash","className":"Lake.ComputeTrace"},{"typeNames":["Bool","Id"],"name":"Lake.instComputeHashBoolId","className":"Lake.ComputeHash"},{"typeNames":["String","Id"],"name":"Lake.instComputeHashStringId","className":"Lake.ComputeHash"},{"typeNames":["System.FilePath","IO"],"name":"Lake.instComputeHashFilePathIO","className":"Lake.ComputeHash"},{"typeNames":["Lake.TextFilePath","System.FilePath"],"name":"Lake.instCoeTextFilePathFilePath","className":"Coe"},{"typeNames":["Lake.TextFilePath","IO"],"name":"Lake.instComputeHashTextFilePathIO","className":"Lake.ComputeHash"},{"typeNames":["Lake.TextFilePath"],"name":"Lake.instToStringTextFilePath","className":"ToString"},{"typeNames":["Array"],"name":"Lake.instComputeHashArrayOfMonad","className":"Lake.ComputeHash"},{"typeNames":["Lake.MTime"],"name":"Lake.MTime.instOfNat","className":"OfNat"},{"typeNames":["Lake.MTime"],"name":"Lake.MTime.instBEq","className":"BEq"},{"typeNames":["Lake.MTime"],"name":"Lake.MTime.instRepr","className":"Repr"},{"typeNames":["Lake.MTime"],"name":"Lake.MTime.instOrd","className":"Ord"},{"typeNames":["Lake.MTime"],"name":"Lake.MTime.instLT","className":"LT"},{"typeNames":["Lake.MTime"],"name":"Lake.MTime.instLE","className":"LE"},{"typeNames":["Lake.MTime"],"name":"Lake.MTime.instMin","className":"Min"},{"typeNames":["Lake.MTime"],"name":"Lake.MTime.instMax","className":"Max"},{"typeNames":["Lake.MTime"],"name":"Lake.MTime.instNilTrace","className":"Lake.NilTrace"},{"typeNames":["Lake.MTime"],"name":"Lake.MTime.instMixTrace","className":"Lake.MixTrace"},{"typeNames":["IO","Lake.MTime"],"name":"Lake.instComputeTraceIOMTimeOfGetMTime","className":"Lake.ComputeTrace"},{"typeNames":["System.FilePath"],"name":"Lake.instGetMTimeFilePath","className":"Lake.GetMTime"},{"typeNames":["Lake.TextFilePath"],"name":"Lake.instGetMTimeTextFilePath","className":"Lake.GetMTime"},{"typeNames":["Lake.BuildTrace"],"name":"Lake.instReprBuildTrace","className":"Repr"},{"typeNames":["Lake.Hash","Lake.BuildTrace"],"name":"Lake.BuildTrace.instCoeHash","className":"Coe"},{"typeNames":["Lake.MTime","Lake.BuildTrace"],"name":"Lake.BuildTrace.instCoeMTime","className":"Coe"},{"typeNames":["Lake.BuildTrace"],"name":"Lake.BuildTrace.instNilTrace","className":"Lake.NilTrace"},{"typeNames":["IO","Lake.BuildTrace"],"name":"Lake.BuildTrace.instComputeTraceIOOfToStringOfComputeHashOfMonadLiftTOfGetMTime","className":"Lake.ComputeTrace"},{"typeNames":["Lake.BuildTrace"],"name":"Lake.BuildTrace.instMixTrace","className":"Lake.MixTrace"}],"imports":["Lake.Util.IO","Lean.Data.Json"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Trace.lean#L325-L332","name":"Lake.BuildTrace.checkAgainstTime","line":325,"kind":"def","docLink":"./Lake/Build/Trace.html#Lake.BuildTrace.checkAgainstTime","doc":"Check if the info is up-to-date using modification time.\nThat is, check if the info is newer than this input trace's modification time.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.BuildTrace.checkAgainstTime\"><span class=\"name\">Lake</span>.<span class=\"name\">BuildTrace</span>.<span class=\"name\">checkAgainstTime</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.GetMTime\">GetMTime</a> <span class=\"fn\">i</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">info</span> : <span class=\"fn\">i</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lake/Build/Trace.html#Lake.BuildTrace\">BuildTrace</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Trace.lean#L317-L323","name":"Lake.BuildTrace.checkAgainstHash","line":317,"kind":"def","docLink":"./Lake/Build/Trace.html#Lake.BuildTrace.checkAgainstHash","doc":"Check if the info is up-to-date using a hash.\nThat is, check that info exists and its input hash matches this trace's hash.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.BuildTrace.checkAgainstHash\"><span class=\"name\">Lake</span>.<span class=\"name\">BuildTrace</span>.<span class=\"name\">checkAgainstHash</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.CheckExists\">CheckExists</a> <span class=\"fn\">i</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">info</span> : <span class=\"fn\">i</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hash</span> : <a href=\"./Lake/Build/Trace.html#Lake.Hash\">Hash</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lake/Build/Trace.html#Lake.BuildTrace\">BuildTrace</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Trace.lean#L315-L315","name":"Lake.BuildTrace.instMixTrace","line":315,"kind":"instance","docLink":"./Lake/Build/Trace.html#Lake.BuildTrace.instMixTrace","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.BuildTrace.instMixTrace\"><span class=\"name\">Lake</span>.<span class=\"name\">BuildTrace</span>.<span class=\"name\">instMixTrace</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.MixTrace\">MixTrace</a> <a href=\"./Lake/Build/Trace.html#Lake.BuildTrace\">BuildTrace</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Trace.lean#L309-L313","name":"Lake.BuildTrace.mix","line":309,"kind":"def","docLink":"./Lake/Build/Trace.html#Lake.BuildTrace.mix","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.BuildTrace.mix\"><span class=\"name\">Lake</span>.<span class=\"name\">BuildTrace</span>.<span class=\"name\">mix</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">t1 </span><span class=\"fn\">t2</span> : <a href=\"./Lake/Build/Trace.html#Lake.BuildTrace\">BuildTrace</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lake/Build/Trace.html#Lake.BuildTrace\">BuildTrace</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Trace.lean#L305-L307","name":"Lake.BuildTrace.instComputeTraceIOOfToStringOfComputeHashOfMonadLiftTOfGetMTime","line":305,"kind":"instance","docLink":"./Lake/Build/Trace.html#Lake.BuildTrace.instComputeTraceIOOfToStringOfComputeHashOfMonadLiftTOfGetMTime","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.BuildTrace.instComputeTraceIOOfToStringOfComputeHashOfMonadLiftTOfGetMTime\"><span class=\"name\">Lake</span>.<span class=\"name\">BuildTrace</span>.<span class=\"name\">instComputeTraceIOOfToStringOfComputeHashOfMonadLiftTOfGetMTime</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Î±</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> â <a href=\"./foundational_types.html\">Type</a> u_2</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString\">ToString</a> <span class=\"fn\">Î±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.ComputeHash\">ComputeHash</a> <span class=\"fn\">Î±</span> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#MonadLiftT\">MonadLiftT</a> <span class=\"fn\">m</span> <a href=\"./Init/System/IO.html#IO\">IO</a></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.GetMTime\">GetMTime</a> <span class=\"fn\">Î±</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.ComputeTrace\">ComputeTrace</a> <span class=\"fn\">Î±</span> <a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Lake/Build/Trace.html#Lake.BuildTrace\">BuildTrace</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Trace.lean#L296-L303","name":"Lake.BuildTrace.compute","line":296,"kind":"def","docLink":"./Lake/Build/Trace.html#Lake.BuildTrace.compute","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.BuildTrace.compute\"><span class=\"name\">Lake</span>.<span class=\"name\">BuildTrace</span>.<span class=\"name\">compute</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Î±</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> â <a href=\"./foundational_types.html\">Type</a> u_2</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString\">ToString</a> <span class=\"fn\">Î±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.ComputeHash\">ComputeHash</a> <span class=\"fn\">Î±</span> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#MonadLiftT\">MonadLiftT</a> <span class=\"fn\">m</span> <a href=\"./Init/System/IO.html#IO\">IO</a></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.GetMTime\">GetMTime</a> <span class=\"fn\">Î±</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">info</span> : <span class=\"fn\">Î±</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Lake/Build/Trace.html#Lake.BuildTrace\">BuildTrace</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Trace.lean#L294-L294","name":"Lake.BuildTrace.instNilTrace","line":294,"kind":"instance","docLink":"./Lake/Build/Trace.html#Lake.BuildTrace.instNilTrace","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.BuildTrace.instNilTrace\"><span class=\"name\">Lake</span>.<span class=\"name\">BuildTrace</span>.<span class=\"name\">instNilTrace</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.NilTrace\">NilTrace</a> <a href=\"./Lake/Build/Trace.html#Lake.BuildTrace\">BuildTrace</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Trace.lean#L291-L292","name":"Lake.BuildTrace.nil","line":291,"kind":"def","docLink":"./Lake/Build/Trace.html#Lake.BuildTrace.nil","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.BuildTrace.nil\"><span class=\"name\">Lake</span>.<span class=\"name\">BuildTrace</span>.<span class=\"name\">nil</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">caption</span> : <a href=\"./Init/Prelude.html#String\">String</a> := <span class=\"fn\">&quot;&lt;nil&gt;&quot;</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lake/Build/Trace.html#Lake.BuildTrace\">BuildTrace</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Trace.lean#L289-L289","name":"Lake.BuildTrace.instCoeMTime","line":289,"kind":"instance","docLink":"./Lake/Build/Trace.html#Lake.BuildTrace.instCoeMTime","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.BuildTrace.instCoeMTime\"><span class=\"name\">Lake</span>.<span class=\"name\">BuildTrace</span>.<span class=\"name\">instCoeMTime</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#Coe\">Coe</a> <a href=\"./Lake/Build/Trace.html#Lake.MTime\">MTime</a> <a href=\"./Lake/Build/Trace.html#Lake.BuildTrace\">BuildTrace</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Trace.lean#L286-L287","name":"Lake.BuildTrace.ofMTime","line":286,"kind":"def","docLink":"./Lake/Build/Trace.html#Lake.BuildTrace.ofMTime","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.BuildTrace.ofMTime\"><span class=\"name\">Lake</span>.<span class=\"name\">BuildTrace</span>.<span class=\"name\">ofMTime</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mtime</span> : <a href=\"./Lake/Build/Trace.html#Lake.MTime\">MTime</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">caption</span> : <a href=\"./Init/Prelude.html#String\">String</a> := <span class=\"fn\">&quot;&lt;mtime&gt;&quot;</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lake/Build/Trace.html#Lake.BuildTrace\">BuildTrace</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Trace.lean#L284-L284","name":"Lake.BuildTrace.instCoeHash","line":284,"kind":"instance","docLink":"./Lake/Build/Trace.html#Lake.BuildTrace.instCoeHash","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.BuildTrace.instCoeHash\"><span class=\"name\">Lake</span>.<span class=\"name\">BuildTrace</span>.<span class=\"name\">instCoeHash</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#Coe\">Coe</a> <a href=\"./Lake/Build/Trace.html#Lake.Hash\">Hash</a> <a href=\"./Lake/Build/Trace.html#Lake.BuildTrace\">BuildTrace</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Trace.lean#L281-L282","name":"Lake.BuildTrace.ofHash","line":281,"kind":"def","docLink":"./Lake/Build/Trace.html#Lake.BuildTrace.ofHash","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.BuildTrace.ofHash\"><span class=\"name\">Lake</span>.<span class=\"name\">BuildTrace</span>.<span class=\"name\">ofHash</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hash</span> : <a href=\"./Lake/Build/Trace.html#Lake.Hash\">Hash</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">caption</span> : <a href=\"./Init/Prelude.html#String\">String</a> := <span class=\"fn\">&quot;&lt;hash&gt;&quot;</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lake/Build/Trace.html#Lake.BuildTrace\">BuildTrace</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Trace.lean#L274-L279","name":"Lake.BuildTrace.withoutInputs","line":274,"kind":"def","docLink":"./Lake/Build/Trace.html#Lake.BuildTrace.withoutInputs","doc":"Clear the inputs of the build trace.\nThis is used to remove unnecessary repetition of trace trees across multiple trace files.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.BuildTrace.withoutInputs\"><span class=\"name\">Lake</span>.<span class=\"name\">BuildTrace</span>.<span class=\"name\">withoutInputs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lake/Build/Trace.html#Lake.BuildTrace\">BuildTrace</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lake/Build/Trace.html#Lake.BuildTrace\">BuildTrace</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Trace.lean#L270-L272","name":"Lake.BuildTrace.withCaption","line":270,"kind":"def","docLink":"./Lake/Build/Trace.html#Lake.BuildTrace.withCaption","doc":"Sets the caption of the trace. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.BuildTrace.withCaption\"><span class=\"name\">Lake</span>.<span class=\"name\">BuildTrace</span>.<span class=\"name\">withCaption</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">caption</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lake/Build/Trace.html#Lake.BuildTrace\">BuildTrace</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lake/Build/Trace.html#Lake.BuildTrace\">BuildTrace</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Trace.lean#L266-L266","name":"Lake.instReprBuildTrace","line":266,"kind":"instance","docLink":"./Lake/Build/Trace.html#Lake.instReprBuildTrace","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.instReprBuildTrace\"><span class=\"name\">Lake</span>.<span class=\"name\">instReprBuildTrace</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Lake/Build/Trace.html#Lake.BuildTrace\">BuildTrace</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Trace.lean#L265-L265","name":"Lake.BuildTrace.mtime","line":265,"kind":"def","docLink":"./Lake/Build/Trace.html#Lake.BuildTrace.mtime","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.BuildTrace.mtime\"><span class=\"name\">Lake</span>.<span class=\"name\">BuildTrace</span>.<span class=\"name\">mtime</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lake/Build/Trace.html#Lake.BuildTrace\">BuildTrace</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lake/Build/Trace.html#Lake.MTime\">MTime</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Trace.lean#L264-L264","name":"Lake.BuildTrace.hash","line":264,"kind":"def","docLink":"./Lake/Build/Trace.html#Lake.BuildTrace.hash","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.BuildTrace.hash\"><span class=\"name\">Lake</span>.<span class=\"name\">BuildTrace</span>.<span class=\"name\">hash</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lake/Build/Trace.html#Lake.BuildTrace\">BuildTrace</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lake/Build/Trace.html#Lake.Hash\">Hash</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Trace.lean#L263-L263","name":"Lake.BuildTrace.inputs","line":263,"kind":"def","docLink":"./Lake/Build/Trace.html#Lake.BuildTrace.inputs","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.BuildTrace.inputs\"><span class=\"name\">Lake</span>.<span class=\"name\">BuildTrace</span>.<span class=\"name\">inputs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lake/Build/Trace.html#Lake.BuildTrace\">BuildTrace</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lake/Build/Trace.html#Lake.BuildTrace\">BuildTrace</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Trace.lean#L262-L262","name":"Lake.BuildTrace.caption","line":262,"kind":"def","docLink":"./Lake/Build/Trace.html#Lake.BuildTrace.caption","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.BuildTrace.caption\"><span class=\"name\">Lake</span>.<span class=\"name\">BuildTrace</span>.<span class=\"name\">caption</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lake/Build/Trace.html#Lake.BuildTrace\">BuildTrace</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String\">String</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Trace.lean#L261-L261","name":"Lake.BuildTrace.mk","line":261,"kind":"ctor","docLink":"./Lake/Build/Trace.html#Lake.BuildTrace.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.BuildTrace.mk\"><span class=\"name\">Lake</span>.<span class=\"name\">BuildTrace</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">caption</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">inputs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lake/Build/Trace.html#Lake.BuildTrace\">BuildTrace</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hash</span> : <a href=\"./Lake/Build/Trace.html#Lake.Hash\">Hash</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mtime</span> : <a href=\"./Lake/Build/Trace.html#Lake.MTime\">MTime</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lake/Build/Trace.html#Lake.BuildTrace\">BuildTrace</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Trace.lean#L260-L266","name":"Lake.BuildTrace","line":260,"kind":"structure","docLink":"./Lake/Build/Trace.html#Lake.BuildTrace","doc":"Trace used for common Lake targets. Combines `Hash` and `MTime`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.BuildTrace\"><span class=\"name\">Lake</span>.<span class=\"name\">BuildTrace</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Trace.lean#L245-L254","name":"Lake.MTime.checkUpToDate","line":245,"kind":"def","docLink":"./Lake/Build/Trace.html#Lake.MTime.checkUpToDate","doc":"Check if `info` is up-to-date using modification time.\nThat is, check if the info is newer than `self`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.MTime.checkUpToDate\"><span class=\"name\">Lake</span>.<span class=\"name\">MTime</span>.<span class=\"name\">checkUpToDate</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.GetMTime\">GetMTime</a> <span class=\"fn\">i</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">info</span> : <span class=\"fn\">i</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lake/Build/Trace.html#Lake.MTime\">MTime</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Trace.lean#L243-L243","name":"Lake.instGetMTimeTextFilePath","line":243,"kind":"instance","docLink":"./Lake/Build/Trace.html#Lake.instGetMTimeTextFilePath","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.instGetMTimeTextFilePath\"><span class=\"name\">Lake</span>.<span class=\"name\">instGetMTimeTextFilePath</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.GetMTime\">GetMTime</a> <a href=\"./Lake/Build/Trace.html#Lake.TextFilePath\">TextFilePath</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Trace.lean#L242-L242","name":"Lake.instGetMTimeFilePath","line":242,"kind":"instance","docLink":"./Lake/Build/Trace.html#Lake.instGetMTimeFilePath","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.instGetMTimeFilePath\"><span class=\"name\">Lake</span>.<span class=\"name\">instGetMTimeFilePath</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.GetMTime\">GetMTime</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Trace.lean#L238-L240","name":"Lake.getFileMTime","line":238,"kind":"def","docLink":"./Lake/Build/Trace.html#Lake.getFileMTime","doc":"Return the modification time of a file recorded by the OS. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.getFileMTime\"><span class=\"name\">Lake</span>.<span class=\"name\">getFileMTime</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">file</span> : <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Lake/Build/Trace.html#Lake.MTime\">MTime</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Trace.lean#L236-L236","name":"Lake.instComputeTraceIOMTimeOfGetMTime","line":236,"kind":"instance","docLink":"./Lake/Build/Trace.html#Lake.instComputeTraceIOMTimeOfGetMTime","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.instComputeTraceIOMTimeOfGetMTime\"><span class=\"name\">Lake</span>.<span class=\"name\">instComputeTraceIOMTimeOfGetMTime</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Î±</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.GetMTime\">GetMTime</a> <span class=\"fn\">Î±</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.ComputeTrace\">ComputeTrace</a> <span class=\"fn\">Î±</span> <a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Lake/Build/Trace.html#Lake.MTime\">MTime</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Trace.lean#L233-L233","name":"Lake.GetMTime.getMTime","line":233,"kind":"def","docLink":"./Lake/Build/Trace.html#Lake.GetMTime.getMTime","doc":"Return the modification time of an object. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.GetMTime.getMTime\"><span class=\"name\">Lake</span>.<span class=\"name\">GetMTime</span>.<span class=\"name\">getMTime</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Î±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.GetMTime\">GetMTime</a> <span class=\"fn\">Î±</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">Î±</span> â <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Lake/Build/Trace.html#Lake.MTime\">MTime</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Trace.lean#L231-L231","name":"Lake.GetMTime.mk","line":231,"kind":"ctor","docLink":"./Lake/Build/Trace.html#Lake.GetMTime.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.GetMTime.mk\"><span class=\"name\">Lake</span>.<span class=\"name\">GetMTime</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Î±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">getMTime</span> : <span class=\"fn\"><span class=\"fn\">Î±</span> â <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Lake/Build/Trace.html#Lake.MTime\">MTime</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.GetMTime\">GetMTime</a> <span class=\"fn\">Î±</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Trace.lean#L231-L233","name":"Lake.GetMTime","line":231,"kind":"class","docLink":"./Lake/Build/Trace.html#Lake.GetMTime","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.GetMTime\"><span class=\"name\">Lake</span>.<span class=\"name\">GetMTime</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Î±</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Trace.lean#L227-L227","name":"Lake.MTime.instMixTrace","line":227,"kind":"instance","docLink":"./Lake/Build/Trace.html#Lake.MTime.instMixTrace","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.MTime.instMixTrace\"><span class=\"name\">Lake</span>.<span class=\"name\">MTime</span>.<span class=\"name\">instMixTrace</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.MixTrace\">MixTrace</a> <a href=\"./Lake/Build/Trace.html#Lake.MTime\">MTime</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Trace.lean#L226-L226","name":"Lake.MTime.instNilTrace","line":226,"kind":"instance","docLink":"./Lake/Build/Trace.html#Lake.MTime.instNilTrace","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.MTime.instNilTrace\"><span class=\"name\">Lake</span>.<span class=\"name\">MTime</span>.<span class=\"name\">instNilTrace</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.NilTrace\">NilTrace</a> <a href=\"./Lake/Build/Trace.html#Lake.MTime\">MTime</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Trace.lean#L224-L224","name":"Lake.MTime.instMax","line":224,"kind":"instance","docLink":"./Lake/Build/Trace.html#Lake.MTime.instMax","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.MTime.instMax\"><span class=\"name\">Lake</span>.<span class=\"name\">MTime</span>.<span class=\"name\">instMax</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Max\">Max</a> <a href=\"./Lake/Build/Trace.html#Lake.MTime\">MTime</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Trace.lean#L223-L223","name":"Lake.MTime.instMin","line":223,"kind":"instance","docLink":"./Lake/Build/Trace.html#Lake.MTime.instMin","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.MTime.instMin\"><span class=\"name\">Lake</span>.<span class=\"name\">MTime</span>.<span class=\"name\">instMin</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Min\">Min</a> <a href=\"./Lake/Build/Trace.html#Lake.MTime\">MTime</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Trace.lean#L222-L222","name":"Lake.MTime.instLE","line":222,"kind":"instance","docLink":"./Lake/Build/Trace.html#Lake.MTime.instLE","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.MTime.instLE\"><span class=\"name\">Lake</span>.<span class=\"name\">MTime</span>.<span class=\"name\">instLE</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#LE\">LE</a> <a href=\"./Lake/Build/Trace.html#Lake.MTime\">MTime</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Trace.lean#L221-L221","name":"Lake.MTime.instLT","line":221,"kind":"instance","docLink":"./Lake/Build/Trace.html#Lake.MTime.instLT","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.MTime.instLT\"><span class=\"name\">Lake</span>.<span class=\"name\">MTime</span>.<span class=\"name\">instLT</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#LT\">LT</a> <a href=\"./Lake/Build/Trace.html#Lake.MTime\">MTime</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Trace.lean#L220-L220","name":"Lake.MTime.instOrd","line":220,"kind":"instance","docLink":"./Lake/Build/Trace.html#Lake.MTime.instOrd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.MTime.instOrd\"><span class=\"name\">Lake</span>.<span class=\"name\">MTime</span>.<span class=\"name\">instOrd</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Ord.html#Ord\">Ord</a> <a href=\"./Lake/Build/Trace.html#Lake.MTime\">MTime</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Trace.lean#L218-L218","name":"Lake.MTime.instRepr","line":218,"kind":"instance","docLink":"./Lake/Build/Trace.html#Lake.MTime.instRepr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.MTime.instRepr\"><span class=\"name\">Lake</span>.<span class=\"name\">MTime</span>.<span class=\"name\">instRepr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Lake/Build/Trace.html#Lake.MTime\">MTime</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Trace.lean#L217-L217","name":"Lake.MTime.instBEq","line":217,"kind":"instance","docLink":"./Lake/Build/Trace.html#Lake.MTime.instBEq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.MTime.instBEq\"><span class=\"name\">Lake</span>.<span class=\"name\">MTime</span>.<span class=\"name\">instBEq</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <a href=\"./Lake/Build/Trace.html#Lake.MTime\">MTime</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Trace.lean#L215-L215","name":"Lake.MTime.instOfNat","line":215,"kind":"instance","docLink":"./Lake/Build/Trace.html#Lake.MTime.instOfNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.MTime.instOfNat\"><span class=\"name\">Lake</span>.<span class=\"name\">MTime</span>.<span class=\"name\">instOfNat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#OfNat\">OfNat</a> <a href=\"./Lake/Build/Trace.html#Lake.MTime\">MTime</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Trace.lean#L210-L211","name":"Lake.MTime","line":210,"kind":"def","docLink":"./Lake/Build/Trace.html#Lake.MTime","doc":"A modification time (e.g., of a file). "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.MTime\"><span class=\"name\">Lake</span>.<span class=\"name\">MTime</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Trace.lean#L202-L202","name":"Lake.instComputeHashArrayOfMonad","line":202,"kind":"instance","docLink":"./Lake/Build/Trace.html#Lake.instComputeHashArrayOfMonad","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.instComputeHashArrayOfMonad\"><span class=\"name\">Lake</span>.<span class=\"name\">instComputeHashArrayOfMonad</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Î±</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> â <a href=\"./foundational_types.html\">Type</a> u_2</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.ComputeHash\">ComputeHash</a> <span class=\"fn\">Î±</span> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.ComputeHash\">ComputeHash</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">Î±</span>)</span> <span class=\"fn\">m</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Trace.lean#L198-L200","name":"Lake.computeArrayHash","line":198,"kind":"def","docLink":"./Lake/Build/Trace.html#Lake.computeArrayHash","doc":"Compute the hash of each element of an array and combine them (left-to-right). "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.computeArrayHash\"><span class=\"name\">Lake</span>.<span class=\"name\">computeArrayHash</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Î±</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> â <a href=\"./foundational_types.html\">Type</a> u_2</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.ComputeHash\">ComputeHash</a> <span class=\"fn\">Î±</span> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">as</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">Î±</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Lake/Build/Trace.html#Lake.Hash\">Hash</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Trace.lean#L194-L196","name":"Lake.computeFileHash","line":194,"kind":"def","docLink":"./Lake/Build/Trace.html#Lake.computeFileHash","doc":"Compute the hash of a file. If `text := true`, normalize line endings. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.computeFileHash\"><span class=\"name\">Lake</span>.<span class=\"name\">computeFileHash</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">file</span> : <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">text</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Lake/Build/Trace.html#Lake.Hash\">Hash</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Trace.lean#L192-L192","name":"Lake.instToStringTextFilePath","line":192,"kind":"instance","docLink":"./Lake/Build/Trace.html#Lake.instToStringTextFilePath","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.instToStringTextFilePath\"><span class=\"name\">Lake</span>.<span class=\"name\">instToStringTextFilePath</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString\">ToString</a> <a href=\"./Lake/Build/Trace.html#Lake.TextFilePath\">TextFilePath</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Trace.lean#L191-L191","name":"Lake.instComputeHashTextFilePathIO","line":191,"kind":"instance","docLink":"./Lake/Build/Trace.html#Lake.instComputeHashTextFilePathIO","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.instComputeHashTextFilePathIO\"><span class=\"name\">Lake</span>.<span class=\"name\">instComputeHashTextFilePathIO</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.ComputeHash\">ComputeHash</a> <a href=\"./Lake/Build/Trace.html#Lake.TextFilePath\">TextFilePath</a> <a href=\"./Init/System/IO.html#IO\">IO</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Trace.lean#L190-L190","name":"Lake.instCoeTextFilePathFilePath","line":190,"kind":"instance","docLink":"./Lake/Build/Trace.html#Lake.instCoeTextFilePathFilePath","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.instCoeTextFilePathFilePath\"><span class=\"name\">Lake</span>.<span class=\"name\">instCoeTextFilePathFilePath</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#Coe\">Coe</a> <a href=\"./Lake/Build/Trace.html#Lake.TextFilePath\">TextFilePath</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Trace.lean#L188-L188","name":"Lake.TextFilePath.path","line":188,"kind":"def","docLink":"./Lake/Build/Trace.html#Lake.TextFilePath.path","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.TextFilePath.path\"><span class=\"name\">Lake</span>.<span class=\"name\">TextFilePath</span>.<span class=\"name\">path</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lake/Build/Trace.html#Lake.TextFilePath\">TextFilePath</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Trace.lean#L187-L187","name":"Lake.TextFilePath.mk","line":187,"kind":"ctor","docLink":"./Lake/Build/Trace.html#Lake.TextFilePath.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.TextFilePath.mk\"><span class=\"name\">Lake</span>.<span class=\"name\">TextFilePath</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">path</span> : <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lake/Build/Trace.html#Lake.TextFilePath\">TextFilePath</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Trace.lean#L183-L188","name":"Lake.TextFilePath","line":183,"kind":"structure","docLink":"./Lake/Build/Trace.html#Lake.TextFilePath","doc":"A wrapper around `FilePath` that adjusts its `ComputeHash` implementation\nto normalize `\\r\\n` sequences to `\\n` for cross-platform compatibility.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.TextFilePath\"><span class=\"name\">Lake</span>.<span class=\"name\">TextFilePath</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Trace.lean#L176-L181","name":"Lake.computeTextFileHash","line":176,"kind":"def","docLink":"./Lake/Build/Trace.html#Lake.computeTextFileHash","doc":"Compute the hash of a text file.\nNormalizes `\\r\\n` sequences to `\\n` for cross-platform compatibility.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.computeTextFileHash\"><span class=\"name\">Lake</span>.<span class=\"name\">computeTextFileHash</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">file</span> : <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Lake/Build/Trace.html#Lake.Hash\">Hash</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Trace.lean#L174-L174","name":"Lake.instComputeHashFilePathIO","line":174,"kind":"instance","docLink":"./Lake/Build/Trace.html#Lake.instComputeHashFilePathIO","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.instComputeHashFilePathIO\"><span class=\"name\">Lake</span>.<span class=\"name\">instComputeHashFilePathIO</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.ComputeHash\">ComputeHash</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a> <a href=\"./Init/System/IO.html#IO\">IO</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Trace.lean#L167-L172","name":"Lake.computeBinFileHash","line":167,"kind":"def","docLink":"./Lake/Build/Trace.html#Lake.computeBinFileHash","doc":"Compute the hash of a binary file.\nBinary files are equivalent only if they are byte identical.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.computeBinFileHash\"><span class=\"name\">Lake</span>.<span class=\"name\">computeBinFileHash</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">file</span> : <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Lake/Build/Trace.html#Lake.Hash\">Hash</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Trace.lean#L165-L165","name":"Lake.instComputeHashStringId","line":165,"kind":"instance","docLink":"./Lake/Build/Trace.html#Lake.instComputeHashStringId","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.instComputeHashStringId\"><span class=\"name\">Lake</span>.<span class=\"name\">instComputeHashStringId</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.ComputeHash\">ComputeHash</a> <a href=\"./Init/Prelude.html#String\">String</a> <a href=\"./Init/Control/Id.html#Id\">Id</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Trace.lean#L164-L164","name":"Lake.instComputeHashBoolId","line":164,"kind":"instance","docLink":"./Lake/Build/Trace.html#Lake.instComputeHashBoolId","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.instComputeHashBoolId\"><span class=\"name\">Lake</span>.<span class=\"name\">instComputeHashBoolId</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.ComputeHash\">ComputeHash</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a> <a href=\"./Init/Control/Id.html#Id\">Id</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Trace.lean#L160-L162","name":"Lake.computeHash","line":160,"kind":"def","docLink":"./Lake/Build/Trace.html#Lake.computeHash","doc":"Compute the hash an object in an supporting monad. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.computeHash\"><span class=\"name\">Lake</span>.<span class=\"name\">computeHash</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Î±</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> â <a href=\"./foundational_types.html\">Type</a> u_2</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> â <a href=\"./foundational_types.html\">Type</a> u_3</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.ComputeHash\">ComputeHash</a> <span class=\"fn\">Î±</span> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#MonadLiftT\">MonadLiftT</a> <span class=\"fn\">m</span> <span class=\"fn\">n</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">Î±</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Lake/Build/Trace.html#Lake.Hash\">Hash</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Trace.lean#L156-L158","name":"Lake.pureHash","line":156,"kind":"def","docLink":"./Lake/Build/Trace.html#Lake.pureHash","doc":"Compute the hash of object `a` in a pure context. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.pureHash\"><span class=\"name\">Lake</span>.<span class=\"name\">pureHash</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Î±</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.ComputeHash\">ComputeHash</a> <span class=\"fn\">Î±</span> <a href=\"./Init/Control/Id.html#Id\">Id</a></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">Î±</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lake/Build/Trace.html#Lake.Hash\">Hash</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Trace.lean#L154-L154","name":"Lake.instComputeTraceHashOfComputeHash","line":154,"kind":"instance","docLink":"./Lake/Build/Trace.html#Lake.instComputeTraceHashOfComputeHash","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.instComputeTraceHashOfComputeHash\"><span class=\"name\">Lake</span>.<span class=\"name\">instComputeTraceHashOfComputeHash</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Î±</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> â <a href=\"./foundational_types.html\">Type</a> u_2</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.ComputeHash\">ComputeHash</a> <span class=\"fn\">Î±</span> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.ComputeTrace\">ComputeTrace</a> <span class=\"fn\">Î±</span> <span class=\"fn\">m</span> <a href=\"./Lake/Build/Trace.html#Lake.Hash\">Hash</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Trace.lean#L152-L152","name":"Lake.ComputeHash.computeHash","line":152,"kind":"def","docLink":"./Lake/Build/Trace.html#Lake.ComputeHash.computeHash","doc":"Compute the hash of an object in its preferred monad. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.ComputeHash.computeHash\"><span class=\"name\">Lake</span>.<span class=\"name\">ComputeHash</span>.<span class=\"name\">computeHash</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Î±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <span class=\"fn\">(<a href=\"./foundational_types.html\">Type</a> â <a href=\"./foundational_types.html\">Type</a> v)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.ComputeHash\">ComputeHash</a> <span class=\"fn\">Î±</span> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">Î±</span> â <span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Lake/Build/Trace.html#Lake.Hash\">Hash</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Trace.lean#L150-L150","name":"Lake.ComputeHash.mk","line":150,"kind":"ctor","docLink":"./Lake/Build/Trace.html#Lake.ComputeHash.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.ComputeHash.mk\"><span class=\"name\">Lake</span>.<span class=\"name\">ComputeHash</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Î±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <span class=\"fn\">(<a href=\"./foundational_types.html\">Type</a> â <a href=\"./foundational_types.html\">Type</a> v)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">computeHash</span> : <span class=\"fn\"><span class=\"fn\">Î±</span> â <span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Lake/Build/Trace.html#Lake.Hash\">Hash</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.ComputeHash\">ComputeHash</a> <span class=\"fn\">Î±</span> <span class=\"fn\">m</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Trace.lean#L150-L152","name":"Lake.ComputeHash","line":150,"kind":"class","docLink":"./Lake/Build/Trace.html#Lake.ComputeHash","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.ComputeHash\"><span class=\"name\">Lake</span>.<span class=\"name\">ComputeHash</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Î±</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <span class=\"fn\">(<a href=\"./foundational_types.html\">Type</a> â <a href=\"./foundational_types.html\">Type</a> v)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (max u v)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Trace.lean#L146-L146","name":"Lake.Hash.instFromJson","line":146,"kind":"instance","docLink":"./Lake/Build/Trace.html#Lake.Hash.instFromJson","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.Hash.instFromJson\"><span class=\"name\">Lake</span>.<span class=\"name\">Hash</span>.<span class=\"name\">instFromJson</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Json/FromToJson.html#Lean.FromJson\">Lean.FromJson</a> <a href=\"./Lake/Build/Trace.html#Lake.Hash\">Hash</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Trace.lean#L143-L144","name":"Lake.Hash.fromJson?","line":143,"kind":"def","docLink":"./Lake/Build/Trace.html#Lake.Hash.fromJson?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.Hash.fromJson?\"><span class=\"name\">Lake</span>.<span class=\"name\">Hash</span>.<span class=\"name\">fromJson?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">json</span> : <a href=\"./Lean/Data/Json/Basic.html#Lean.Json\">Lean.Json</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Except\">Except</a> <a href=\"./Init/Prelude.html#String\">String</a> <a href=\"./Lake/Build/Trace.html#Lake.Hash\">Hash</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Trace.lean#L141-L141","name":"Lake.Hash.instToJson","line":141,"kind":"instance","docLink":"./Lake/Build/Trace.html#Lake.Hash.instToJson","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.Hash.instToJson\"><span class=\"name\">Lake</span>.<span class=\"name\">Hash</span>.<span class=\"name\">instToJson</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Json/FromToJson.html#Lean.ToJson\">Lean.ToJson</a> <a href=\"./Lake/Build/Trace.html#Lake.Hash\">Hash</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Trace.lean#L138-L139","name":"Lake.Hash.toJson","line":138,"kind":"def","docLink":"./Lake/Build/Trace.html#Lake.Hash.toJson","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.Hash.toJson\"><span class=\"name\">Lake</span>.<span class=\"name\">Hash</span>.<span class=\"name\">toJson</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lake/Build/Trace.html#Lake.Hash\">Hash</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/Json/Basic.html#Lean.Json\">Lean.Json</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Trace.lean#L135-L136","name":"Lake.Hash.ofBool","line":135,"kind":"def","docLink":"./Lake/Build/Trace.html#Lake.Hash.ofBool","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.Hash.ofBool\"><span class=\"name\">Lake</span>.<span class=\"name\">Hash</span>.<span class=\"name\">ofBool</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lake/Build/Trace.html#Lake.Hash\">Hash</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Trace.lean#L132-L133","name":"Lake.Hash.ofByteArray","line":132,"kind":"def","docLink":"./Lake/Build/Trace.html#Lake.Hash.ofByteArray","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.Hash.ofByteArray\"><span class=\"name\">Lake</span>.<span class=\"name\">Hash</span>.<span class=\"name\">ofByteArray</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">bytes</span> : <a href=\"./Init/Data/ByteArray/Basic.html#ByteArray\">ByteArray</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lake/Build/Trace.html#Lake.Hash\">Hash</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Trace.lean#L128-L130","name":"Lake.Hash.ofText","line":128,"kind":"def","docLink":"./Lake/Build/Trace.html#Lake.Hash.ofText","doc":"Hash of a line-ending normalized string. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.Hash.ofText\"><span class=\"name\">Lake</span>.<span class=\"name\">Hash</span>.<span class=\"name\">ofText</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">str</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lake/Build/Trace.html#Lake.Hash\">Hash</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Trace.lean#L125-L126","name":"Lake.Hash.ofString","line":125,"kind":"def","docLink":"./Lake/Build/Trace.html#Lake.Hash.ofString","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.Hash.ofString\"><span class=\"name\">Lake</span>.<span class=\"name\">Hash</span>.<span class=\"name\">ofString</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">str</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lake/Build/Trace.html#Lake.Hash\">Hash</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Trace.lean#L123-L123","name":"Lake.Hash.instToString","line":123,"kind":"instance","docLink":"./Lake/Build/Trace.html#Lake.Hash.instToString","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.Hash.instToString\"><span class=\"name\">Lake</span>.<span class=\"name\">Hash</span>.<span class=\"name\">instToString</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString\">ToString</a> <a href=\"./Lake/Build/Trace.html#Lake.Hash\">Hash</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Trace.lean#L120-L121","name":"Lake.Hash.toString","line":120,"kind":"def","docLink":"./Lake/Build/Trace.html#Lake.Hash.toString","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.Hash.toString\"><span class=\"name\">Lake</span>.<span class=\"name\">Hash</span>.<span class=\"name\">toString</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lake/Build/Trace.html#Lake.Hash\">Hash</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String\">String</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Trace.lean#L118-L118","name":"Lake.Hash.instMixTrace","line":118,"kind":"instance","docLink":"./Lake/Build/Trace.html#Lake.Hash.instMixTrace","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.Hash.instMixTrace\"><span class=\"name\">Lake</span>.<span class=\"name\">Hash</span>.<span class=\"name\">instMixTrace</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.MixTrace\">MixTrace</a> <a href=\"./Lake/Build/Trace.html#Lake.Hash\">Hash</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Trace.lean#L115-L116","name":"Lake.Hash.mix","line":115,"kind":"def","docLink":"./Lake/Build/Trace.html#Lake.Hash.mix","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.Hash.mix\"><span class=\"name\">Lake</span>.<span class=\"name\">Hash</span>.<span class=\"name\">mix</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h1 </span><span class=\"fn\">h2</span> : <a href=\"./Lake/Build/Trace.html#Lake.Hash\">Hash</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lake/Build/Trace.html#Lake.Hash\">Hash</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Trace.lean#L113-L113","name":"Lake.Hash.instNilTrace","line":113,"kind":"instance","docLink":"./Lake/Build/Trace.html#Lake.Hash.instNilTrace","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.Hash.instNilTrace\"><span class=\"name\">Lake</span>.<span class=\"name\">Hash</span>.<span class=\"name\">instNilTrace</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.NilTrace\">NilTrace</a> <a href=\"./Lake/Build/Trace.html#Lake.Hash\">Hash</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Trace.lean#L110-L111","name":"Lake.Hash.nil","line":110,"kind":"def","docLink":"./Lake/Build/Trace.html#Lake.Hash.nil","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.Hash.nil\"><span class=\"name\">Lake</span>.<span class=\"name\">Hash</span>.<span class=\"name\">nil</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lake/Build/Trace.html#Lake.Hash\">Hash</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Trace.lean#L107-L108","name":"Lake.Hash.load?","line":107,"kind":"def","docLink":"./Lake/Build/Trace.html#Lake.Hash.load?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.Hash.load?\"><span class=\"name\">Lake</span>.<span class=\"name\">Hash</span>.<span class=\"name\">load?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hashFile</span> : <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lake/Build/Trace.html#Lake.Hash\">Hash</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Trace.lean#L104-L105","name":"Lake.Hash.ofString?","line":104,"kind":"def","docLink":"./Lake/Build/Trace.html#Lake.Hash.ofString?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.Hash.ofString?\"><span class=\"name\">Lake</span>.<span class=\"name\">Hash</span>.<span class=\"name\">ofString?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lake/Build/Trace.html#Lake.Hash\">Hash</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Trace.lean#L101-L102","name":"Lake.Hash.ofNat","line":101,"kind":"def","docLink":"./Lake/Build/Trace.html#Lake.Hash.ofNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.Hash.ofNat\"><span class=\"name\">Lake</span>.<span class=\"name\">Hash</span>.<span class=\"name\">ofNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lake/Build/Trace.html#Lake.Hash\">Hash</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Trace.lean#L97-L97","name":"Lake.instHashableHash","line":97,"kind":"instance","docLink":"./Lake/Build/Trace.html#Lake.instHashableHash","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.instHashableHash\"><span class=\"name\">Lake</span>.<span class=\"name\">instHashableHash</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <a href=\"./Lake/Build/Trace.html#Lake.Hash\">Hash</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Trace.lean#L95-L95","name":"Lake.instReprHash","line":95,"kind":"instance","docLink":"./Lake/Build/Trace.html#Lake.instReprHash","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.instReprHash\"><span class=\"name\">Lake</span>.<span class=\"name\">instReprHash</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Lake/Build/Trace.html#Lake.Hash\">Hash</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Trace.lean#L95-L95","name":"Lake.instDecidableEqHash","line":95,"kind":"instance","docLink":"./Lake/Build/Trace.html#Lake.instDecidableEqHash","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.instDecidableEqHash\"><span class=\"name\">Lake</span>.<span class=\"name\">instDecidableEqHash</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <a href=\"./Lake/Build/Trace.html#Lake.Hash\">Hash</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Trace.lean#L95-L95","name":"Lake.instBEqHash","line":95,"kind":"instance","docLink":"./Lake/Build/Trace.html#Lake.instBEqHash","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.instBEqHash\"><span class=\"name\">Lake</span>.<span class=\"name\">instBEqHash</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <a href=\"./Lake/Build/Trace.html#Lake.Hash\">Hash</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Trace.lean#L94-L94","name":"Lake.Hash.val","line":94,"kind":"def","docLink":"./Lake/Build/Trace.html#Lake.Hash.val","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.Hash.val\"><span class=\"name\">Lake</span>.<span class=\"name\">Hash</span>.<span class=\"name\">val</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lake/Build/Trace.html#Lake.Hash\">Hash</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#UInt64\">UInt64</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Trace.lean#L93-L93","name":"Lake.Hash.mk","line":93,"kind":"ctor","docLink":"./Lake/Build/Trace.html#Lake.Hash.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.Hash.mk\"><span class=\"name\">Lake</span>.<span class=\"name\">Hash</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">val</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lake/Build/Trace.html#Lake.Hash\">Hash</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Trace.lean#L91-L95","name":"Lake.Hash","line":91,"kind":"structure","docLink":"./Lake/Build/Trace.html#Lake.Hash","doc":"A content hash. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.Hash\"><span class=\"name\">Lake</span>.<span class=\"name\">Hash</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Trace.lean#L84-L84","name":"Lake.instComputeTraceArrayOfMonad","line":84,"kind":"instance","docLink":"./Lake/Build/Trace.html#Lake.instComputeTraceArrayOfMonad","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.instComputeTraceArrayOfMonad\"><span class=\"name\">Lake</span>.<span class=\"name\">instComputeTraceArrayOfMonad</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ï</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Î±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u_1 â <a href=\"./foundational_types.html\">Type</a> u_3</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.MixTrace\">MixTrace</a> <span class=\"fn\">Ï</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.NilTrace\">NilTrace</a> <span class=\"fn\">Ï</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.ComputeTrace\">ComputeTrace</a> <span class=\"fn\">Î±</span> <span class=\"fn\">m</span> <span class=\"fn\">Ï</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.ComputeTrace\">ComputeTrace</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">Î±</span>)</span> <span class=\"fn\">m</span> <span class=\"fn\">Ï</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Trace.lean#L81-L82","name":"Lake.computeArrayTrace","line":81,"kind":"def","docLink":"./Lake/Build/Trace.html#Lake.computeArrayTrace","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.computeArrayTrace\"><span class=\"name\">Lake</span>.<span class=\"name\">computeArrayTrace</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ï</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Î±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u_1 â <a href=\"./foundational_types.html\">Type</a> u_3</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.MixTrace\">MixTrace</a> <span class=\"fn\">Ï</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.NilTrace\">NilTrace</a> <span class=\"fn\">Ï</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.ComputeTrace\">ComputeTrace</a> <span class=\"fn\">Î±</span> <span class=\"fn\">m</span> <span class=\"fn\">Ï</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u_1 â <a href=\"./foundational_types.html\">Type</a> u_4</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#MonadLiftT\">MonadLiftT</a> <span class=\"fn\">m</span> <span class=\"fn\">n</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">n</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">as</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">Î±</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">n</span> <span class=\"fn\">Ï</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Trace.lean#L78-L78","name":"Lake.instComputeTraceListOfMonad","line":78,"kind":"instance","docLink":"./Lake/Build/Trace.html#Lake.instComputeTraceListOfMonad","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.instComputeTraceListOfMonad\"><span class=\"name\">Lake</span>.<span class=\"name\">instComputeTraceListOfMonad</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ï</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Î±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u_1 â <a href=\"./foundational_types.html\">Type</a> u_3</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.MixTrace\">MixTrace</a> <span class=\"fn\">Ï</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.NilTrace\">NilTrace</a> <span class=\"fn\">Ï</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.ComputeTrace\">ComputeTrace</a> <span class=\"fn\">Î±</span> <span class=\"fn\">m</span> <span class=\"fn\">Ï</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.ComputeTrace\">ComputeTrace</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">Î±</span>)</span> <span class=\"fn\">m</span> <span class=\"fn\">Ï</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Trace.lean#L75-L76","name":"Lake.computeListTrace","line":75,"kind":"def","docLink":"./Lake/Build/Trace.html#Lake.computeListTrace","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.computeListTrace\"><span class=\"name\">Lake</span>.<span class=\"name\">computeListTrace</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ï</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Î±</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u_1 â <a href=\"./foundational_types.html\">Type</a> u_3</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.MixTrace\">MixTrace</a> <span class=\"fn\">Ï</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.NilTrace\">NilTrace</a> <span class=\"fn\">Ï</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.ComputeTrace\">ComputeTrace</a> <span class=\"fn\">Î±</span> <span class=\"fn\">m</span> <span class=\"fn\">Ï</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u_1 â <a href=\"./foundational_types.html\">Type</a> u_4</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#MonadLiftT\">MonadLiftT</a> <span class=\"fn\">m</span> <span class=\"fn\">n</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">n</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">as</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">Î±</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">n</span> <span class=\"fn\">Ï</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Trace.lean#L69-L70","name":"Lake.mixTraceArray","line":69,"kind":"def","docLink":"./Lake/Build/Trace.html#Lake.mixTraceArray","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.mixTraceArray\"><span class=\"name\">Lake</span>.<span class=\"name\">mixTraceArray</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ï</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.MixTrace\">MixTrace</a> <span class=\"fn\">Ï</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.NilTrace\">NilTrace</a> <span class=\"fn\">Ï</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">traces</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">Ï</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">Ï</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Trace.lean#L65-L66","name":"Lake.mixTraceList","line":65,"kind":"def","docLink":"./Lake/Build/Trace.html#Lake.mixTraceList","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.mixTraceList\"><span class=\"name\">Lake</span>.<span class=\"name\">mixTraceList</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ï</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.MixTrace\">MixTrace</a> <span class=\"fn\">Ï</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.NilTrace\">NilTrace</a> <span class=\"fn\">Ï</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">traces</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">Ï</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">Ï</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Trace.lean#L57-L57","name":"Lake.MixTrace.mixTrace","line":57,"kind":"def","docLink":"./Lake/Build/Trace.html#Lake.MixTrace.mixTrace","doc":"Combine two traces. The result should be dirty if either of the inputs is dirty. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.MixTrace.mixTrace\"><span class=\"name\">Lake</span>.<span class=\"name\">MixTrace</span>.<span class=\"name\">mixTrace</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Î±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.MixTrace\">MixTrace</a> <span class=\"fn\">Î±</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">Î±</span> â <span class=\"fn\">Î±</span> â <span class=\"fn\">Î±</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Trace.lean#L55-L55","name":"Lake.MixTrace.mk","line":55,"kind":"ctor","docLink":"./Lake/Build/Trace.html#Lake.MixTrace.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.MixTrace.mk\"><span class=\"name\">Lake</span>.<span class=\"name\">MixTrace</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Î±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mixTrace</span> : <span class=\"fn\"><span class=\"fn\">Î±</span> â <span class=\"fn\">Î±</span> â <span class=\"fn\">Î±</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.MixTrace\">MixTrace</a> <span class=\"fn\">Î±</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Trace.lean#L55-L57","name":"Lake.MixTrace","line":55,"kind":"class","docLink":"./Lake/Build/Trace.html#Lake.MixTrace","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.MixTrace\"><span class=\"name\">Lake</span>.<span class=\"name\">MixTrace</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Î±</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Trace.lean#L53-L53","name":"Lake.inhabitedOfNilTrace","line":53,"kind":"instance","docLink":"./Lake/Build/Trace.html#Lake.inhabitedOfNilTrace","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.inhabitedOfNilTrace\"><span class=\"name\">Lake</span>.<span class=\"name\">inhabitedOfNilTrace</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Î±</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.NilTrace\">NilTrace</a> <span class=\"fn\">Î±</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Î±</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Trace.lean#L49-L49","name":"Lake.NilTrace.nilTrace","line":49,"kind":"def","docLink":"./Lake/Build/Trace.html#Lake.NilTrace.nilTrace","doc":"The nil trace. Should not unduly clash with a proper trace. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.NilTrace.nilTrace\"><span class=\"name\">Lake</span>.<span class=\"name\">NilTrace</span>.<span class=\"name\">nilTrace</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Î±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.NilTrace\">NilTrace</a> <span class=\"fn\">Î±</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">Î±</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Trace.lean#L47-L47","name":"Lake.NilTrace.mk","line":47,"kind":"ctor","docLink":"./Lake/Build/Trace.html#Lake.NilTrace.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.NilTrace.mk\"><span class=\"name\">Lake</span>.<span class=\"name\">NilTrace</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Î±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">nilTrace</span> : <span class=\"fn\">Î±</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.NilTrace\">NilTrace</a> <span class=\"fn\">Î±</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Trace.lean#L47-L49","name":"Lake.NilTrace","line":47,"kind":"class","docLink":"./Lake/Build/Trace.html#Lake.NilTrace","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.NilTrace\"><span class=\"name\">Lake</span>.<span class=\"name\">NilTrace</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Î±</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Trace.lean#L43-L45","name":"Lake.computeTrace","line":43,"kind":"def","docLink":"./Lake/Build/Trace.html#Lake.computeTrace","doc":"Compute the trace of an object in a supporting monad. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.computeTrace\"><span class=\"name\">Lake</span>.<span class=\"name\">computeTrace</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Î±</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u_2 â <a href=\"./foundational_types.html\">Type</a> u_3</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ï</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u_2 â <a href=\"./foundational_types.html\">Type</a> u_4</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.ComputeTrace\">ComputeTrace</a> <span class=\"fn\">Î±</span> <span class=\"fn\">m</span> <span class=\"fn\">Ï</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#MonadLiftT\">MonadLiftT</a> <span class=\"fn\">m</span> <span class=\"fn\">n</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">Î±</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">n</span> <span class=\"fn\">Ï</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Trace.lean#L41-L41","name":"Lake.ComputeTrace.computeTrace","line":41,"kind":"def","docLink":"./Lake/Build/Trace.html#Lake.ComputeTrace.computeTrace","doc":"Compute the trace of an object in its preferred monad. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.ComputeTrace.computeTrace\"><span class=\"name\">Lake</span>.<span class=\"name\">ComputeTrace</span>.<span class=\"name\">computeTrace</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Î±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <span class=\"fn\">(<a href=\"./foundational_types.html\">Type</a> v â <a href=\"./foundational_types.html\">Type</a> w)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ï</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.ComputeTrace\">ComputeTrace</a> <span class=\"fn\">Î±</span> <span class=\"fn\">m</span> <span class=\"fn\">Ï</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">Î±</span> â <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">Ï</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Trace.lean#L39-L39","name":"Lake.ComputeTrace.mk","line":39,"kind":"ctor","docLink":"./Lake/Build/Trace.html#Lake.ComputeTrace.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.ComputeTrace.mk\"><span class=\"name\">Lake</span>.<span class=\"name\">ComputeTrace</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Î±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <span class=\"fn\">(<a href=\"./foundational_types.html\">Type</a> v â <a href=\"./foundational_types.html\">Type</a> w)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ï</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">computeTrace</span> : <span class=\"fn\"><span class=\"fn\">Î±</span> â <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">Ï</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.ComputeTrace\">ComputeTrace</a> <span class=\"fn\">Î±</span> <span class=\"fn\">m</span> <span class=\"fn\">Ï</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Trace.lean#L39-L41","name":"Lake.ComputeTrace","line":39,"kind":"class","docLink":"./Lake/Build/Trace.html#Lake.ComputeTrace","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.ComputeTrace\"><span class=\"name\">Lake</span>.<span class=\"name\">ComputeTrace</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Î±</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <span class=\"fn\">(<a href=\"./foundational_types.html\">Type</a> v â <a href=\"./foundational_types.html\">Type</a> w)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Ï</span> : <a href=\"./foundational_types.html\">Type</a> v)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (max u w)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Trace.lean#L32-L33","name":"Lake.instCheckExistsFilePath","line":32,"kind":"instance","docLink":"./Lake/Build/Trace.html#Lake.instCheckExistsFilePath","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.instCheckExistsFilePath\"><span class=\"name\">Lake</span>.<span class=\"name\">instCheckExistsFilePath</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.CheckExists\">CheckExists</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Trace.lean#L28-L28","name":"Lake.CheckExists.checkExists","line":28,"kind":"def","docLink":"./Lake/Build/Trace.html#Lake.CheckExists.checkExists","doc":"Check whether there already exists an artifact for the given target info. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.CheckExists.checkExists\"><span class=\"name\">Lake</span>.<span class=\"name\">CheckExists</span>.<span class=\"name\">checkExists</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.CheckExists\">CheckExists</a> <span class=\"fn\">i</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">i</span> â <span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Trace.lean#L26-L26","name":"Lake.CheckExists.mk","line":26,"kind":"ctor","docLink":"./Lake/Build/Trace.html#Lake.CheckExists.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.CheckExists.mk\"><span class=\"name\">Lake</span>.<span class=\"name\">CheckExists</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">checkExists</span> : <span class=\"fn\"><span class=\"fn\">i</span> â <span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Trace.html#Lake.CheckExists\">CheckExists</a> <span class=\"fn\">i</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Trace.lean#L26-L28","name":"Lake.CheckExists","line":26,"kind":"class","docLink":"./Lake/Build/Trace.html#Lake.CheckExists","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Trace.html#Lake.CheckExists\"><span class=\"name\">Lake</span>.<span class=\"name\">CheckExists</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u</div></div>"}]}