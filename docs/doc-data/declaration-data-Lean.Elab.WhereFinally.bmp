{"name":"Lean.Elab.WhereFinally","instances":[{"typeNames":["Lean.Elab.WhereFinallyView"],"name":"Lean.Elab.instInhabitedWhereFinallyView","className":"Inhabited"}],"imports":["Lean.Parser.Term"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Elab/WhereFinally.lean#L20-L29","name":"Lean.Elab.mkWhereFinallyView","line":20,"kind":"def","docLink":"./Lean/Elab/WhereFinally.html#Lean.Elab.mkWhereFinallyView","doc":"Creates a view of the `finally` section of a `whereDecls` syntax object "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/WhereFinally.html#Lean.Elab.mkWhereFinallyView\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">mkWhereFinallyView</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> â†’ <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Exception.html#Lean.MonadError\">MonadError</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stx</span> : <a href=\"./Init/Prelude.html#Lean.TSyntax\">TSyntax</a> <span class=\"fn\">`Lean.Parser.Term.whereDecls</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Lean/Elab/WhereFinally.html#Lean.Elab.WhereFinallyView\">WhereFinallyView</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Elab/WhereFinally.lean#L18-L18","name":"Lean.Elab.WhereFinallyView.isNone","line":18,"kind":"def","docLink":"./Lean/Elab/WhereFinally.html#Lean.Elab.WhereFinallyView.isNone","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/WhereFinally.html#Lean.Elab.WhereFinallyView.isNone\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">WhereFinallyView</span>.<span class=\"name\">isNone</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o</span> : <a href=\"./Lean/Elab/WhereFinally.html#Lean.Elab.WhereFinallyView\">WhereFinallyView</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Elab/WhereFinally.lean#L16-L16","name":"Lean.Elab.WhereFinallyView.none","line":16,"kind":"def","docLink":"./Lean/Elab/WhereFinally.html#Lean.Elab.WhereFinallyView.none","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/WhereFinally.html#Lean.Elab.WhereFinallyView.none\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">WhereFinallyView</span>.<span class=\"name\">none</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/WhereFinally.html#Lean.Elab.WhereFinallyView\">WhereFinallyView</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Elab/WhereFinally.lean#L14-L14","name":"Lean.Elab.instInhabitedWhereFinallyView","line":14,"kind":"instance","docLink":"./Lean/Elab/WhereFinally.html#Lean.Elab.instInhabitedWhereFinallyView","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/WhereFinally.html#Lean.Elab.instInhabitedWhereFinallyView\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">instInhabitedWhereFinallyView</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Elab/WhereFinally.html#Lean.Elab.WhereFinallyView\">WhereFinallyView</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Elab/WhereFinally.lean#L13-L13","name":"Lean.Elab.WhereFinallyView.tactic","line":13,"kind":"def","docLink":"./Lean/Elab/WhereFinally.html#Lean.Elab.WhereFinallyView.tactic","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/WhereFinally.html#Lean.Elab.WhereFinallyView.tactic\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">WhereFinallyView</span>.<span class=\"name\">tactic</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/WhereFinally.html#Lean.Elab.WhereFinallyView\">WhereFinallyView</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.TSyntax\">TSyntax</a> <span class=\"fn\">`Lean.Parser.Tactic.tacticSeq</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Elab/WhereFinally.lean#L12-L12","name":"Lean.Elab.WhereFinallyView.ref","line":12,"kind":"def","docLink":"./Lean/Elab/WhereFinally.html#Lean.Elab.WhereFinallyView.ref","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/WhereFinally.html#Lean.Elab.WhereFinallyView.ref\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">WhereFinallyView</span>.<span class=\"name\">ref</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/WhereFinally.html#Lean.Elab.WhereFinallyView\">WhereFinallyView</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Elab/WhereFinally.lean#L11-L11","name":"Lean.Elab.WhereFinallyView.mk","line":11,"kind":"ctor","docLink":"./Lean/Elab/WhereFinally.html#Lean.Elab.WhereFinallyView.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/WhereFinally.html#Lean.Elab.WhereFinallyView.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">WhereFinallyView</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ref</span> : <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">tactic</span> : <a href=\"./Init/Prelude.html#Lean.TSyntax\">TSyntax</a> <span class=\"fn\">`Lean.Parser.Tactic.tacticSeq</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/WhereFinally.html#Lean.Elab.WhereFinallyView\">WhereFinallyView</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Elab/WhereFinally.lean#L11-L14","name":"Lean.Elab.WhereFinallyView","line":11,"kind":"structure","docLink":"./Lean/Elab/WhereFinally.html#Lean.Elab.WhereFinallyView","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/WhereFinally.html#Lean.Elab.WhereFinallyView\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">WhereFinallyView</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}