{"name":"Lean.Attributes","instances":[{"typeNames":["Lean.AttributeApplicationTime"],"name":"Lean.instInhabitedAttributeApplicationTime","className":"Inhabited"},{"typeNames":["Lean.AttributeApplicationTime"],"name":"Lean.instBEqAttributeApplicationTime","className":"BEq"},{"typeNames":["Lean.ImportM","Lean.AttrM"],"name":"Lean.instMonadLiftImportMAttrM","className":"MonadLift"},{"typeNames":["Lean.AttributeImplCore"],"name":"Lean.instInhabitedAttributeImplCore","className":"Inhabited"},{"typeNames":["Lean.AttributeKind"],"name":"Lean.instBEqAttributeKind","className":"BEq"},{"typeNames":["Lean.AttributeKind"],"name":"Lean.instInhabitedAttributeKind","className":"Inhabited"},{"typeNames":["Lean.AttributeKind"],"name":"Lean.instToStringAttributeKind","className":"ToString"},{"typeNames":["Lean.AttributeImpl"],"name":"Lean.instInhabitedAttributeImpl","className":"Inhabited"},{"typeNames":["Lean.TagAttribute"],"name":"Lean.instInhabitedTagAttribute","className":"Inhabited"},{"typeNames":["Lean.ParametricAttribute"],"name":"Lean.instInhabitedParametricAttribute","className":"Inhabited"},{"typeNames":["Lean.EnumAttributes"],"name":"Lean.instInhabitedEnumAttributes","className":"Inhabited"},{"typeNames":["Lean.AttributeExtensionState"],"name":"Lean.instInhabitedAttributeExtensionState","className":"Inhabited"}],"imports":["Lean.CoreM","Lean.MonadEnv"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Attributes.lean#L461-L463","name":"Lean.getNumBuiltinAttributesImpl","line":461,"kind":"def","docLink":"./Lean/Attributes.html#Lean.getNumBuiltinAttributesImpl","doc":"`getNumBuiltinAttributes` implementation "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.getNumBuiltinAttributesImpl\"><span class=\"name\">Lean</span>.<span class=\"name\">getNumBuiltinAttributesImpl</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Attributes.lean#L449-L459","name":"Lean.updateEnvAttributesImpl","line":449,"kind":"def","docLink":"./Lean/Attributes.html#Lean.updateEnvAttributesImpl","doc":"`updateEnvAttributes` implementation "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.updateEnvAttributesImpl\"><span class=\"name\">Lean</span>.<span class=\"name\">updateEnvAttributesImpl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Attributes.lean#L445-L447","name":"Lean.Attribute.erase","line":445,"kind":"def","docLink":"./Lean/Attributes.html#Lean.Attribute.erase","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.Attribute.erase\"><span class=\"name\">Lean</span>.<span class=\"name\">Attribute</span>.<span class=\"name\">erase</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">declName </span><span class=\"fn\">attrName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Attributes.html#Lean.AttrM\">AttrM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Attributes.lean#L441-L443","name":"Lean.Attribute.add","line":441,"kind":"def","docLink":"./Lean/Attributes.html#Lean.Attribute.add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.Attribute.add\"><span class=\"name\">Lean</span>.<span class=\"name\">Attribute</span>.<span class=\"name\">add</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">declName </span><span class=\"fn\">attrName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stx</span> : <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">kind</span> : <a href=\"./Lean/Attributes.html#Lean.AttributeKind\">AttributeKind</a> := <a href=\"./Lean/Attributes.html#Lean.AttributeKind.global\">AttributeKind.global</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Attributes.html#Lean.AttrM\">AttrM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Attributes.lean#L433-L439","name":"Lean.registerAttributeOfBuilder","line":433,"kind":"def","docLink":"./Lean/Attributes.html#Lean.registerAttributeOfBuilder","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.registerAttributeOfBuilder\"><span class=\"name\">Lean</span>.<span class=\"name\">registerAttributeOfBuilder</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builderId </span><span class=\"fn\">ref</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">args</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Data/KVMap.html#Lean.DataValue\">DataValue</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Attributes.lean#L427-L431","name":"Lean.getAttributeImpl","line":427,"kind":"def","docLink":"./Lean/Attributes.html#Lean.getAttributeImpl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.getAttributeImpl\"><span class=\"name\">Lean</span>.<span class=\"name\">getAttributeImpl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">attrName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Except\">Except</a> <a href=\"./Init/Prelude.html#String\">String</a> <a href=\"./Lean/Attributes.html#Lean.AttributeImpl\">AttributeImpl</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Attributes.lean#L423-L425","name":"Lean.getAttributeNames","line":423,"kind":"def","docLink":"./Lean/Attributes.html#Lean.getAttributeNames","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.getAttributeNames\"><span class=\"name\">Lean</span>.<span class=\"name\">getAttributeNames</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Attributes.lean#L420-L421","name":"Lean.isAttribute","line":420,"kind":"def","docLink":"./Lean/Attributes.html#Lean.isAttribute","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.isAttribute\"><span class=\"name\">Lean</span>.<span class=\"name\">isAttribute</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">attrName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Attributes.lean#L415-L418","name":"Lean.getBuiltinAttributeApplicationTime","line":415,"kind":"def","docLink":"./Lean/Attributes.html#Lean.getBuiltinAttributeApplicationTime","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.getBuiltinAttributeApplicationTime\"><span class=\"name\">Lean</span>.<span class=\"name\">getBuiltinAttributeApplicationTime</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Lean/Attributes.html#Lean.AttributeApplicationTime\">AttributeApplicationTime</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Attributes.lean#L409-L413","name":"Lean.getBuiltinAttributeImpl","line":409,"kind":"def","docLink":"./Lean/Attributes.html#Lean.getBuiltinAttributeImpl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.getBuiltinAttributeImpl\"><span class=\"name\">Lean</span>.<span class=\"name\">getBuiltinAttributeImpl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">attrName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Lean/Attributes.html#Lean.AttributeImpl\">AttributeImpl</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Attributes.lean#L405-L407","name":"Lean.getBuiltinAttributeNames","line":405,"kind":"def","docLink":"./Lean/Attributes.html#Lean.getBuiltinAttributeNames","doc":"Return the name of all registered attributes. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.getBuiltinAttributeNames\"><span class=\"name\">Lean</span>.<span class=\"name\">getBuiltinAttributeNames</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Attributes.lean#L400-L403","name":"Lean.isBuiltinAttribute","line":400,"kind":"def","docLink":"./Lean/Attributes.html#Lean.isBuiltinAttribute","doc":"Return true iff `n` is the name of a registered attribute. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.isBuiltinAttribute\"><span class=\"name\">Lean</span>.<span class=\"name\">isBuiltinAttribute</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Attributes.lean#L391-L398","name":"Lean.attributeExtension","line":391,"kind":"opaque","docLink":"./Lean/Attributes.html#Lean.attributeExtension","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.attributeExtension\"><span class=\"name\">Lean</span>.<span class=\"name\">attributeExtension</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Attributes.html#Lean.AttributeExtension\">AttributeExtension</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Attributes.lean#L373-L374","name":"Lean.mkAttributeImplOfConstant","line":373,"kind":"opaque","docLink":"./Lean/Attributes.html#Lean.mkAttributeImplOfConstant","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.mkAttributeImplOfConstant\"><span class=\"name\">Lean</span>.<span class=\"name\">mkAttributeImplOfConstant</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">opts</span> : <a href=\"./Lean/Data/Options.html#Lean.Options\">Options</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Except\">Except</a> <a href=\"./Init/Prelude.html#String\">String</a> <a href=\"./Lean/Attributes.html#Lean.AttributeImpl\">AttributeImpl</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Attributes.lean#L365-L371","name":"Lean.mkAttributeImplOfConstantUnsafe","line":365,"kind":"def","docLink":"./Lean/Attributes.html#Lean.mkAttributeImplOfConstantUnsafe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">unsafe def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.mkAttributeImplOfConstantUnsafe\"><span class=\"name\">Lean</span>.<span class=\"name\">mkAttributeImplOfConstantUnsafe</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">opts</span> : <a href=\"./Lean/Data/Options.html#Lean.Options\">Options</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Except\">Except</a> <a href=\"./Init/Prelude.html#String\">String</a> <a href=\"./Lean/Attributes.html#Lean.AttributeImpl\">AttributeImpl</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Attributes.lean#L359-L359","name":"Lean.AttributeExtension","line":359,"kind":"def","docLink":"./Lean/Attributes.html#Lean.AttributeExtension","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.AttributeExtension\"><span class=\"name\">Lean</span>.<span class=\"name\">AttributeExtension</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Attributes.lean#L357-L357","name":"Lean.instInhabitedAttributeExtensionState","line":357,"kind":"instance","docLink":"./Lean/Attributes.html#Lean.instInhabitedAttributeExtensionState","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.instInhabitedAttributeExtensionState\"><span class=\"name\">Lean</span>.<span class=\"name\">instInhabitedAttributeExtensionState</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Attributes.html#Lean.AttributeExtensionState\">AttributeExtensionState</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Attributes.lean#L356-L356","name":"Lean.AttributeExtensionState.map","line":356,"kind":"def","docLink":"./Lean/Attributes.html#Lean.AttributeExtensionState.map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.AttributeExtensionState.map\"><span class=\"name\">Lean</span>.<span class=\"name\">AttributeExtensionState</span>.<span class=\"name\">map</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Attributes.html#Lean.AttributeExtensionState\">AttributeExtensionState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">Std.HashMap</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a> <a href=\"./Lean/Attributes.html#Lean.AttributeImpl\">AttributeImpl</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Attributes.lean#L355-L355","name":"Lean.AttributeExtensionState.newEntries","line":355,"kind":"def","docLink":"./Lean/Attributes.html#Lean.AttributeExtensionState.newEntries","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.AttributeExtensionState.newEntries\"><span class=\"name\">Lean</span>.<span class=\"name\">AttributeExtensionState</span>.<span class=\"name\">newEntries</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Attributes.html#Lean.AttributeExtensionState\">AttributeExtensionState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Attributes.html#Lean.AttributeExtensionOLeanEntry\">AttributeExtensionOLeanEntry</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Attributes.lean#L354-L354","name":"Lean.AttributeExtensionState.mk","line":354,"kind":"ctor","docLink":"./Lean/Attributes.html#Lean.AttributeExtensionState.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.AttributeExtensionState.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">AttributeExtensionState</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">newEntries</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Attributes.html#Lean.AttributeExtensionOLeanEntry\">AttributeExtensionOLeanEntry</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">map</span> : <span class=\"fn\"><a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">Std.HashMap</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a> <a href=\"./Lean/Attributes.html#Lean.AttributeImpl\">AttributeImpl</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Attributes.html#Lean.AttributeExtensionState\">AttributeExtensionState</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Attributes.lean#L354-L357","name":"Lean.AttributeExtensionState","line":354,"kind":"structure","docLink":"./Lean/Attributes.html#Lean.AttributeExtensionState","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.AttributeExtensionState\"><span class=\"name\">Lean</span>.<span class=\"name\">AttributeExtensionState</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Attributes.lean#L348-L352","name":"Lean.mkAttributeImplOfEntry","line":348,"kind":"def","docLink":"./Lean/Attributes.html#Lean.mkAttributeImplOfEntry","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.mkAttributeImplOfEntry\"><span class=\"name\">Lean</span>.<span class=\"name\">mkAttributeImplOfEntry</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Attributes.html#Lean.AttributeExtensionOLeanEntry\">AttributeExtensionOLeanEntry</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Lean/Attributes.html#Lean.AttributeImpl\">AttributeImpl</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Attributes.lean#L346-L346","name":"Lean.AttributeExtensionOLeanEntry.args","line":346,"kind":"def","docLink":"./Lean/Attributes.html#Lean.AttributeExtensionOLeanEntry.args","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.AttributeExtensionOLeanEntry.args\"><span class=\"name\">Lean</span>.<span class=\"name\">AttributeExtensionOLeanEntry</span>.<span class=\"name\">args</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Attributes.html#Lean.AttributeExtensionOLeanEntry\">AttributeExtensionOLeanEntry</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Data/KVMap.html#Lean.DataValue\">DataValue</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Attributes.lean#L345-L345","name":"Lean.AttributeExtensionOLeanEntry.ref","line":345,"kind":"def","docLink":"./Lean/Attributes.html#Lean.AttributeExtensionOLeanEntry.ref","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.AttributeExtensionOLeanEntry.ref\"><span class=\"name\">Lean</span>.<span class=\"name\">AttributeExtensionOLeanEntry</span>.<span class=\"name\">ref</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Attributes.html#Lean.AttributeExtensionOLeanEntry\">AttributeExtensionOLeanEntry</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Attributes.lean#L344-L344","name":"Lean.AttributeExtensionOLeanEntry.builderId","line":344,"kind":"def","docLink":"./Lean/Attributes.html#Lean.AttributeExtensionOLeanEntry.builderId","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.AttributeExtensionOLeanEntry.builderId\"><span class=\"name\">Lean</span>.<span class=\"name\">AttributeExtensionOLeanEntry</span>.<span class=\"name\">builderId</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Attributes.html#Lean.AttributeExtensionOLeanEntry\">AttributeExtensionOLeanEntry</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Attributes.lean#L343-L343","name":"Lean.AttributeExtensionOLeanEntry.mk","line":343,"kind":"ctor","docLink":"./Lean/Attributes.html#Lean.AttributeExtensionOLeanEntry.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.AttributeExtensionOLeanEntry.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">AttributeExtensionOLeanEntry</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builderId </span><span class=\"fn\">ref</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">args</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Data/KVMap.html#Lean.DataValue\">DataValue</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Attributes.html#Lean.AttributeExtensionOLeanEntry\">AttributeExtensionOLeanEntry</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Attributes.lean#L343-L346","name":"Lean.AttributeExtensionOLeanEntry","line":343,"kind":"structure","docLink":"./Lean/Attributes.html#Lean.AttributeExtensionOLeanEntry","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.AttributeExtensionOLeanEntry\"><span class=\"name\">Lean</span>.<span class=\"name\">AttributeExtensionOLeanEntry</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Attributes.lean#L338-L341","name":"Lean.registerAttributeImplBuilder","line":338,"kind":"def","docLink":"./Lean/Attributes.html#Lean.registerAttributeImplBuilder","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.registerAttributeImplBuilder\"><span class=\"name\">Lean</span>.<span class=\"name\">registerAttributeImplBuilder</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builderId</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builder</span> : <a href=\"./Lean/Attributes.html#Lean.AttributeImplBuilder\">AttributeImplBuilder</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Attributes.lean#L336-L336","name":"Lean.attributeImplBuilderTableRef","line":336,"kind":"opaque","docLink":"./Lean/Attributes.html#Lean.attributeImplBuilderTableRef","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.attributeImplBuilderTableRef\"><span class=\"name\">Lean</span>.<span class=\"name\">attributeImplBuilderTableRef</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Ref\">IO.Ref</a> <a href=\"./Lean/Attributes.html#Lean.AttributeImplBuilderTable\">AttributeImplBuilderTable</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Attributes.lean#L334-L334","name":"Lean.AttributeImplBuilderTable","line":334,"kind":"def","docLink":"./Lean/Attributes.html#Lean.AttributeImplBuilderTable","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.AttributeImplBuilderTable\"><span class=\"name\">Lean</span>.<span class=\"name\">AttributeImplBuilderTable</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Attributes.lean#L333-L333","name":"Lean.AttributeImplBuilder","line":333,"kind":"def","docLink":"./Lean/Attributes.html#Lean.AttributeImplBuilder","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.AttributeImplBuilder\"><span class=\"name\">Lean</span>.<span class=\"name\">AttributeImplBuilder</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Attributes.lean#L318-L325","name":"Lean.EnumAttributes.setValue","line":318,"kind":"def","docLink":"./Lean/Attributes.html#Lean.EnumAttributes.setValue","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.EnumAttributes.setValue\"><span class=\"name\">Lean</span>.<span class=\"name\">EnumAttributes</span>.<span class=\"name\">setValue</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">attrs</span> : <span class=\"fn\"><a href=\"./Lean/Attributes.html#Lean.EnumAttributes\">EnumAttributes</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">decl</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">val</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Except\">Except</a> <a href=\"./Init/Prelude.html#String\">String</a> <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Attributes.lean#L310-L316","name":"Lean.EnumAttributes.getValue","line":310,"kind":"def","docLink":"./Lean/Attributes.html#Lean.EnumAttributes.getValue","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.EnumAttributes.getValue\"><span class=\"name\">Lean</span>.<span class=\"name\">EnumAttributes</span>.<span class=\"name\">getValue</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">attr</span> : <span class=\"fn\"><a href=\"./Lean/Attributes.html#Lean.EnumAttributes\">EnumAttributes</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">decl</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Attributes.lean#L269-L306","name":"Lean.registerEnumAttributes","line":269,"kind":"def","docLink":"./Lean/Attributes.html#Lean.registerEnumAttributes","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.registerEnumAttributes\"><span class=\"name\">Lean</span>.<span class=\"name\">registerEnumAttributes</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">attrDescrs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> (<a href=\"./Init/Prelude.html#Lean.Name\">Name</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#String\">String</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">α</span>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">validate</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a> → <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Lean/Attributes.html#Lean.AttrM\">AttrM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></span></span> := <span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>) (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) =&gt; <span class=\"fn\"><a href=\"./Init/Prelude.html#Pure.pure\">pure</a> <a href=\"./Init/Prelude.html#Unit.unit\">(</a><a href=\"./Init/Prelude.html#Unit.unit\">)</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">applicationTime</span> : <a href=\"./Lean/Attributes.html#Lean.AttributeApplicationTime\">AttributeApplicationTime</a> := <a href=\"./Lean/Attributes.html#Lean.AttributeApplicationTime.afterTypeChecking\">AttributeApplicationTime.afterTypeChecking</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ref</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a> := by exact decl_name%)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<a href=\"./Lean/Attributes.html#Lean.EnumAttributes\">EnumAttributes</a> <span class=\"fn\">α</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Attributes.lean#L267-L267","name":"Lean.instInhabitedEnumAttributes","line":267,"kind":"instance","docLink":"./Lean/Attributes.html#Lean.instInhabitedEnumAttributes","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.instInhabitedEnumAttributes\"><span class=\"name\">Lean</span>.<span class=\"name\">instInhabitedEnumAttributes</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a✝</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<a href=\"./Lean/Attributes.html#Lean.EnumAttributes\">EnumAttributes</a> <span class=\"fn\">a✝</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Attributes.lean#L266-L266","name":"Lean.EnumAttributes.ext","line":266,"kind":"def","docLink":"./Lean/Attributes.html#Lean.EnumAttributes.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.EnumAttributes.ext\"><span class=\"name\">Lean</span>.<span class=\"name\">EnumAttributes</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lean/Attributes.html#Lean.EnumAttributes\">EnumAttributes</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.PersistentEnvExtension\">PersistentEnvExtension</a> (<a href=\"./Init/Prelude.html#Lean.Name\">Name</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">α</span>) (<a href=\"./Init/Prelude.html#Lean.Name\">Name</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">α</span>) <span class=\"fn\">(<a href=\"./Lean/Data/NameMap.html#Lean.NameMap\">NameMap</a> <span class=\"fn\">α</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Attributes.lean#L265-L265","name":"Lean.EnumAttributes.attrs","line":265,"kind":"def","docLink":"./Lean/Attributes.html#Lean.EnumAttributes.attrs","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.EnumAttributes.attrs\"><span class=\"name\">Lean</span>.<span class=\"name\">EnumAttributes</span>.<span class=\"name\">attrs</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lean/Attributes.html#Lean.EnumAttributes\">EnumAttributes</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Attributes.html#Lean.AttributeImpl\">AttributeImpl</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Attributes.lean#L264-L264","name":"Lean.EnumAttributes.mk","line":264,"kind":"ctor","docLink":"./Lean/Attributes.html#Lean.EnumAttributes.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.EnumAttributes.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">EnumAttributes</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">attrs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Attributes.html#Lean.AttributeImpl\">AttributeImpl</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ext</span> : <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.PersistentEnvExtension\">PersistentEnvExtension</a> (<a href=\"./Init/Prelude.html#Lean.Name\">Name</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">α</span>) (<a href=\"./Init/Prelude.html#Lean.Name\">Name</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">α</span>) <span class=\"fn\">(<a href=\"./Lean/Data/NameMap.html#Lean.NameMap\">NameMap</a> <span class=\"fn\">α</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Attributes.html#Lean.EnumAttributes\">EnumAttributes</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Attributes.lean#L260-L267","name":"Lean.EnumAttributes","line":260,"kind":"structure","docLink":"./Lean/Attributes.html#Lean.EnumAttributes","doc":"Given a list `[a₁, ..., a_n]` of elements of type `α`, `EnumAttributes` provides an attribute `Attr_i` for\nassociating a value `a_i` with an declaration. `α` is usually an enumeration type.\nNote that whenever we register an `EnumAttributes`, we create `n` attributes, but only one environment extension. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.EnumAttributes\"><span class=\"name\">Lean</span>.<span class=\"name\">EnumAttributes</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Attributes.lean#L250-L256","name":"Lean.ParametricAttribute.setParam","line":250,"kind":"def","docLink":"./Lean/Attributes.html#Lean.ParametricAttribute.setParam","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.ParametricAttribute.setParam\"><span class=\"name\">Lean</span>.<span class=\"name\">ParametricAttribute</span>.<span class=\"name\">setParam</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">attr</span> : <span class=\"fn\"><a href=\"./Lean/Attributes.html#Lean.ParametricAttribute\">ParametricAttribute</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">decl</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">param</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Except\">Except</a> <a href=\"./Init/Prelude.html#String\">String</a> <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Attributes.lean#L242-L248","name":"Lean.ParametricAttribute.getParam?","line":242,"kind":"def","docLink":"./Lean/Attributes.html#Lean.ParametricAttribute.getParam?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.ParametricAttribute.getParam?\"><span class=\"name\">Lean</span>.<span class=\"name\">ParametricAttribute</span>.<span class=\"name\">getParam?</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">attr</span> : <span class=\"fn\"><a href=\"./Lean/Attributes.html#Lean.ParametricAttribute\">ParametricAttribute</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">decl</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Attributes.lean#L215-L238","name":"Lean.registerParametricAttribute","line":215,"kind":"def","docLink":"./Lean/Attributes.html#Lean.registerParametricAttribute","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.registerParametricAttribute\"><span class=\"name\">Lean</span>.<span class=\"name\">registerParametricAttribute</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">impl</span> : <span class=\"fn\"><a href=\"./Lean/Attributes.html#Lean.ParametricAttributeImpl\">ParametricAttributeImpl</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<a href=\"./Lean/Attributes.html#Lean.ParametricAttribute\">ParametricAttribute</a> <span class=\"fn\">α</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Attributes.lean#L213-L213","name":"Lean.ParametricAttributeImpl.afterImport","line":213,"kind":"def","docLink":"./Lean/Attributes.html#Lean.ParametricAttributeImpl.afterImport","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.ParametricAttributeImpl.afterImport\"><span class=\"name\">Lean</span>.<span class=\"name\">ParametricAttributeImpl</span>.<span class=\"name\">afterImport</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lean/Attributes.html#Lean.ParametricAttributeImpl\">ParametricAttributeImpl</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> (<a href=\"./Init/Prelude.html#Lean.Name\">Name</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">α</span>))</span></span> → <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.ImportM\">ImportM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Attributes.lean#L212-L212","name":"Lean.ParametricAttributeImpl.afterSet","line":212,"kind":"def","docLink":"./Lean/Attributes.html#Lean.ParametricAttributeImpl.afterSet","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.ParametricAttributeImpl.afterSet\"><span class=\"name\">Lean</span>.<span class=\"name\">ParametricAttributeImpl</span>.<span class=\"name\">afterSet</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lean/Attributes.html#Lean.ParametricAttributeImpl\">ParametricAttributeImpl</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a> → <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Lean/Attributes.html#Lean.AttrM\">AttrM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Attributes.lean#L211-L211","name":"Lean.ParametricAttributeImpl.getParam","line":211,"kind":"def","docLink":"./Lean/Attributes.html#Lean.ParametricAttributeImpl.getParam","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.ParametricAttributeImpl.getParam\"><span class=\"name\">Lean</span>.<span class=\"name\">ParametricAttributeImpl</span>.<span class=\"name\">getParam</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lean/Attributes.html#Lean.ParametricAttributeImpl\">ParametricAttributeImpl</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a> → <span class=\"fn\"><a href=\"./Lean/Attributes.html#Lean.AttrM\">AttrM</a> <span class=\"fn\">α</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Attributes.lean#L210-L210","name":"Lean.ParametricAttributeImpl.mk","line":210,"kind":"ctor","docLink":"./Lean/Attributes.html#Lean.ParametricAttributeImpl.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.ParametricAttributeImpl.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">ParametricAttributeImpl</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">toAttributeImplCore</span> : <a href=\"./Lean/Attributes.html#Lean.AttributeImplCore\">AttributeImplCore</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">getParam</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a> → <span class=\"fn\"><a href=\"./Lean/Attributes.html#Lean.AttrM\">AttrM</a> <span class=\"fn\">α</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">afterSet</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a> → <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Lean/Attributes.html#Lean.AttrM\">AttrM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">afterImport</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> (<a href=\"./Init/Prelude.html#Lean.Name\">Name</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">α</span>))</span></span> → <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.ImportM\">ImportM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Attributes.html#Lean.ParametricAttributeImpl\">ParametricAttributeImpl</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Attributes.lean#L210-L213","name":"Lean.ParametricAttributeImpl","line":210,"kind":"structure","docLink":"./Lean/Attributes.html#Lean.ParametricAttributeImpl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.ParametricAttributeImpl\"><span class=\"name\">Lean</span>.<span class=\"name\">ParametricAttributeImpl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_extends\">extends</span> <a href=\"./Lean/Attributes.html#Lean.AttributeImplCore\">Lean.AttributeImplCore</a><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Attributes.lean#L210-L213","name":"Lean.ParametricAttributeImpl.toAttributeImplCore","line":210,"kind":"def","docLink":"./Lean/Attributes.html#Lean.ParametricAttributeImpl.toAttributeImplCore","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.ParametricAttributeImpl.toAttributeImplCore\"><span class=\"name\">Lean</span>.<span class=\"name\">ParametricAttributeImpl</span>.<span class=\"name\">toAttributeImplCore</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lean/Attributes.html#Lean.ParametricAttributeImpl\">ParametricAttributeImpl</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Attributes.html#Lean.AttributeImplCore\">AttributeImplCore</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Attributes.lean#L208-L208","name":"Lean.instInhabitedParametricAttribute","line":208,"kind":"instance","docLink":"./Lean/Attributes.html#Lean.instInhabitedParametricAttribute","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.instInhabitedParametricAttribute\"><span class=\"name\">Lean</span>.<span class=\"name\">instInhabitedParametricAttribute</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a✝</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<a href=\"./Lean/Attributes.html#Lean.ParametricAttribute\">ParametricAttribute</a> <span class=\"fn\">a✝</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Attributes.lean#L207-L207","name":"Lean.ParametricAttribute.ext","line":207,"kind":"def","docLink":"./Lean/Attributes.html#Lean.ParametricAttribute.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.ParametricAttribute.ext\"><span class=\"name\">Lean</span>.<span class=\"name\">ParametricAttribute</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lean/Attributes.html#Lean.ParametricAttribute\">ParametricAttribute</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.PersistentEnvExtension\">PersistentEnvExtension</a> (<a href=\"./Init/Prelude.html#Lean.Name\">Name</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">α</span>) (<a href=\"./Init/Prelude.html#Lean.Name\">Name</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">α</span>) <span class=\"fn\">(<a href=\"./Lean/Data/NameMap.html#Lean.NameMap\">NameMap</a> <span class=\"fn\">α</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Attributes.lean#L206-L206","name":"Lean.ParametricAttribute.attr","line":206,"kind":"def","docLink":"./Lean/Attributes.html#Lean.ParametricAttribute.attr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.ParametricAttribute.attr\"><span class=\"name\">Lean</span>.<span class=\"name\">ParametricAttribute</span>.<span class=\"name\">attr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lean/Attributes.html#Lean.ParametricAttribute\">ParametricAttribute</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Attributes.html#Lean.AttributeImpl\">AttributeImpl</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Attributes.lean#L205-L205","name":"Lean.ParametricAttribute.mk","line":205,"kind":"ctor","docLink":"./Lean/Attributes.html#Lean.ParametricAttribute.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.ParametricAttribute.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">ParametricAttribute</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">attr</span> : <a href=\"./Lean/Attributes.html#Lean.AttributeImpl\">AttributeImpl</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ext</span> : <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.PersistentEnvExtension\">PersistentEnvExtension</a> (<a href=\"./Init/Prelude.html#Lean.Name\">Name</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">α</span>) (<a href=\"./Init/Prelude.html#Lean.Name\">Name</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">α</span>) <span class=\"fn\">(<a href=\"./Lean/Data/NameMap.html#Lean.NameMap\">NameMap</a> <span class=\"fn\">α</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Attributes.html#Lean.ParametricAttribute\">ParametricAttribute</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Attributes.lean#L199-L208","name":"Lean.ParametricAttribute","line":199,"kind":"structure","docLink":"./Lean/Attributes.html#Lean.ParametricAttribute","doc":"A `TagAttribute` variant where we can attach parameters to attributes.\nIt is slightly more expensive and consumes a little bit more memory than `TagAttribute`.\n\nThey provide the function `pAttr.getParam env decl` which returns `some p` iff declaration `decl`\ncontains the attribute `pAttr` with parameter `p`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.ParametricAttribute\"><span class=\"name\">Lean</span>.<span class=\"name\">ParametricAttribute</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Attributes.lean#L184-L195","name":"Lean.TagAttribute.hasTag","line":184,"kind":"def","docLink":"./Lean/Attributes.html#Lean.TagAttribute.hasTag","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.TagAttribute.hasTag\"><span class=\"name\">Lean</span>.<span class=\"name\">TagAttribute</span>.<span class=\"name\">hasTag</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">attr</span> : <a href=\"./Lean/Attributes.html#Lean.TagAttribute\">TagAttribute</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">decl</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Attributes.lean#L175-L182","name":"Lean.TagAttribute.setTag","line":175,"kind":"def","docLink":"./Lean/Attributes.html#Lean.TagAttribute.setTag","doc":"Sets the attribute (without running `validate`) "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.TagAttribute.setTag\"><span class=\"name\">Lean</span>.<span class=\"name\">TagAttribute</span>.<span class=\"name\">setTag</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Exception.html#Lean.MonadError\">MonadError</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.MonadEnv\">MonadEnv</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">attr</span> : <a href=\"./Lean/Attributes.html#Lean.TagAttribute\">TagAttribute</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">decl</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Attributes.lean#L137-L171","name":"Lean.registerTagAttribute","line":137,"kind":"def","docLink":"./Lean/Attributes.html#Lean.registerTagAttribute","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.registerTagAttribute\"><span class=\"name\">Lean</span>.<span class=\"name\">registerTagAttribute</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">descr</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">validate</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a> → <span class=\"fn\"><a href=\"./Lean/Attributes.html#Lean.AttrM\">AttrM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></span> := <span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>) =&gt; <span class=\"fn\"><a href=\"./Init/Prelude.html#Pure.pure\">pure</a> <a href=\"./Init/Prelude.html#Unit.unit\">(</a><a href=\"./Init/Prelude.html#Unit.unit\">)</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ref</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a> := by exact decl_name%)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">applicationTime</span> : <a href=\"./Lean/Attributes.html#Lean.AttributeApplicationTime\">AttributeApplicationTime</a> := <a href=\"./Lean/Attributes.html#Lean.AttributeApplicationTime.afterTypeChecking\">AttributeApplicationTime.afterTypeChecking</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">asyncMode</span> : <a href=\"./Lean/Environment.html#Lean.EnvExtension.AsyncMode\">EnvExtension.AsyncMode</a> := <a href=\"./Lean/Environment.html#Lean.EnvExtension.AsyncMode.mainOnly\">EnvExtension.AsyncMode.mainOnly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Lean/Attributes.html#Lean.TagAttribute\">TagAttribute</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Attributes.lean#L135-L135","name":"Lean.instInhabitedTagAttribute","line":135,"kind":"instance","docLink":"./Lean/Attributes.html#Lean.instInhabitedTagAttribute","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.instInhabitedTagAttribute\"><span class=\"name\">Lean</span>.<span class=\"name\">instInhabitedTagAttribute</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Attributes.html#Lean.TagAttribute\">TagAttribute</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Attributes.lean#L134-L134","name":"Lean.TagAttribute.ext","line":134,"kind":"def","docLink":"./Lean/Attributes.html#Lean.TagAttribute.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.TagAttribute.ext\"><span class=\"name\">Lean</span>.<span class=\"name\">TagAttribute</span>.<span class=\"name\">ext</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Attributes.html#Lean.TagAttribute\">TagAttribute</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.PersistentEnvExtension\">PersistentEnvExtension</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a> <a href=\"./Lean/Data/NameMap.html#Lean.NameSet\">NameSet</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Attributes.lean#L133-L133","name":"Lean.TagAttribute.attr","line":133,"kind":"def","docLink":"./Lean/Attributes.html#Lean.TagAttribute.attr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.TagAttribute.attr\"><span class=\"name\">Lean</span>.<span class=\"name\">TagAttribute</span>.<span class=\"name\">attr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Attributes.html#Lean.TagAttribute\">TagAttribute</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Attributes.html#Lean.AttributeImpl\">AttributeImpl</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Attributes.lean#L132-L132","name":"Lean.TagAttribute.mk","line":132,"kind":"ctor","docLink":"./Lean/Attributes.html#Lean.TagAttribute.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.TagAttribute.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">TagAttribute</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">attr</span> : <a href=\"./Lean/Attributes.html#Lean.AttributeImpl\">AttributeImpl</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ext</span> : <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.PersistentEnvExtension\">PersistentEnvExtension</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a> <a href=\"./Lean/Data/NameMap.html#Lean.NameSet\">NameSet</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Attributes.html#Lean.TagAttribute\">TagAttribute</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Attributes.lean#L124-L135","name":"Lean.TagAttribute","line":124,"kind":"structure","docLink":"./Lean/Attributes.html#Lean.TagAttribute","doc":"Tag attributes are simple and efficient. They are useful for marking declarations in the modules where\nthey were defined.\n\nThe startup cost for this kind of attribute is very small since `addImportedFn` is a constant function.\n\nThey provide the predicate `tagAttr.hasTag env decl` which returns true iff declaration `decl`\nis tagged in the environment `env`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.TagAttribute\"><span class=\"name\">Lean</span>.<span class=\"name\">TagAttribute</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Attributes.lean#L117-L121","name":"Lean.Attribute.Builtin.getPrio","line":117,"kind":"def","docLink":"./Lean/Attributes.html#Lean.Attribute.Builtin.getPrio","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.Attribute.Builtin.getPrio\"><span class=\"name\">Lean</span>.<span class=\"name\">Attribute</span>.<span class=\"name\">Builtin</span>.<span class=\"name\">getPrio</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stx</span> : <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Attributes.html#Lean.AttrM\">AttrM</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Attributes.lean#L110-L115","name":"Lean.getAttrParamOptPrio","line":110,"kind":"def","docLink":"./Lean/Attributes.html#Lean.getAttrParamOptPrio","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.getAttrParamOptPrio\"><span class=\"name\">Lean</span>.<span class=\"name\">getAttrParamOptPrio</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">optPrioStx</span> : <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Attributes.html#Lean.AttrM\">AttrM</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Attributes.lean#L107-L108","name":"Lean.Attribute.Builtin.getId","line":107,"kind":"def","docLink":"./Lean/Attributes.html#Lean.Attribute.Builtin.getId","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.Attribute.Builtin.getId\"><span class=\"name\">Lean</span>.<span class=\"name\">Attribute</span>.<span class=\"name\">Builtin</span>.<span class=\"name\">getId</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stx</span> : <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Attributes.html#Lean.AttrM\">AttrM</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Attributes.lean#L103-L105","name":"Lean.Attribute.Builtin.getId?","line":103,"kind":"def","docLink":"./Lean/Attributes.html#Lean.Attribute.Builtin.getId?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.Attribute.Builtin.getId?\"><span class=\"name\">Lean</span>.<span class=\"name\">Attribute</span>.<span class=\"name\">Builtin</span>.<span class=\"name\">getId?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stx</span> : <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Attributes.html#Lean.AttrM\">AttrM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Attributes.lean#L98-L101","name":"Lean.Attribute.Builtin.getIdent","line":98,"kind":"def","docLink":"./Lean/Attributes.html#Lean.Attribute.Builtin.getIdent","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.Attribute.Builtin.getIdent\"><span class=\"name\">Lean</span>.<span class=\"name\">Attribute</span>.<span class=\"name\">Builtin</span>.<span class=\"name\">getIdent</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stx</span> : <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Attributes.html#Lean.AttrM\">AttrM</a> <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Attributes.lean#L86-L96","name":"Lean.Attribute.Builtin.getIdent?","line":86,"kind":"def","docLink":"./Lean/Attributes.html#Lean.Attribute.Builtin.getIdent?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.Attribute.Builtin.getIdent?\"><span class=\"name\">Lean</span>.<span class=\"name\">Attribute</span>.<span class=\"name\">Builtin</span>.<span class=\"name\">getIdent?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stx</span> : <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Attributes.html#Lean.AttrM\">AttrM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Attributes.lean#L77-L84","name":"Lean.Attribute.Builtin.ensureNoArgs","line":77,"kind":"def","docLink":"./Lean/Attributes.html#Lean.Attribute.Builtin.ensureNoArgs","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.Attribute.Builtin.ensureNoArgs\"><span class=\"name\">Lean</span>.<span class=\"name\">Attribute</span>.<span class=\"name\">Builtin</span>.<span class=\"name\">ensureNoArgs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stx</span> : <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Attributes.html#Lean.AttrM\">AttrM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Attributes.lean#L58-L64","name":"Lean.registerBuiltinAttribute","line":58,"kind":"def","docLink":"./Lean/Attributes.html#Lean.registerBuiltinAttribute","doc":"Low level attribute registration function. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.registerBuiltinAttribute\"><span class=\"name\">Lean</span>.<span class=\"name\">registerBuiltinAttribute</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">attr</span> : <a href=\"./Lean/Attributes.html#Lean.AttributeImpl\">AttributeImpl</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Attributes.lean#L56-L56","name":"Lean.attributeMapRef","line":56,"kind":"opaque","docLink":"./Lean/Attributes.html#Lean.attributeMapRef","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.attributeMapRef\"><span class=\"name\">Lean</span>.<span class=\"name\">attributeMapRef</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Ref\">IO.Ref</a> <span class=\"fn\">(<a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">Std.HashMap</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a> <a href=\"./Lean/Attributes.html#Lean.AttributeImpl\">AttributeImpl</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Attributes.lean#L54-L54","name":"Lean.instInhabitedAttributeImpl","line":54,"kind":"instance","docLink":"./Lean/Attributes.html#Lean.instInhabitedAttributeImpl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.instInhabitedAttributeImpl\"><span class=\"name\">Lean</span>.<span class=\"name\">instInhabitedAttributeImpl</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Attributes.html#Lean.AttributeImpl\">AttributeImpl</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Attributes.lean#L53-L53","name":"Lean.AttributeImpl.erase","line":53,"kind":"def","docLink":"./Lean/Attributes.html#Lean.AttributeImpl.erase","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.AttributeImpl.erase\"><span class=\"name\">Lean</span>.<span class=\"name\">AttributeImpl</span>.<span class=\"name\">erase</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Attributes.html#Lean.AttributeImpl\">AttributeImpl</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">decl</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Attributes.html#Lean.AttrM\">AttrM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Attributes.lean#L52-L52","name":"Lean.AttributeImpl.add","line":52,"kind":"def","docLink":"./Lean/Attributes.html#Lean.AttributeImpl.add","doc":"This is run when the attribute is applied to a declaration `decl`. `stx` is the syntax of the attribute including arguments. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.AttributeImpl.add\"><span class=\"name\">Lean</span>.<span class=\"name\">AttributeImpl</span>.<span class=\"name\">add</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Attributes.html#Lean.AttributeImpl\">AttributeImpl</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">decl</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stx</span> : <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">kind</span> : <a href=\"./Lean/Attributes.html#Lean.AttributeKind\">AttributeKind</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Attributes.html#Lean.AttrM\">AttrM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Attributes.lean#L50-L50","name":"Lean.AttributeImpl.mk","line":50,"kind":"ctor","docLink":"./Lean/Attributes.html#Lean.AttributeImpl.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.AttributeImpl.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">AttributeImpl</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">toAttributeImplCore</span> : <a href=\"./Lean/Attributes.html#Lean.AttributeImplCore\">AttributeImplCore</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">add</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a> → <span class=\"fn\"><a href=\"./Lean/Attributes.html#Lean.AttributeKind\">AttributeKind</a> → <span class=\"fn\"><a href=\"./Lean/Attributes.html#Lean.AttrM\">AttrM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">erase</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a> → <span class=\"fn\"><a href=\"./Lean/Attributes.html#Lean.AttrM\">AttrM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Attributes.html#Lean.AttributeImpl\">AttributeImpl</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Attributes.lean#L50-L54","name":"Lean.AttributeImpl","line":50,"kind":"structure","docLink":"./Lean/Attributes.html#Lean.AttributeImpl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.AttributeImpl\"><span class=\"name\">Lean</span>.<span class=\"name\">AttributeImpl</span></a></span><span class=\"decl_extends\">extends</span> <a href=\"./Lean/Attributes.html#Lean.AttributeImplCore\">Lean.AttributeImplCore</a><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Attributes.lean#L50-L54","name":"Lean.AttributeImpl.toAttributeImplCore","line":50,"kind":"def","docLink":"./Lean/Attributes.html#Lean.AttributeImpl.toAttributeImplCore","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.AttributeImpl.toAttributeImplCore\"><span class=\"name\">Lean</span>.<span class=\"name\">AttributeImpl</span>.<span class=\"name\">toAttributeImplCore</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Attributes.html#Lean.AttributeImpl\">AttributeImpl</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Attributes.html#Lean.AttributeImplCore\">AttributeImplCore</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Attributes.lean#L44-L48","name":"Lean.instToStringAttributeKind","line":44,"kind":"instance","docLink":"./Lean/Attributes.html#Lean.instToStringAttributeKind","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.instToStringAttributeKind\"><span class=\"name\">Lean</span>.<span class=\"name\">instToStringAttributeKind</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString\">ToString</a> <a href=\"./Lean/Attributes.html#Lean.AttributeKind\">AttributeKind</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Attributes.lean#L42-L42","name":"Lean.instInhabitedAttributeKind","line":42,"kind":"instance","docLink":"./Lean/Attributes.html#Lean.instInhabitedAttributeKind","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.instInhabitedAttributeKind\"><span class=\"name\">Lean</span>.<span class=\"name\">instInhabitedAttributeKind</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Attributes.html#Lean.AttributeKind\">AttributeKind</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Attributes.lean#L42-L42","name":"Lean.instBEqAttributeKind","line":42,"kind":"instance","docLink":"./Lean/Attributes.html#Lean.instBEqAttributeKind","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.instBEqAttributeKind\"><span class=\"name\">Lean</span>.<span class=\"name\">instBEqAttributeKind</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <a href=\"./Lean/Attributes.html#Lean.AttributeKind\">AttributeKind</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Attributes.lean#L41-L41","name":"Lean.AttributeKind.scoped","line":41,"kind":"ctor","docLink":"./Lean/Attributes.html#Lean.AttributeKind.scoped","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.AttributeKind.scoped\"><span class=\"name\">Lean</span>.<span class=\"name\">AttributeKind</span>.<span class=\"name\">scoped</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Attributes.html#Lean.AttributeKind\">AttributeKind</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Attributes.lean#L41-L41","name":"Lean.AttributeKind.local","line":41,"kind":"ctor","docLink":"./Lean/Attributes.html#Lean.AttributeKind.local","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.AttributeKind.local\"><span class=\"name\">Lean</span>.<span class=\"name\">AttributeKind</span>.<span class=\"name\">local</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Attributes.html#Lean.AttributeKind\">AttributeKind</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Attributes.lean#L41-L41","name":"Lean.AttributeKind.global","line":41,"kind":"ctor","docLink":"./Lean/Attributes.html#Lean.AttributeKind.global","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.AttributeKind.global\"><span class=\"name\">Lean</span>.<span class=\"name\">AttributeKind</span>.<span class=\"name\">global</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Attributes.html#Lean.AttributeKind\">AttributeKind</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Attributes.lean#L29-L42","name":"Lean.AttributeKind","line":29,"kind":"inductive","docLink":"./Lean/Attributes.html#Lean.AttributeKind","doc":"You can tag attributes with the 'local' or 'scoped' kind.\nFor example: `attribute [local myattr, scoped yourattr, theirattr]`.\n\nThis is used to indicate how an attribute should be scoped.\n- local means that the attribute should only be applied in the current scope and forgotten once the current section, namespace, or file is closed.\n- scoped means that the attribute should only be applied while the namespace is open.\n- global means that the attribute should always be applied.\n\nNote that the attribute handler (`AttributeImpl.add`) is responsible for interpreting the kind and\nmaking sure that these kinds are respected.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.AttributeKind\"><span class=\"name\">Lean</span>.<span class=\"name\">AttributeKind</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Attributes.lean#L27-L27","name":"Lean.instInhabitedAttributeImplCore","line":27,"kind":"instance","docLink":"./Lean/Attributes.html#Lean.instInhabitedAttributeImplCore","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.instInhabitedAttributeImplCore\"><span class=\"name\">Lean</span>.<span class=\"name\">instInhabitedAttributeImplCore</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Attributes.html#Lean.AttributeImplCore\">AttributeImplCore</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Attributes.lean#L26-L26","name":"Lean.AttributeImplCore.applicationTime","line":26,"kind":"def","docLink":"./Lean/Attributes.html#Lean.AttributeImplCore.applicationTime","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.AttributeImplCore.applicationTime\"><span class=\"name\">Lean</span>.<span class=\"name\">AttributeImplCore</span>.<span class=\"name\">applicationTime</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Attributes.html#Lean.AttributeImplCore\">AttributeImplCore</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Attributes.html#Lean.AttributeApplicationTime\">AttributeApplicationTime</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Attributes.lean#L25-L25","name":"Lean.AttributeImplCore.descr","line":25,"kind":"def","docLink":"./Lean/Attributes.html#Lean.AttributeImplCore.descr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.AttributeImplCore.descr\"><span class=\"name\">Lean</span>.<span class=\"name\">AttributeImplCore</span>.<span class=\"name\">descr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Attributes.html#Lean.AttributeImplCore\">AttributeImplCore</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String\">String</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Attributes.lean#L24-L24","name":"Lean.AttributeImplCore.name","line":24,"kind":"def","docLink":"./Lean/Attributes.html#Lean.AttributeImplCore.name","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.AttributeImplCore.name\"><span class=\"name\">Lean</span>.<span class=\"name\">AttributeImplCore</span>.<span class=\"name\">name</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Attributes.html#Lean.AttributeImplCore\">AttributeImplCore</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Attributes.lean#L23-L23","name":"Lean.AttributeImplCore.ref","line":23,"kind":"def","docLink":"./Lean/Attributes.html#Lean.AttributeImplCore.ref","doc":"This is used as the target for go-to-definition queries for simple attributes "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.AttributeImplCore.ref\"><span class=\"name\">Lean</span>.<span class=\"name\">AttributeImplCore</span>.<span class=\"name\">ref</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Attributes.html#Lean.AttributeImplCore\">AttributeImplCore</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Attributes.lean#L21-L21","name":"Lean.AttributeImplCore.mk","line":21,"kind":"ctor","docLink":"./Lean/Attributes.html#Lean.AttributeImplCore.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.AttributeImplCore.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">AttributeImplCore</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ref</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a> := by exact decl_name%)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">descr</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">applicationTime</span> : <a href=\"./Lean/Attributes.html#Lean.AttributeApplicationTime\">AttributeApplicationTime</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Attributes.html#Lean.AttributeImplCore\">AttributeImplCore</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Attributes.lean#L21-L27","name":"Lean.AttributeImplCore","line":21,"kind":"structure","docLink":"./Lean/Attributes.html#Lean.AttributeImplCore","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.AttributeImplCore\"><span class=\"name\">Lean</span>.<span class=\"name\">AttributeImplCore</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Attributes.lean#L18-L19","name":"Lean.instMonadLiftImportMAttrM","line":18,"kind":"instance","docLink":"./Lean/Attributes.html#Lean.instMonadLiftImportMAttrM","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.instMonadLiftImportMAttrM\"><span class=\"name\">Lean</span>.<span class=\"name\">instMonadLiftImportMAttrM</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#MonadLift\">MonadLift</a> <a href=\"./Lean/Environment.html#Lean.ImportM\">ImportM</a> <a href=\"./Lean/Attributes.html#Lean.AttrM\">AttrM</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Attributes.lean#L16-L16","name":"Lean.AttrM","line":16,"kind":"def","docLink":"./Lean/Attributes.html#Lean.AttrM","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.AttrM\"><span class=\"name\">Lean</span>.<span class=\"name\">AttrM</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Attributes.lean#L14-L14","name":"Lean.instBEqAttributeApplicationTime","line":14,"kind":"instance","docLink":"./Lean/Attributes.html#Lean.instBEqAttributeApplicationTime","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.instBEqAttributeApplicationTime\"><span class=\"name\">Lean</span>.<span class=\"name\">instBEqAttributeApplicationTime</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <a href=\"./Lean/Attributes.html#Lean.AttributeApplicationTime\">AttributeApplicationTime</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Attributes.lean#L14-L14","name":"Lean.instInhabitedAttributeApplicationTime","line":14,"kind":"instance","docLink":"./Lean/Attributes.html#Lean.instInhabitedAttributeApplicationTime","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.instInhabitedAttributeApplicationTime\"><span class=\"name\">Lean</span>.<span class=\"name\">instInhabitedAttributeApplicationTime</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Attributes.html#Lean.AttributeApplicationTime\">AttributeApplicationTime</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Attributes.lean#L13-L13","name":"Lean.AttributeApplicationTime.beforeElaboration","line":13,"kind":"ctor","docLink":"./Lean/Attributes.html#Lean.AttributeApplicationTime.beforeElaboration","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.AttributeApplicationTime.beforeElaboration\"><span class=\"name\">Lean</span>.<span class=\"name\">AttributeApplicationTime</span>.<span class=\"name\">beforeElaboration</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Attributes.html#Lean.AttributeApplicationTime\">AttributeApplicationTime</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Attributes.lean#L13-L13","name":"Lean.AttributeApplicationTime.afterCompilation","line":13,"kind":"ctor","docLink":"./Lean/Attributes.html#Lean.AttributeApplicationTime.afterCompilation","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.AttributeApplicationTime.afterCompilation\"><span class=\"name\">Lean</span>.<span class=\"name\">AttributeApplicationTime</span>.<span class=\"name\">afterCompilation</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Attributes.html#Lean.AttributeApplicationTime\">AttributeApplicationTime</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Attributes.lean#L13-L13","name":"Lean.AttributeApplicationTime.afterTypeChecking","line":13,"kind":"ctor","docLink":"./Lean/Attributes.html#Lean.AttributeApplicationTime.afterTypeChecking","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.AttributeApplicationTime.afterTypeChecking\"><span class=\"name\">Lean</span>.<span class=\"name\">AttributeApplicationTime</span>.<span class=\"name\">afterTypeChecking</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Attributes.html#Lean.AttributeApplicationTime\">AttributeApplicationTime</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Attributes.lean#L12-L14","name":"Lean.AttributeApplicationTime","line":12,"kind":"inductive","docLink":"./Lean/Attributes.html#Lean.AttributeApplicationTime","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.AttributeApplicationTime\"><span class=\"name\">Lean</span>.<span class=\"name\">AttributeApplicationTime</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}