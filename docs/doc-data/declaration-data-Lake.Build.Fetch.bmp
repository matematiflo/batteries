{"name":"Lake.Build.Fetch","instances":[{"typeNames":["Lake.BuildKey","Lake.RecBuildT"],"name":"Lake.instMonadCycleOfBuildKeyRecBuildTOfMonadOfMonadError","className":"Lake.MonadCycleOf"}],"imports":["Lake.Util.Lift","Lake.Util.Error","Lake.Util.Cycle","Lake.Util.EquipT","Lake.Build.Info","Lake.Build.Store","Lake.Build.Context"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Fetch.lean#L98-L100","name":"Lake.ModuleFacet.fetch","line":98,"kind":"def","docLink":"./Lake/Build/Fetch.html#Lake.ModuleFacet.fetch","doc":"Fetch the result of this facet of a module. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Fetch.html#Lake.ModuleFacet.fetch\"><span class=\"name\">Lake</span>.<span class=\"name\">ModuleFacet</span>.<span class=\"name\">fetch</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lake/Build/Facets.html#Lake.ModuleFacet\">ModuleFacet</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mod</span> : <a href=\"./Lake/Config/Module.html#Lake.Module\">Module</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Fetch.html#Lake.FetchM\">FetchM</a> <span class=\"fn\">(<a href=\"./Lake/Build/Job/Basic.html#Lake.Job\">Job</a> <span class=\"fn\">α</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Fetch.lean#L92-L94","name":"Lake.BuildInfo.fetch","line":92,"kind":"def","docLink":"./Lake/Build/Fetch.html#Lake.BuildInfo.fetch","doc":"Fetch the result associated with the info using the Lake build index. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Fetch.html#Lake.BuildInfo.fetch\"><span class=\"name\">Lake</span>.<span class=\"name\">BuildInfo</span>.<span class=\"name\">fetch</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lake/Build/Info.html#Lake.BuildInfo\">BuildInfo</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Util/Family.html#Lake.FamilyOut\">FamilyOut</a> <a href=\"./Lake/Build/Data.html#Lake.BuildData\">BuildData</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Lake/Build/Info.html#Lake.BuildInfo.key\">key</a></span> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Fetch.html#Lake.FetchM\">FetchM</a> <span class=\"fn\">(<a href=\"./Lake/Build/Job/Basic.html#Lake.Job\">Job</a> <span class=\"fn\">α</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Fetch.lean#L89-L90","name":"Lake.FetchM","line":89,"kind":"def","docLink":"./Lake/Build/Fetch.html#Lake.FetchM","doc":"The top-level monad for Lake build functions. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Fetch.html#Lake.FetchM\"><span class=\"name\">Lake</span>.<span class=\"name\">FetchM</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Fetch.lean#L86-L87","name":"Lake.FetchT","line":86,"kind":"def","docLink":"./Lake/Build/Fetch.html#Lake.FetchT","doc":"The top-level monad transformer for Lake build functions. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Fetch.html#Lake.FetchT\"><span class=\"name\">Lake</span>.<span class=\"name\">FetchT</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Fetch.lean#L83-L84","name":"Lake.IndexT","line":83,"kind":"def","docLink":"./Lake/Build/Fetch.html#Lake.IndexT","doc":"A transformer to equip a monad with a build function for the Lake index. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Fetch.html#Lake.IndexT\"><span class=\"name\">Lake</span>.<span class=\"name\">IndexT</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a> v</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> v</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Fetch.lean#L78-L81","name":"Lake.IndexBuildFn","line":78,"kind":"def","docLink":"./Lake/Build/Fetch.html#Lake.IndexBuildFn","doc":"A build function for any element of the Lake build index. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Fetch.html#Lake.IndexBuildFn\"><span class=\"name\">Lake</span>.<span class=\"name\">IndexBuildFn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a> v</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> v</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Fetch.lean#L72-L76","name":"Lake.RecBuildT.run'","line":72,"kind":"def","docLink":"./Lake/Build/Fetch.html#Lake.RecBuildT.run'","doc":"Run a recursive build in a fresh build store. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Fetch.html#Lake.RecBuildT.run'\"><span class=\"name\">Lake</span>.<span class=\"name\">RecBuildT</span>.<span class=\"name\">run'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#MonadLiftT\">MonadLiftT</a> <span class=\"fn\">(<a href=\"./Init/System/ST.html#ST\">ST</a> <a href=\"./Init/System/IO.html#IO.RealWorld\">IO.RealWorld</a>)</span> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">build</span> : <span class=\"fn\"><a href=\"./Lake/Build/Fetch.html#Lake.RecBuildT\">RecBuildT</a> <span class=\"fn\">m</span> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Context.html#Lake.BuildT\">BuildT</a> <span class=\"fn\">m</span> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Fetch.lean#L65-L70","name":"Lake.RecBuildT.run","line":65,"kind":"def","docLink":"./Lake/Build/Fetch.html#Lake.RecBuildT.run","doc":"Run a recursive build. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Fetch.html#Lake.RecBuildT.run\"><span class=\"name\">Lake</span>.<span class=\"name\">RecBuildT</span>.<span class=\"name\">run</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#MonadLiftT\">MonadLiftT</a> <span class=\"fn\">(<a href=\"./Init/System/ST.html#ST\">ST</a> <a href=\"./Init/System/IO.html#IO.RealWorld\">IO.RealWorld</a>)</span> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stack</span> : <span class=\"fn\"><a href=\"./Lake/Util/Cycle.html#Lake.CallStack\">CallStack</a> <a href=\"./Lake/Build/Key.html#Lake.BuildKey\">BuildKey</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">store</span> : <a href=\"./Lake/Build/Store.html#Lake.BuildStore\">BuildStore</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">build</span> : <span class=\"fn\"><a href=\"./Lake/Build/Fetch.html#Lake.RecBuildT\">RecBuildT</a> <span class=\"fn\">m</span> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Context.html#Lake.BuildT\">BuildT</a> <span class=\"fn\">m</span> (<span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lake/Build/Store.html#Lake.BuildStore\">BuildStore</a>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Fetch.lean#L58-L63","name":"Lake.RecBuildM","line":58,"kind":"def","docLink":"./Lake/Build/Fetch.html#Lake.RecBuildM","doc":"A recursive build of a Lake build store that may encounter a cycle.\n\nAn internal monad. **Not intended for user use.**\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Fetch.html#Lake.RecBuildM\"><span class=\"name\">Lake</span>.<span class=\"name\">RecBuildM</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Fetch.lean#L55-L56","name":"Lake.instMonadCycleOfBuildKeyRecBuildTOfMonadOfMonadError","line":55,"kind":"instance","docLink":"./Lake/Build/Fetch.html#Lake.instMonadCycleOfBuildKeyRecBuildTOfMonadOfMonadError","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Fetch.html#Lake.instMonadCycleOfBuildKeyRecBuildTOfMonadOfMonadError\"><span class=\"name\">Lake</span>.<span class=\"name\">instMonadCycleOfBuildKeyRecBuildTOfMonadOfMonadError</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Util/Error.html#Lake.MonadError\">MonadError</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Util/Cycle.html#Lake.MonadCycleOf\">MonadCycleOf</a> <a href=\"./Lake/Build/Key.html#Lake.BuildKey\">BuildKey</a> <span class=\"fn\">(<a href=\"./Lake/Build/Fetch.html#Lake.RecBuildT\">RecBuildT</a> <span class=\"fn\">m</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Fetch.lean#L51-L53","name":"Lake.buildCycleError","line":51,"kind":"def","docLink":"./Lake/Build/Fetch.html#Lake.buildCycleError","doc":"Log build cycle and error. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Fetch.html#Lake.buildCycleError\"><span class=\"name\">Lake</span>.<span class=\"name\">buildCycleError</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u_1 → <a href=\"./foundational_types.html\">Type</a> u_2</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Util/Error.html#Lake.MonadError\">MonadError</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cycle</span> : <span class=\"fn\"><a href=\"./Lake/Util/Cycle.html#Lake.Cycle\">Cycle</a> <a href=\"./Lake/Build/Key.html#Lake.BuildKey\">BuildKey</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Fetch.lean#L43-L49","name":"Lake.RecBuildT","line":43,"kind":"def","docLink":"./Lake/Build/Fetch.html#Lake.RecBuildT","doc":"A recursive build of a Lake build store that may encounter a cycle.\n\nAn internal monad. **Not intended for user use.**\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Fetch.html#Lake.RecBuildT\"><span class=\"name\">Lake</span>.<span class=\"name\">RecBuildT</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Fetch.lean#L40-L41","name":"Lake.getCurrPackage?","line":40,"kind":"def","docLink":"./Lake/Build/Fetch.html#Lake.getCurrPackage?","doc":"Get the package of the context (if any). "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Fetch.html#Lake.getCurrPackage?\"><span class=\"name\">Lake</span>.<span class=\"name\">getCurrPackage?</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a> u_1</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#MonadReaderOf\">MonadReaderOf</a> <a href=\"./Lake/Build/Fetch.html#Lake.CurrPackage\">CurrPackage</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lake/Config/Package.html#Lake.Package\">Package</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Fetch.lean#L36-L38","name":"Lake.withCurrPackage","line":36,"kind":"def","docLink":"./Lake/Build/Fetch.html#Lake.withCurrPackage","doc":"Run the action `x` with `pkg` as the current package. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Fetch.html#Lake.withCurrPackage\"><span class=\"name\">Lake</span>.<span class=\"name\">withCurrPackage</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a> u_1</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#MonadWithReader\">MonadWithReader</a> <a href=\"./Lake/Build/Fetch.html#Lake.CurrPackage\">CurrPackage</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pkg</span> : <a href=\"./Lake/Config/Package.html#Lake.Package\">Package</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Fetch.lean#L32-L34","name":"Lake.withCurrPackage?","line":32,"kind":"def","docLink":"./Lake/Build/Fetch.html#Lake.withCurrPackage?","doc":"Run the action `x` with `pkg?` as the current package or no package if `none`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Fetch.html#Lake.withCurrPackage?\"><span class=\"name\">Lake</span>.<span class=\"name\">withCurrPackage?</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a> u_1</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#MonadWithReader\">MonadWithReader</a> <a href=\"./Lake/Build/Fetch.html#Lake.CurrPackage\">CurrPackage</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pkg?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lake/Config/Package.html#Lake.Package\">Package</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Fetch.lean#L29-L30","name":"Lake.CurrPackage","line":29,"kind":"def","docLink":"./Lake/Build/Fetch.html#Lake.CurrPackage","doc":"A type alias for `Option Package` that assists monad type class synthesis. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Fetch.html#Lake.CurrPackage\"><span class=\"name\">Lake</span>.<span class=\"name\">CurrPackage</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/lake/Lake/Build/Fetch.lean#L25-L27","name":"Lake.CoreBuildM","line":25,"kind":"def","docLink":"./Lake/Build/Fetch.html#Lake.CoreBuildM","doc":"The internal core monad of Lake builds. **Not intended for user use.** "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Fetch.html#Lake.CoreBuildM\"><span class=\"name\">Lake</span>.<span class=\"name\">CoreBuildM</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}