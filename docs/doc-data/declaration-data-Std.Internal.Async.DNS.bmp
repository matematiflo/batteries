{"name":"Std.Internal.Async.DNS","instances":[],"imports":["Std.Time","Std.Internal.UV","Std.Internal.Async.Basic","Std.Net.Addr"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Std/Internal/Async/DNS.lean#L46-L52","name":"Std.Internal.IO.Async.DNS.getNameInfo","line":46,"kind":"def","docLink":"./Std/Internal/Async/DNS.html#Std.Internal.IO.Async.DNS.getNameInfo","doc":"Performs a reverse DNS lookup on a `SocketAddress`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/Async/DNS.html#Std.Internal.IO.Async.DNS.getNameInfo\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">IO</span>.<span class=\"name\">Async</span>.<span class=\"name\">DNS</span>.<span class=\"name\">getNameInfo</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">host</span> : <a href=\"./Std/Net/Addr.html#Std.Net.SocketAddress\">Net.SocketAddress</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<a href=\"./Std/Internal/Async/Basic.html#Std.Internal.IO.Async.AsyncTask\">AsyncTask</a> <a href=\"./Std/Internal/Async/DNS.html#Std.Internal.IO.Async.DNS.NameInfo\">NameInfo</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Std/Internal/Async/DNS.lean#L34-L44","name":"Std.Internal.IO.Async.DNS.getAddrInfo","line":34,"kind":"def","docLink":"./Std/Internal/Async/DNS.html#Std.Internal.IO.Async.DNS.getAddrInfo","doc":"Asynchronously resolves a hostname and service to an array of socket addresses.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/Async/DNS.html#Std.Internal.IO.Async.DNS.getAddrInfo\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">IO</span>.<span class=\"name\">Async</span>.<span class=\"name\">DNS</span>.<span class=\"name\">getAddrInfo</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">host </span><span class=\"fn\">service</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">addressFamily</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Std/Net/Addr.html#Std.Net.AddressFamily\">Net.AddressFamily</a></span> := <a href=\"./Init/Prelude.html#Option.none\">none</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<a href=\"./Std/Internal/Async/Basic.html#Std.Internal.IO.Async.AsyncTask\">AsyncTask</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Std/Net/Addr.html#Std.Net.IPAddr\">Net.IPAddr</a>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Std/Internal/Async/DNS.lean#L32-L32","name":"Std.Internal.IO.Async.DNS.NameInfo.service","line":32,"kind":"def","docLink":"./Std/Internal/Async/DNS.html#Std.Internal.IO.Async.DNS.NameInfo.service","doc":"The service name (e.g., \"http\" for port 80).\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/Async/DNS.html#Std.Internal.IO.Async.DNS.NameInfo.service\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">IO</span>.<span class=\"name\">Async</span>.<span class=\"name\">DNS</span>.<span class=\"name\">NameInfo</span>.<span class=\"name\">service</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Std/Internal/Async/DNS.html#Std.Internal.IO.Async.DNS.NameInfo\">NameInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String\">String</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Std/Internal/Async/DNS.lean#L27-L27","name":"Std.Internal.IO.Async.DNS.NameInfo.host","line":27,"kind":"def","docLink":"./Std/Internal/Async/DNS.html#Std.Internal.IO.Async.DNS.NameInfo.host","doc":"The resolved hostname (e.g., \"example.com\").\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/Async/DNS.html#Std.Internal.IO.Async.DNS.NameInfo.host\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">IO</span>.<span class=\"name\">Async</span>.<span class=\"name\">DNS</span>.<span class=\"name\">NameInfo</span>.<span class=\"name\">host</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Std/Internal/Async/DNS.html#Std.Internal.IO.Async.DNS.NameInfo\">NameInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String\">String</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Std/Internal/Async/DNS.lean#L23-L23","name":"Std.Internal.IO.Async.DNS.NameInfo.mk","line":23,"kind":"ctor","docLink":"./Std/Internal/Async/DNS.html#Std.Internal.IO.Async.DNS.NameInfo.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/Async/DNS.html#Std.Internal.IO.Async.DNS.NameInfo.mk\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">IO</span>.<span class=\"name\">Async</span>.<span class=\"name\">DNS</span>.<span class=\"name\">NameInfo</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">host </span><span class=\"fn\">service</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Internal/Async/DNS.html#Std.Internal.IO.Async.DNS.NameInfo\">NameInfo</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Std/Internal/Async/DNS.lean#L20-L32","name":"Std.Internal.IO.Async.DNS.NameInfo","line":20,"kind":"structure","docLink":"./Std/Internal/Async/DNS.html#Std.Internal.IO.Async.DNS.NameInfo","doc":"Represents a resolved hostname and service name from a socket address.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Internal/Async/DNS.html#Std.Internal.IO.Async.DNS.NameInfo\"><span class=\"name\">Std</span>.<span class=\"name\">Internal</span>.<span class=\"name\">IO</span>.<span class=\"name\">Async</span>.<span class=\"name\">DNS</span>.<span class=\"name\">NameInfo</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}