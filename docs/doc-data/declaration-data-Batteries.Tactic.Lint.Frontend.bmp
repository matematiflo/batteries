{"name":"Batteries.Tactic.Lint.Frontend","instances":[{"typeNames":["Batteries.Tactic.Lint.LintVerbosity"],"name":"Batteries.Tactic.Lint.instInhabitedLintVerbosity","className":"Inhabited"},{"typeNames":["Eq"],"name":"Batteries.Tactic.Lint.instDecidableEqLintVerbosity","className":"Decidable"},{"typeNames":["Batteries.Tactic.Lint.LintVerbosity"],"name":"Batteries.Tactic.Lint.instReprLintVerbosity","className":"Repr"}],"imports":["Init","Lean.Elab.Command","Batteries.Tactic.Lint.Basic","Batteries.Tactic.OpenPrivate"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/82fd0cf6aaa1e2580aa17b3b1e5b9140e6e6a5e5/Batteries/Tactic/Lint/Frontend.lean#L269-L277","name":"Batteries.Tactic.Lint.«command#list_linters»","line":269,"kind":"def","docLink":"./Batteries/Tactic/Lint/Frontend.html#Batteries.Tactic.Lint.«command#list_linters»","doc":"The command `#list_linters` prints a list of all available linters. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Tactic/Lint/Frontend.html#Batteries.Tactic.Lint.«command#list_linters»\"><span class=\"name\">Batteries</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Lint</span>.<span class=\"name\">«command#list_linters»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/82fd0cf6aaa1e2580aa17b3b1e5b9140e6e6a5e5/Batteries/Tactic/Lint/Frontend.lean#L224-L266","name":"Batteries.Tactic.Lint.«command#lint+-*Only___»","line":224,"kind":"def","docLink":"./Batteries/Tactic/Lint/Frontend.html#Batteries.Tactic.Lint.«command#lint+-*Only___»","doc":"The command `#lint` runs the linters on the current file (by default).\n\n`#lint only someLinter` can be used to run only a single linter. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Tactic/Lint/Frontend.html#Batteries.Tactic.Lint.«command#lint+-*Only___»\"><span class=\"name\">Batteries</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Lint</span>.<span class=\"name\">«command#lint+-*Only___»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/82fd0cf6aaa1e2580aa17b3b1e5b9140e6e6a5e5/Batteries/Tactic/Lint/Frontend.lean#L220-L221","name":"Batteries.Tactic.Lint.inProject","line":220,"kind":"def","docLink":"./Batteries/Tactic/Lint/Frontend.html#Batteries.Tactic.Lint.inProject","doc":"The `in foo` config argument allows running the linter on a specified project. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Tactic/Lint/Frontend.html#Batteries.Tactic.Lint.inProject\"><span class=\"name\">Batteries</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Lint</span>.<span class=\"name\">inProject</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/82fd0cf6aaa1e2580aa17b3b1e5b9140e6e6a5e5/Batteries/Tactic/Lint/Frontend.lean#L210-L218","name":"Batteries.Tactic.Lint.getDeclsInPackage","line":210,"kind":"def","docLink":"./Batteries/Tactic/Lint/Frontend.html#Batteries.Tactic.Lint.getDeclsInPackage","doc":"Get the list of all declarations in the specified package. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Tactic/Lint/Frontend.html#Batteries.Tactic.Lint.getDeclsInPackage\"><span class=\"name\">Batteries</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Lint</span>.<span class=\"name\">getDeclsInPackage</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pkg</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/82fd0cf6aaa1e2580aa17b3b1e5b9140e6e6a5e5/Batteries/Tactic/Lint/Frontend.lean#L206-L208","name":"Batteries.Tactic.Lint.getAllDecls","line":206,"kind":"def","docLink":"./Batteries/Tactic/Lint/Frontend.html#Batteries.Tactic.Lint.getAllDecls","doc":"Get the list of all declarations in the environment. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Tactic/Lint/Frontend.html#Batteries.Tactic.Lint.getAllDecls\"><span class=\"name\">Batteries</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Lint</span>.<span class=\"name\">getAllDecls</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/82fd0cf6aaa1e2580aa17b3b1e5b9140e6e6a5e5/Batteries/Tactic/Lint/Frontend.lean#L202-L204","name":"Batteries.Tactic.Lint.getDeclsInCurrModule","line":202,"kind":"def","docLink":"./Batteries/Tactic/Lint/Frontend.html#Batteries.Tactic.Lint.getDeclsInCurrModule","doc":"Get the list of declarations in the current module. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Tactic/Lint/Frontend.html#Batteries.Tactic.Lint.getDeclsInCurrModule\"><span class=\"name\">Batteries</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Lint</span>.<span class=\"name\">getDeclsInCurrModule</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/82fd0cf6aaa1e2580aa17b3b1e5b9140e6e6a5e5/Batteries/Tactic/Lint/Frontend.lean#L169-L200","name":"Batteries.Tactic.Lint.formatLinterResults","line":169,"kind":"def","docLink":"./Batteries/Tactic/Lint/Frontend.html#Batteries.Tactic.Lint.formatLinterResults","doc":"Formats the linter results as Lean code with comments and `#check` commands.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Tactic/Lint/Frontend.html#Batteries.Tactic.Lint.formatLinterResults\"><span class=\"name\">Batteries</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Lint</span>.<span class=\"name\">formatLinterResults</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">results</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> (<a href=\"./Batteries/Tactic/Lint/Basic.html#Batteries.Tactic.Lint.NamedLinter\">NamedLinter</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">Std.HashMap</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a> <a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a></span>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">decls</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">groupByFilename</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">whereDesc</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">runSlowLinters</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">verbose</span> : <a href=\"./Batteries/Tactic/Lint/Frontend.html#Batteries.Tactic.Lint.LintVerbosity\">LintVerbosity</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">numLinters</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">useErrorFormat</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> <a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/82fd0cf6aaa1e2580aa17b3b1e5b9140e6e6a5e5/Batteries/Tactic/Lint/Frontend.lean#L145-L167","name":"Batteries.Tactic.Lint.groupedByFilename","line":145,"kind":"def","docLink":"./Batteries/Tactic/Lint/Frontend.html#Batteries.Tactic.Lint.groupedByFilename","doc":"Formats a map of linter warnings grouped by filename with `-- filename` comments.\nThe first `drop_fn_chars` characters are stripped from the filename.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Tactic/Lint/Frontend.html#Batteries.Tactic.Lint.groupedByFilename\"><span class=\"name\">Batteries</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Lint</span>.<span class=\"name\">groupedByFilename</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">results</span> : <span class=\"fn\"><a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">Std.HashMap</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a> <a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">useErrorFormat</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> <a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/82fd0cf6aaa1e2580aa17b3b1e5b9140e6e6a5e5/Batteries/Tactic/Lint/Frontend.lean#L138-L143","name":"Batteries.Tactic.Lint.printWarnings","line":138,"kind":"def","docLink":"./Batteries/Tactic/Lint/Frontend.html#Batteries.Tactic.Lint.printWarnings","doc":"Formats a map of linter warnings using `print_warning`, sorted by line number. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Tactic/Lint/Frontend.html#Batteries.Tactic.Lint.printWarnings\"><span class=\"name\">Batteries</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Lint</span>.<span class=\"name\">printWarnings</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">results</span> : <span class=\"fn\"><a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">Std.HashMap</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a> <a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">filePath</span> : <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a> := <a href=\"./Init/Prelude.html#Inhabited.default\">default</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">useErrorFormat</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> <a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/82fd0cf6aaa1e2580aa17b3b1e5b9140e6e6a5e5/Batteries/Tactic/Lint/Frontend.lean#L127-L136","name":"Batteries.Tactic.Lint.printWarning","line":127,"kind":"def","docLink":"./Batteries/Tactic/Lint/Frontend.html#Batteries.Tactic.Lint.printWarning","doc":"Formats a linter warning as `#check` command with comment. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Tactic/Lint/Frontend.html#Batteries.Tactic.Lint.printWarning\"><span class=\"name\">Batteries</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Lint</span>.<span class=\"name\">printWarning</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">warning</span> : <a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">useErrorFormat</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">filePath</span> : <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a> := <a href=\"./Init/Prelude.html#Inhabited.default\">default</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> <a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/82fd0cf6aaa1e2580aa17b3b1e5b9140e6e6a5e5/Batteries/Tactic/Lint/Frontend.lean#L119-L125","name":"Batteries.Tactic.Lint.sortResults","line":119,"kind":"def","docLink":"./Batteries/Tactic/Lint/Frontend.html#Batteries.Tactic.Lint.sortResults","doc":"Sorts a map with declaration keys as names by line number. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Tactic/Lint/Frontend.html#Batteries.Tactic.Lint.sortResults\"><span class=\"name\">Batteries</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Lint</span>.<span class=\"name\">sortResults</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">results</span> : <span class=\"fn\"><a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">Std.HashMap</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> (<a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">α</span>))</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/82fd0cf6aaa1e2580aa17b3b1e5b9140e6e6a5e5/Batteries/Tactic/Lint/Frontend.lean#L91-L117","name":"Batteries.Tactic.Lint.lintCore","line":91,"kind":"def","docLink":"./Batteries/Tactic/Lint/Frontend.html#Batteries.Tactic.Lint.lintCore","doc":"Runs all the specified linters on all the specified declarations in parallel,\nproducing a list of results.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Tactic/Lint/Frontend.html#Batteries.Tactic.Lint.lintCore\"><span class=\"name\">Batteries</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Lint</span>.<span class=\"name\">lintCore</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">decls</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">linters</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Batteries/Tactic/Lint/Basic.html#Batteries.Tactic.Lint.NamedLinter\">NamedLinter</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> (<a href=\"./Batteries/Tactic/Lint/Basic.html#Batteries.Tactic.Lint.NamedLinter\">NamedLinter</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">Std.HashMap</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a> <a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a></span>))</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/82fd0cf6aaa1e2580aa17b3b1e5b9140e6e6a5e5/Batteries/Tactic/Lint/Frontend.lean#L67-L89","name":"Batteries.Tactic.Lint.getChecks","line":67,"kind":"def","docLink":"./Batteries/Tactic/Lint/Frontend.html#Batteries.Tactic.Lint.getChecks","doc":"`getChecks slow runOnly runAlways` produces a list of linters.\n`runOnly` is an optional list of names that should resolve to declarations with type `NamedLinter`.\nIf populated, only these linters are run (regardless of the default configuration).\n`runAlways` is an optional list of names that should resolve to declarations with type\n`NamedLinter`. If populated, these linters are always run (regardless of their configuration).\nSpecifying a linter in `runAlways` but not `runOnly` is an error.\nOtherwise, it uses all enabled linters in the environment tagged with `@[env_linter]`.\nIf `slow` is false, it only uses the fast default tests. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Tactic/Lint/Frontend.html#Batteries.Tactic.Lint.getChecks\"><span class=\"name\">Batteries</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Lint</span>.<span class=\"name\">getChecks</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">slow</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">runOnly </span><span class=\"fn\">runAlways</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Batteries/Tactic/Lint/Basic.html#Batteries.Tactic.Lint.NamedLinter\">NamedLinter</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/82fd0cf6aaa1e2580aa17b3b1e5b9140e6e6a5e5/Batteries/Tactic/Lint/Frontend.lean#L65-L65","name":"Batteries.Tactic.Lint.instReprLintVerbosity","line":65,"kind":"instance","docLink":"./Batteries/Tactic/Lint/Frontend.html#Batteries.Tactic.Lint.instReprLintVerbosity","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Tactic/Lint/Frontend.html#Batteries.Tactic.Lint.instReprLintVerbosity\"><span class=\"name\">Batteries</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Lint</span>.<span class=\"name\">instReprLintVerbosity</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Batteries/Tactic/Lint/Frontend.html#Batteries.Tactic.Lint.LintVerbosity\">LintVerbosity</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/82fd0cf6aaa1e2580aa17b3b1e5b9140e6e6a5e5/Batteries/Tactic/Lint/Frontend.lean#L65-L65","name":"Batteries.Tactic.Lint.instDecidableEqLintVerbosity","line":65,"kind":"instance","docLink":"./Batteries/Tactic/Lint/Frontend.html#Batteries.Tactic.Lint.instDecidableEqLintVerbosity","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Tactic/Lint/Frontend.html#Batteries.Tactic.Lint.instDecidableEqLintVerbosity\"><span class=\"name\">Batteries</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Lint</span>.<span class=\"name\">instDecidableEqLintVerbosity</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <a href=\"./Batteries/Tactic/Lint/Frontend.html#Batteries.Tactic.Lint.LintVerbosity\">LintVerbosity</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/82fd0cf6aaa1e2580aa17b3b1e5b9140e6e6a5e5/Batteries/Tactic/Lint/Frontend.lean#L65-L65","name":"Batteries.Tactic.Lint.instInhabitedLintVerbosity","line":65,"kind":"instance","docLink":"./Batteries/Tactic/Lint/Frontend.html#Batteries.Tactic.Lint.instInhabitedLintVerbosity","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Tactic/Lint/Frontend.html#Batteries.Tactic.Lint.instInhabitedLintVerbosity\"><span class=\"name\">Batteries</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Lint</span>.<span class=\"name\">instInhabitedLintVerbosity</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Batteries/Tactic/Lint/Frontend.html#Batteries.Tactic.Lint.LintVerbosity\">LintVerbosity</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/82fd0cf6aaa1e2580aa17b3b1e5b9140e6e6a5e5/Batteries/Tactic/Lint/Frontend.lean#L63-L64","name":"Batteries.Tactic.Lint.LintVerbosity.high","line":63,"kind":"ctor","docLink":"./Batteries/Tactic/Lint/Frontend.html#Batteries.Tactic.Lint.LintVerbosity.high","doc":"`high`: print output of every check. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Tactic/Lint/Frontend.html#Batteries.Tactic.Lint.LintVerbosity.high\"><span class=\"name\">Batteries</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Lint</span>.<span class=\"name\">LintVerbosity</span>.<span class=\"name\">high</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Batteries/Tactic/Lint/Frontend.html#Batteries.Tactic.Lint.LintVerbosity\">LintVerbosity</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/82fd0cf6aaa1e2580aa17b3b1e5b9140e6e6a5e5/Batteries/Tactic/Lint/Frontend.lean#L61-L62","name":"Batteries.Tactic.Lint.LintVerbosity.medium","line":61,"kind":"ctor","docLink":"./Batteries/Tactic/Lint/Frontend.html#Batteries.Tactic.Lint.LintVerbosity.medium","doc":"`medium`: only print failing checks, print confirmation on success. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Tactic/Lint/Frontend.html#Batteries.Tactic.Lint.LintVerbosity.medium\"><span class=\"name\">Batteries</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Lint</span>.<span class=\"name\">LintVerbosity</span>.<span class=\"name\">medium</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Batteries/Tactic/Lint/Frontend.html#Batteries.Tactic.Lint.LintVerbosity\">LintVerbosity</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/82fd0cf6aaa1e2580aa17b3b1e5b9140e6e6a5e5/Batteries/Tactic/Lint/Frontend.lean#L59-L60","name":"Batteries.Tactic.Lint.LintVerbosity.low","line":59,"kind":"ctor","docLink":"./Batteries/Tactic/Lint/Frontend.html#Batteries.Tactic.Lint.LintVerbosity.low","doc":"`low`: only print failing checks, print nothing on success. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Tactic/Lint/Frontend.html#Batteries.Tactic.Lint.LintVerbosity.low\"><span class=\"name\">Batteries</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Lint</span>.<span class=\"name\">LintVerbosity</span>.<span class=\"name\">low</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Batteries/Tactic/Lint/Frontend.html#Batteries.Tactic.Lint.LintVerbosity\">LintVerbosity</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/82fd0cf6aaa1e2580aa17b3b1e5b9140e6e6a5e5/Batteries/Tactic/Lint/Frontend.lean#L57-L65","name":"Batteries.Tactic.Lint.LintVerbosity","line":57,"kind":"inductive","docLink":"./Batteries/Tactic/Lint/Frontend.html#Batteries.Tactic.Lint.LintVerbosity","doc":"Verbosity for the linter output. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Tactic/Lint/Frontend.html#Batteries.Tactic.Lint.LintVerbosity\"><span class=\"name\">Batteries</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Lint</span>.<span class=\"name\">LintVerbosity</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}