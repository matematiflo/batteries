{"name":"Init.GrindInstances.Ring.UInt","instances":[{"typeNames":["UInt8"],"name":"Lean.Grind.instCommRingUInt8","className":"Lean.Grind.CommRing"},{"typeNames":["UInt8","OfNat.ofNat"],"name":"Lean.Grind.instIsCharPUInt8OfNatNat","className":"Lean.Grind.IsCharP"},{"typeNames":["UInt8","Lean.Grind.IntInterval.uint"],"name":"Lean.Grind.instPowUInt8UintOfNatNat","className":"Lean.Grind.ToInt.Pow"},{"typeNames":["UInt16"],"name":"Lean.Grind.instCommRingUInt16","className":"Lean.Grind.CommRing"},{"typeNames":["UInt16","OfNat.ofNat"],"name":"Lean.Grind.instIsCharPUInt16OfNatNat","className":"Lean.Grind.IsCharP"},{"typeNames":["UInt16","Lean.Grind.IntInterval.uint"],"name":"Lean.Grind.instPowUInt16UintOfNatNat","className":"Lean.Grind.ToInt.Pow"},{"typeNames":["UInt32"],"name":"Lean.Grind.instCommRingUInt32","className":"Lean.Grind.CommRing"},{"typeNames":["UInt32","OfNat.ofNat"],"name":"Lean.Grind.instIsCharPUInt32OfNatNat","className":"Lean.Grind.IsCharP"},{"typeNames":["UInt32","Lean.Grind.IntInterval.uint"],"name":"Lean.Grind.instPowUInt32UintOfNatNat","className":"Lean.Grind.ToInt.Pow"},{"typeNames":["UInt64"],"name":"Lean.Grind.instCommRingUInt64","className":"Lean.Grind.CommRing"},{"typeNames":["UInt64","OfNat.ofNat"],"name":"Lean.Grind.instIsCharPUInt64OfNatNat","className":"Lean.Grind.IsCharP"},{"typeNames":["UInt64","Lean.Grind.IntInterval.uint"],"name":"Lean.Grind.instPowUInt64UintOfNatNat","className":"Lean.Grind.ToInt.Pow"},{"typeNames":["USize"],"name":"Lean.Grind.instCommRingUSize","className":"Lean.Grind.CommRing"},{"typeNames":["USize","HPow.hPow"],"name":"Lean.Grind.instIsCharPUSizeHPowNatOfNatNumBits","className":"Lean.Grind.IsCharP"},{"typeNames":["USize","Lean.Grind.IntInterval.uint"],"name":"Lean.Grind.instPowUSizeUintNumBits","className":"Lean.Grind.ToInt.Pow"}],"imports":["Init.Grind.Ring.Basic","Init.GrindInstances.ToInt","Init.Data.UInt.Basic","Init.Data.UInt.Lemmas"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/GrindInstances/Ring/UInt.lean#L350-L351","name":"Lean.Grind.instPowUSizeUintNumBits","line":350,"kind":"instance","docLink":"./Init/GrindInstances/Ring/UInt.html#Lean.Grind.instPowUSizeUintNumBits","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/GrindInstances/Ring/UInt.html#Lean.Grind.instPowUSizeUintNumBits\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">instPowUSizeUintNumBits</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Grind/ToInt.html#Lean.Grind.ToInt.Pow\">ToInt.Pow</a> <a href=\"./Init/Prelude.html#USize\">USize</a> <span class=\"fn\">(<a href=\"./Init/Grind/ToInt.html#Lean.Grind.IntInterval.uint\">IntInterval.uint</a> <a href=\"./Init/Prelude.html#System.Platform.numBits\">System.Platform.numBits</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/GrindInstances/Ring/UInt.lean#L340-L343","name":"Lean.Grind.instIsCharPUSizeHPowNatOfNatNumBits","line":340,"kind":"instance","docLink":"./Init/GrindInstances/Ring/UInt.html#Lean.Grind.instIsCharPUSizeHPowNatOfNatNumBits","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/GrindInstances/Ring/UInt.html#Lean.Grind.instIsCharPUSizeHPowNatOfNatNumBits\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">instIsCharPUSizeHPowNatOfNatNumBits</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Grind/Ring/Basic.html#Lean.Grind.IsCharP\">IsCharP</a> <a href=\"./Init/Prelude.html#USize\">USize</a> (<span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <a href=\"./Init/Prelude.html#System.Platform.numBits\">System.Platform.numBits</a>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/GrindInstances/Ring/UInt.lean#L314-L336","name":"Lean.Grind.instCommRingUSize","line":314,"kind":"instance","docLink":"./Init/GrindInstances/Ring/UInt.html#Lean.Grind.instCommRingUSize","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/GrindInstances/Ring/UInt.html#Lean.Grind.instCommRingUSize\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">instCommRingUSize</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Grind/Ring/Basic.html#Lean.Grind.CommRing\">CommRing</a> <a href=\"./Init/Prelude.html#USize\">USize</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/GrindInstances/Ring/UInt.lean#L311-L311","name":"Lean.Grind.instPowUInt64UintOfNatNat","line":311,"kind":"instance","docLink":"./Init/GrindInstances/Ring/UInt.html#Lean.Grind.instPowUInt64UintOfNatNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/GrindInstances/Ring/UInt.html#Lean.Grind.instPowUInt64UintOfNatNat\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">instPowUInt64UintOfNatNat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Grind/ToInt.html#Lean.Grind.ToInt.Pow\">ToInt.Pow</a> <a href=\"./Init/Prelude.html#UInt64\">UInt64</a> <span class=\"fn\">(<a href=\"./Init/Grind/ToInt.html#Lean.Grind.IntInterval.uint\">IntInterval.uint</a> <span class=\"fn\">64</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/GrindInstances/Ring/UInt.lean#L301-L304","name":"Lean.Grind.instIsCharPUInt64OfNatNat","line":301,"kind":"instance","docLink":"./Init/GrindInstances/Ring/UInt.html#Lean.Grind.instIsCharPUInt64OfNatNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/GrindInstances/Ring/UInt.html#Lean.Grind.instIsCharPUInt64OfNatNat\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">instIsCharPUInt64OfNatNat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Grind/Ring/Basic.html#Lean.Grind.IsCharP\">IsCharP</a> <a href=\"./Init/Prelude.html#UInt64\">UInt64</a> <span class=\"fn\">18446744073709551616</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/GrindInstances/Ring/UInt.lean#L277-L299","name":"Lean.Grind.instCommRingUInt64","line":277,"kind":"instance","docLink":"./Init/GrindInstances/Ring/UInt.html#Lean.Grind.instCommRingUInt64","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/GrindInstances/Ring/UInt.html#Lean.Grind.instCommRingUInt64\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">instCommRingUInt64</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Grind/Ring/Basic.html#Lean.Grind.CommRing\">CommRing</a> <a href=\"./Init/Prelude.html#UInt64\">UInt64</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/GrindInstances/Ring/UInt.lean#L274-L274","name":"Lean.Grind.instPowUInt32UintOfNatNat","line":274,"kind":"instance","docLink":"./Init/GrindInstances/Ring/UInt.html#Lean.Grind.instPowUInt32UintOfNatNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/GrindInstances/Ring/UInt.html#Lean.Grind.instPowUInt32UintOfNatNat\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">instPowUInt32UintOfNatNat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Grind/ToInt.html#Lean.Grind.ToInt.Pow\">ToInt.Pow</a> <a href=\"./Init/Prelude.html#UInt32\">UInt32</a> <span class=\"fn\">(<a href=\"./Init/Grind/ToInt.html#Lean.Grind.IntInterval.uint\">IntInterval.uint</a> <span class=\"fn\">32</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/GrindInstances/Ring/UInt.lean#L264-L267","name":"Lean.Grind.instIsCharPUInt32OfNatNat","line":264,"kind":"instance","docLink":"./Init/GrindInstances/Ring/UInt.html#Lean.Grind.instIsCharPUInt32OfNatNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/GrindInstances/Ring/UInt.html#Lean.Grind.instIsCharPUInt32OfNatNat\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">instIsCharPUInt32OfNatNat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Grind/Ring/Basic.html#Lean.Grind.IsCharP\">IsCharP</a> <a href=\"./Init/Prelude.html#UInt32\">UInt32</a> <span class=\"fn\">4294967296</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/GrindInstances/Ring/UInt.lean#L240-L262","name":"Lean.Grind.instCommRingUInt32","line":240,"kind":"instance","docLink":"./Init/GrindInstances/Ring/UInt.html#Lean.Grind.instCommRingUInt32","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/GrindInstances/Ring/UInt.html#Lean.Grind.instCommRingUInt32\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">instCommRingUInt32</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Grind/Ring/Basic.html#Lean.Grind.CommRing\">CommRing</a> <a href=\"./Init/Prelude.html#UInt32\">UInt32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/GrindInstances/Ring/UInt.lean#L237-L237","name":"Lean.Grind.instPowUInt16UintOfNatNat","line":237,"kind":"instance","docLink":"./Init/GrindInstances/Ring/UInt.html#Lean.Grind.instPowUInt16UintOfNatNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/GrindInstances/Ring/UInt.html#Lean.Grind.instPowUInt16UintOfNatNat\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">instPowUInt16UintOfNatNat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Grind/ToInt.html#Lean.Grind.ToInt.Pow\">ToInt.Pow</a> <a href=\"./Init/Prelude.html#UInt16\">UInt16</a> <span class=\"fn\">(<a href=\"./Init/Grind/ToInt.html#Lean.Grind.IntInterval.uint\">IntInterval.uint</a> <span class=\"fn\">16</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/GrindInstances/Ring/UInt.lean#L227-L230","name":"Lean.Grind.instIsCharPUInt16OfNatNat","line":227,"kind":"instance","docLink":"./Init/GrindInstances/Ring/UInt.html#Lean.Grind.instIsCharPUInt16OfNatNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/GrindInstances/Ring/UInt.html#Lean.Grind.instIsCharPUInt16OfNatNat\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">instIsCharPUInt16OfNatNat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Grind/Ring/Basic.html#Lean.Grind.IsCharP\">IsCharP</a> <a href=\"./Init/Prelude.html#UInt16\">UInt16</a> <span class=\"fn\">65536</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/GrindInstances/Ring/UInt.lean#L203-L225","name":"Lean.Grind.instCommRingUInt16","line":203,"kind":"instance","docLink":"./Init/GrindInstances/Ring/UInt.html#Lean.Grind.instCommRingUInt16","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/GrindInstances/Ring/UInt.html#Lean.Grind.instCommRingUInt16\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">instCommRingUInt16</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Grind/Ring/Basic.html#Lean.Grind.CommRing\">CommRing</a> <a href=\"./Init/Prelude.html#UInt16\">UInt16</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/GrindInstances/Ring/UInt.lean#L200-L200","name":"Lean.Grind.instPowUInt8UintOfNatNat","line":200,"kind":"instance","docLink":"./Init/GrindInstances/Ring/UInt.html#Lean.Grind.instPowUInt8UintOfNatNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/GrindInstances/Ring/UInt.html#Lean.Grind.instPowUInt8UintOfNatNat\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">instPowUInt8UintOfNatNat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Grind/ToInt.html#Lean.Grind.ToInt.Pow\">ToInt.Pow</a> <a href=\"./Init/Prelude.html#UInt8\">UInt8</a> <span class=\"fn\">(<a href=\"./Init/Grind/ToInt.html#Lean.Grind.IntInterval.uint\">IntInterval.uint</a> <span class=\"fn\">8</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/GrindInstances/Ring/UInt.lean#L190-L193","name":"Lean.Grind.instIsCharPUInt8OfNatNat","line":190,"kind":"instance","docLink":"./Init/GrindInstances/Ring/UInt.html#Lean.Grind.instIsCharPUInt8OfNatNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/GrindInstances/Ring/UInt.html#Lean.Grind.instIsCharPUInt8OfNatNat\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">instIsCharPUInt8OfNatNat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Grind/Ring/Basic.html#Lean.Grind.IsCharP\">IsCharP</a> <a href=\"./Init/Prelude.html#UInt8\">UInt8</a> <span class=\"fn\">256</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/GrindInstances/Ring/UInt.lean#L166-L188","name":"Lean.Grind.instCommRingUInt8","line":166,"kind":"instance","docLink":"./Init/GrindInstances/Ring/UInt.html#Lean.Grind.instCommRingUInt8","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/GrindInstances/Ring/UInt.html#Lean.Grind.instCommRingUInt8\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">instCommRingUInt8</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Grind/Ring/Basic.html#Lean.Grind.CommRing\">CommRing</a> <a href=\"./Init/Prelude.html#UInt8\">UInt8</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/GrindInstances/Ring/UInt.lean#L151-L160","name":"USize.intCast_ofNat","line":151,"kind":"theorem","docLink":"./Init/GrindInstances/Ring/UInt.html#USize.intCast_ofNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/GrindInstances/Ring/UInt.html#USize.intCast_ofNat\"><span class=\"name\">USize</span>.<span class=\"name\">intCast_ofNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">x</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/GrindInstances/Ring/UInt.lean#L148-L149","name":"USize.intCast_neg","line":148,"kind":"theorem","docLink":"./Init/GrindInstances/Ring/UInt.html#USize.intCast_neg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/GrindInstances/Ring/UInt.html#USize.intCast_neg\"><span class=\"name\">USize</span>.<span class=\"name\">intCast_neg</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑(<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">x</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">↑<span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/GrindInstances/Ring/UInt.lean#L142-L144","name":"USize.intCast","line":142,"kind":"def","docLink":"./Init/GrindInstances/Ring/UInt.html#USize.intCast","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/GrindInstances/Ring/UInt.html#USize.intCast\"><span class=\"name\">USize</span>.<span class=\"name\">intCast</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Int/Basic.html#IntCast\">IntCast</a> <a href=\"./Init/Prelude.html#USize\">USize</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/GrindInstances/Ring/UInt.lean#L138-L140","name":"USize.natCast","line":138,"kind":"def","docLink":"./Init/GrindInstances/Ring/UInt.html#USize.natCast","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/GrindInstances/Ring/UInt.html#USize.natCast\"><span class=\"name\">USize</span>.<span class=\"name\">natCast</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Cast.html#NatCast\">NatCast</a> <a href=\"./Init/Prelude.html#USize\">USize</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/GrindInstances/Ring/UInt.lean#L124-L132","name":"UInt64.intCast_ofNat","line":124,"kind":"theorem","docLink":"./Init/GrindInstances/Ring/UInt.html#UInt64.intCast_ofNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/GrindInstances/Ring/UInt.html#UInt64.intCast_ofNat\"><span class=\"name\">UInt64</span>.<span class=\"name\">intCast_ofNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">x</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/GrindInstances/Ring/UInt.lean#L121-L122","name":"UInt64.intCast_neg","line":121,"kind":"theorem","docLink":"./Init/GrindInstances/Ring/UInt.html#UInt64.intCast_neg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/GrindInstances/Ring/UInt.html#UInt64.intCast_neg\"><span class=\"name\">UInt64</span>.<span class=\"name\">intCast_neg</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑(<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">x</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">↑<span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/GrindInstances/Ring/UInt.lean#L115-L117","name":"UInt64.intCast","line":115,"kind":"def","docLink":"./Init/GrindInstances/Ring/UInt.html#UInt64.intCast","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/GrindInstances/Ring/UInt.html#UInt64.intCast\"><span class=\"name\">UInt64</span>.<span class=\"name\">intCast</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Int/Basic.html#IntCast\">IntCast</a> <a href=\"./Init/Prelude.html#UInt64\">UInt64</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/GrindInstances/Ring/UInt.lean#L111-L113","name":"UInt64.natCast","line":111,"kind":"def","docLink":"./Init/GrindInstances/Ring/UInt.html#UInt64.natCast","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/GrindInstances/Ring/UInt.html#UInt64.natCast\"><span class=\"name\">UInt64</span>.<span class=\"name\">natCast</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Cast.html#NatCast\">NatCast</a> <a href=\"./Init/Prelude.html#UInt64\">UInt64</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/GrindInstances/Ring/UInt.lean#L108-L109","name":"UInt64.ofNat_mod_size'","line":108,"kind":"theorem","docLink":"./Init/GrindInstances/Ring/UInt.html#UInt64.ofNat_mod_size'","doc":"Variant of `UInt64.ofNat_mod_size` replacing `2 ^ 64` with `18446744073709551616`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/GrindInstances/Ring/UInt.html#UInt64.ofNat_mod_size'\"><span class=\"name\">UInt64</span>.<span class=\"name\">ofNat_mod_size'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt64.ofNat\">ofNat</a> (<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">18446744073709551616</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt64.ofNat\">ofNat</a> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/GrindInstances/Ring/UInt.lean#L94-L102","name":"UInt32.intCast_ofNat","line":94,"kind":"theorem","docLink":"./Init/GrindInstances/Ring/UInt.html#UInt32.intCast_ofNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/GrindInstances/Ring/UInt.html#UInt32.intCast_ofNat\"><span class=\"name\">UInt32</span>.<span class=\"name\">intCast_ofNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">x</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/GrindInstances/Ring/UInt.lean#L91-L92","name":"UInt32.intCast_neg","line":91,"kind":"theorem","docLink":"./Init/GrindInstances/Ring/UInt.html#UInt32.intCast_neg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/GrindInstances/Ring/UInt.html#UInt32.intCast_neg\"><span class=\"name\">UInt32</span>.<span class=\"name\">intCast_neg</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑(<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">x</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">↑<span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/GrindInstances/Ring/UInt.lean#L85-L87","name":"UInt32.intCast","line":85,"kind":"def","docLink":"./Init/GrindInstances/Ring/UInt.html#UInt32.intCast","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/GrindInstances/Ring/UInt.html#UInt32.intCast\"><span class=\"name\">UInt32</span>.<span class=\"name\">intCast</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Int/Basic.html#IntCast\">IntCast</a> <a href=\"./Init/Prelude.html#UInt32\">UInt32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/GrindInstances/Ring/UInt.lean#L81-L83","name":"UInt32.natCast","line":81,"kind":"def","docLink":"./Init/GrindInstances/Ring/UInt.html#UInt32.natCast","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/GrindInstances/Ring/UInt.html#UInt32.natCast\"><span class=\"name\">UInt32</span>.<span class=\"name\">natCast</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Cast.html#NatCast\">NatCast</a> <a href=\"./Init/Prelude.html#UInt32\">UInt32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/GrindInstances/Ring/UInt.lean#L78-L79","name":"UInt32.ofNat_mod_size'","line":78,"kind":"theorem","docLink":"./Init/GrindInstances/Ring/UInt.html#UInt32.ofNat_mod_size'","doc":"Variant of `UInt32.ofNat_mod_size` replacing `2 ^ 32` with `4294967296`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/GrindInstances/Ring/UInt.html#UInt32.ofNat_mod_size'\"><span class=\"name\">UInt32</span>.<span class=\"name\">ofNat_mod_size'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt32.ofNat\">ofNat</a> (<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">4294967296</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt32.ofNat\">ofNat</a> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/GrindInstances/Ring/UInt.lean#L64-L72","name":"UInt16.intCast_ofNat","line":64,"kind":"theorem","docLink":"./Init/GrindInstances/Ring/UInt.html#UInt16.intCast_ofNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/GrindInstances/Ring/UInt.html#UInt16.intCast_ofNat\"><span class=\"name\">UInt16</span>.<span class=\"name\">intCast_ofNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">x</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/GrindInstances/Ring/UInt.lean#L61-L62","name":"UInt16.intCast_neg","line":61,"kind":"theorem","docLink":"./Init/GrindInstances/Ring/UInt.html#UInt16.intCast_neg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/GrindInstances/Ring/UInt.html#UInt16.intCast_neg\"><span class=\"name\">UInt16</span>.<span class=\"name\">intCast_neg</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑(<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">x</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">↑<span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/GrindInstances/Ring/UInt.lean#L55-L57","name":"UInt16.intCast","line":55,"kind":"def","docLink":"./Init/GrindInstances/Ring/UInt.html#UInt16.intCast","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/GrindInstances/Ring/UInt.html#UInt16.intCast\"><span class=\"name\">UInt16</span>.<span class=\"name\">intCast</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Int/Basic.html#IntCast\">IntCast</a> <a href=\"./Init/Prelude.html#UInt16\">UInt16</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/GrindInstances/Ring/UInt.lean#L51-L53","name":"UInt16.natCast","line":51,"kind":"def","docLink":"./Init/GrindInstances/Ring/UInt.html#UInt16.natCast","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/GrindInstances/Ring/UInt.html#UInt16.natCast\"><span class=\"name\">UInt16</span>.<span class=\"name\">natCast</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Cast.html#NatCast\">NatCast</a> <a href=\"./Init/Prelude.html#UInt16\">UInt16</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/GrindInstances/Ring/UInt.lean#L48-L49","name":"UInt16.ofNat_mod_size'","line":48,"kind":"theorem","docLink":"./Init/GrindInstances/Ring/UInt.html#UInt16.ofNat_mod_size'","doc":"Variant of `UInt16.ofNat_mod_size` replacing `2 ^ 16` with `65536`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/GrindInstances/Ring/UInt.html#UInt16.ofNat_mod_size'\"><span class=\"name\">UInt16</span>.<span class=\"name\">ofNat_mod_size'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt16.ofNat\">ofNat</a> (<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">65536</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt16.ofNat\">ofNat</a> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/GrindInstances/Ring/UInt.lean#L34-L42","name":"UInt8.intCast_ofNat","line":34,"kind":"theorem","docLink":"./Init/GrindInstances/Ring/UInt.html#UInt8.intCast_ofNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/GrindInstances/Ring/UInt.html#UInt8.intCast_ofNat\"><span class=\"name\">UInt8</span>.<span class=\"name\">intCast_ofNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">x</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/GrindInstances/Ring/UInt.lean#L31-L32","name":"UInt8.intCast_neg","line":31,"kind":"theorem","docLink":"./Init/GrindInstances/Ring/UInt.html#UInt8.intCast_neg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/GrindInstances/Ring/UInt.html#UInt8.intCast_neg\"><span class=\"name\">UInt8</span>.<span class=\"name\">intCast_neg</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑(<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">x</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">↑<span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/GrindInstances/Ring/UInt.lean#L25-L27","name":"UInt8.intCast","line":25,"kind":"def","docLink":"./Init/GrindInstances/Ring/UInt.html#UInt8.intCast","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/GrindInstances/Ring/UInt.html#UInt8.intCast\"><span class=\"name\">UInt8</span>.<span class=\"name\">intCast</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Int/Basic.html#IntCast\">IntCast</a> <a href=\"./Init/Prelude.html#UInt8\">UInt8</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/GrindInstances/Ring/UInt.lean#L21-L23","name":"UInt8.natCast","line":21,"kind":"def","docLink":"./Init/GrindInstances/Ring/UInt.html#UInt8.natCast","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/GrindInstances/Ring/UInt.html#UInt8.natCast\"><span class=\"name\">UInt8</span>.<span class=\"name\">natCast</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Cast.html#NatCast\">NatCast</a> <a href=\"./Init/Prelude.html#UInt8\">UInt8</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/GrindInstances/Ring/UInt.lean#L18-L19","name":"UInt8.ofNat_mod_size'","line":18,"kind":"theorem","docLink":"./Init/GrindInstances/Ring/UInt.html#UInt8.ofNat_mod_size'","doc":"Variant of `UInt8.ofNat_mod_size` replacing `2 ^ 8` with `256`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/GrindInstances/Ring/UInt.html#UInt8.ofNat_mod_size'\"><span class=\"name\">UInt8</span>.<span class=\"name\">ofNat_mod_size'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt8.ofNat\">ofNat</a> (<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">256</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/BasicAux.html#UInt8.ofNat\">ofNat</a> <span class=\"fn\">x</span></span></div></div>"}]}