{"name":"Lean.Elab.Tactic.Do.ProofMode.MGoal","instances":[{"typeNames":["Lean.Elab.Tactic.Do.ProofMode.MGoal"],"name":"Lean.Elab.Tactic.Do.ProofMode.instInhabitedMGoal","className":"Inhabited"}],"imports":["Std.Do.SPred.DerivedLaws","Std.Tactic.Do.ProofMode","Lean.Meta"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Elab/Tactic/Do/ProofMode/MGoal.lean#L151-L154","name":"Lean.Elab.Tactic.Do.ProofMode.addHypInfo","line":151,"kind":"def","docLink":"./Lean/Elab/Tactic/Do/ProofMode/MGoal.html#Lean.Elab.Tactic.Do.ProofMode.addHypInfo","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/ProofMode/MGoal.html#Lean.Elab.Tactic.Do.ProofMode.addHypInfo\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">ProofMode</span>.<span class=\"name\">addHypInfo</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stx</span> : <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">σs</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hyp</span> : <a href=\"./Lean/Elab/Tactic/Do/ProofMode/MGoal.html#Lean.Elab.Tactic.Do.ProofMode.Hyp\">Hyp</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">isBinder</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Elab/Tactic/Do/ProofMode/MGoal.lean#L143-L149","name":"Lean.Elab.Tactic.Do.ProofMode.addLocalVarInfo","line":143,"kind":"def","docLink":"./Lean/Elab/Tactic/Do/ProofMode/MGoal.html#Lean.Elab.Tactic.Do.ProofMode.addLocalVarInfo","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/ProofMode/MGoal.html#Lean.Elab.Tactic.Do.ProofMode.addLocalVarInfo\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">ProofMode</span>.<span class=\"name\">addLocalVarInfo</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stx</span> : <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">lctx</span> : <a href=\"./Lean/LocalContext.html#Lean.LocalContext\">LocalContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">expr</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">expectedType?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">isBinder</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Elab/Tactic/Do/ProofMode/MGoal.lean#L136-L141","name":"Lean.Elab.Tactic.Do.ProofMode.dropStateList","line":136,"kind":"def","docLink":"./Lean/Elab/Tactic/Do/ProofMode/MGoal.html#Lean.Elab.Tactic.Do.ProofMode.dropStateList","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/ProofMode/MGoal.html#Lean.Elab.Tactic.Do.ProofMode.dropStateList\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">ProofMode</span>.<span class=\"name\">dropStateList</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">σs</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Elab/Tactic/Do/ProofMode/MGoal.lean#L133-L134","name":"Lean.Elab.Tactic.Do.ProofMode.betaPreservingHypNames","line":133,"kind":"def","docLink":"./Lean/Elab/Tactic/Do/ProofMode/MGoal.html#Lean.Elab.Tactic.Do.ProofMode.betaPreservingHypNames","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/ProofMode/MGoal.html#Lean.Elab.Tactic.Do.ProofMode.betaPreservingHypNames\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">ProofMode</span>.<span class=\"name\">betaPreservingHypNames</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">σs' </span><span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">args</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Elab/Tactic/Do/ProofMode/MGoal.lean#L122-L131","name":"Lean.Elab.Tactic.Do.ProofMode.betaRevPreservingHypNames","line":122,"kind":"opaque","docLink":"./Lean/Elab/Tactic/Do/ProofMode/MGoal.html#Lean.Elab.Tactic.Do.ProofMode.betaRevPreservingHypNames","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/ProofMode/MGoal.html#Lean.Elab.Tactic.Do.ProofMode.betaRevPreservingHypNames\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">ProofMode</span>.<span class=\"name\">betaRevPreservingHypNames</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">σs' </span><span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">args</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Elab/Tactic/Do/ProofMode/MGoal.lean#L118-L120","name":"Lean.Elab.Tactic.Do.ProofMode.getFreshHypName","line":118,"kind":"def","docLink":"./Lean/Elab/Tactic/Do/ProofMode/MGoal.html#Lean.Elab.Tactic.Do.ProofMode.getFreshHypName","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/ProofMode/MGoal.html#Lean.Elab.Tactic.Do.ProofMode.getFreshHypName\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">ProofMode</span>.<span class=\"name\">getFreshHypName</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.TSyntax\">TSyntax</a> <span class=\"fn\">`Lean.binderIdent</span> → <span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">CoreM</a> (<a href=\"./Init/Prelude.html#Lean.Name\">Name</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Elab/Tactic/Do/ProofMode/MGoal.lean#L110-L116","name":"Lean.Elab.Tactic.Do.ProofMode.MGoal.checkProof","line":110,"kind":"def","docLink":"./Lean/Elab/Tactic/Do/ProofMode/MGoal.html#Lean.Elab.Tactic.Do.ProofMode.MGoal.checkProof","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/ProofMode/MGoal.html#Lean.Elab.Tactic.Do.ProofMode.MGoal.checkProof\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">ProofMode</span>.<span class=\"name\">MGoal</span>.<span class=\"name\">checkProof</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">goal</span> : <a href=\"./Lean/Elab/Tactic/Do/ProofMode/MGoal.html#Lean.Elab.Tactic.Do.ProofMode.MGoal\">MGoal</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">prf</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">suppressWarning</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Elab/Tactic/Do/ProofMode/MGoal.lean#L96-L108","name":"Lean.Elab.Tactic.Do.ProofMode.MGoal.findHyp?.go","line":96,"kind":"opaque","docLink":"./Lean/Elab/Tactic/Do/ProofMode/MGoal.html#Lean.Elab.Tactic.Do.ProofMode.MGoal.findHyp?.go","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/ProofMode/MGoal.html#Lean.Elab.Tactic.Do.ProofMode.MGoal.findHyp?.go\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">ProofMode</span>.<span class=\"name\">MGoal</span>.<span class=\"name\">findHyp?</span>.<span class=\"name\">go</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">SubExpr.Pos</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> (<a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">SubExpr.Pos</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Elab/Tactic/Do/ProofMode/MGoal.html#Lean.Elab.Tactic.Do.ProofMode.Hyp\">Hyp</a>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Elab/Tactic/Do/ProofMode/MGoal.lean#L94-L108","name":"Lean.Elab.Tactic.Do.ProofMode.MGoal.findHyp?","line":94,"kind":"def","docLink":"./Lean/Elab/Tactic/Do/ProofMode/MGoal.html#Lean.Elab.Tactic.Do.ProofMode.MGoal.findHyp?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/ProofMode/MGoal.html#Lean.Elab.Tactic.Do.ProofMode.MGoal.findHyp?\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">ProofMode</span>.<span class=\"name\">MGoal</span>.<span class=\"name\">findHyp?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">goal</span> : <a href=\"./Lean/Elab/Tactic/Do/ProofMode/MGoal.html#Lean.Elab.Tactic.Do.ProofMode.MGoal\">MGoal</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> (<a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">SubExpr.Pos</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Elab/Tactic/Do/ProofMode/MGoal.html#Lean.Elab.Tactic.Do.ProofMode.Hyp\">Hyp</a>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Elab/Tactic/Do/ProofMode/MGoal.lean#L90-L92","name":"Lean.Elab.Tactic.Do.ProofMode.MGoal.toExpr","line":90,"kind":"def","docLink":"./Lean/Elab/Tactic/Do/ProofMode/MGoal.html#Lean.Elab.Tactic.Do.ProofMode.MGoal.toExpr","doc":"Roundtrips with `parseMGoal?`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/ProofMode/MGoal.html#Lean.Elab.Tactic.Do.ProofMode.MGoal.toExpr\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">ProofMode</span>.<span class=\"name\">MGoal</span>.<span class=\"name\">toExpr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">goal</span> : <a href=\"./Lean/Elab/Tactic/Do/ProofMode/MGoal.html#Lean.Elab.Tactic.Do.ProofMode.MGoal\">MGoal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Elab/Tactic/Do/ProofMode/MGoal.lean#L87-L88","name":"Lean.Elab.Tactic.Do.ProofMode.MGoal.strip","line":87,"kind":"def","docLink":"./Lean/Elab/Tactic/Do/ProofMode/MGoal.html#Lean.Elab.Tactic.Do.ProofMode.MGoal.strip","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/ProofMode/MGoal.html#Lean.Elab.Tactic.Do.ProofMode.MGoal.strip\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">ProofMode</span>.<span class=\"name\">MGoal</span>.<span class=\"name\">strip</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">goal</span> : <a href=\"./Lean/Elab/Tactic/Do/ProofMode/MGoal.html#Lean.Elab.Tactic.Do.ProofMode.MGoal\">MGoal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Elab/Tactic/Do/ProofMode/MGoal.lean#L79-L85","name":"Lean.Elab.Tactic.Do.ProofMode.ensureMGoal","line":79,"kind":"def","docLink":"./Lean/Elab/Tactic/Do/ProofMode/MGoal.html#Lean.Elab.Tactic.Do.ProofMode.ensureMGoal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/ProofMode/MGoal.html#Lean.Elab.Tactic.Do.ProofMode.ensureMGoal\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">ProofMode</span>.<span class=\"name\">ensureMGoal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.TacticM\">TacticM</a> (<a href=\"./Lean/Expr.html#Lean.MVarId\">MVarId</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Elab/Tactic/Do/ProofMode/MGoal.html#Lean.Elab.Tactic.Do.ProofMode.MGoal\">MGoal</a>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Elab/Tactic/Do/ProofMode/MGoal.lean#L74-L76","name":"Lean.Elab.Tactic.Do.ProofMode.parseMGoal?","line":74,"kind":"def","docLink":"./Lean/Elab/Tactic/Do/ProofMode/MGoal.html#Lean.Elab.Tactic.Do.ProofMode.parseMGoal?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/ProofMode/MGoal.html#Lean.Elab.Tactic.Do.ProofMode.parseMGoal?\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">ProofMode</span>.<span class=\"name\">parseMGoal?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">expr</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Elab/Tactic/Do/ProofMode/MGoal.html#Lean.Elab.Tactic.Do.ProofMode.MGoal\">MGoal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Elab/Tactic/Do/ProofMode/MGoal.lean#L72-L72","name":"Lean.Elab.Tactic.Do.ProofMode.instInhabitedMGoal","line":72,"kind":"instance","docLink":"./Lean/Elab/Tactic/Do/ProofMode/MGoal.html#Lean.Elab.Tactic.Do.ProofMode.instInhabitedMGoal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/ProofMode/MGoal.html#Lean.Elab.Tactic.Do.ProofMode.instInhabitedMGoal\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">ProofMode</span>.<span class=\"name\">instInhabitedMGoal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Elab/Tactic/Do/ProofMode/MGoal.html#Lean.Elab.Tactic.Do.ProofMode.MGoal\">MGoal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Elab/Tactic/Do/ProofMode/MGoal.lean#L71-L71","name":"Lean.Elab.Tactic.Do.ProofMode.MGoal.target","line":71,"kind":"def","docLink":"./Lean/Elab/Tactic/Do/ProofMode/MGoal.html#Lean.Elab.Tactic.Do.ProofMode.MGoal.target","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/ProofMode/MGoal.html#Lean.Elab.Tactic.Do.ProofMode.MGoal.target\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">ProofMode</span>.<span class=\"name\">MGoal</span>.<span class=\"name\">target</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Tactic/Do/ProofMode/MGoal.html#Lean.Elab.Tactic.Do.ProofMode.MGoal\">MGoal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Elab/Tactic/Do/ProofMode/MGoal.lean#L70-L70","name":"Lean.Elab.Tactic.Do.ProofMode.MGoal.hyps","line":70,"kind":"def","docLink":"./Lean/Elab/Tactic/Do/ProofMode/MGoal.html#Lean.Elab.Tactic.Do.ProofMode.MGoal.hyps","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/ProofMode/MGoal.html#Lean.Elab.Tactic.Do.ProofMode.MGoal.hyps\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">ProofMode</span>.<span class=\"name\">MGoal</span>.<span class=\"name\">hyps</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Tactic/Do/ProofMode/MGoal.html#Lean.Elab.Tactic.Do.ProofMode.MGoal\">MGoal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Elab/Tactic/Do/ProofMode/MGoal.lean#L69-L69","name":"Lean.Elab.Tactic.Do.ProofMode.MGoal.σs","line":69,"kind":"def","docLink":"./Lean/Elab/Tactic/Do/ProofMode/MGoal.html#Lean.Elab.Tactic.Do.ProofMode.MGoal.σs","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/ProofMode/MGoal.html#Lean.Elab.Tactic.Do.ProofMode.MGoal.σs\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">ProofMode</span>.<span class=\"name\">MGoal</span>.<span class=\"name\">σs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Tactic/Do/ProofMode/MGoal.html#Lean.Elab.Tactic.Do.ProofMode.MGoal\">MGoal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Elab/Tactic/Do/ProofMode/MGoal.lean#L68-L68","name":"Lean.Elab.Tactic.Do.ProofMode.MGoal.mk","line":68,"kind":"ctor","docLink":"./Lean/Elab/Tactic/Do/ProofMode/MGoal.html#Lean.Elab.Tactic.Do.ProofMode.MGoal.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/ProofMode/MGoal.html#Lean.Elab.Tactic.Do.ProofMode.MGoal.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">ProofMode</span>.<span class=\"name\">MGoal</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">σs </span><span class=\"fn\">hyps </span><span class=\"fn\">target</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Tactic/Do/ProofMode/MGoal.html#Lean.Elab.Tactic.Do.ProofMode.MGoal\">MGoal</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Elab/Tactic/Do/ProofMode/MGoal.lean#L68-L72","name":"Lean.Elab.Tactic.Do.ProofMode.MGoal","line":68,"kind":"structure","docLink":"./Lean/Elab/Tactic/Do/ProofMode/MGoal.html#Lean.Elab.Tactic.Do.ProofMode.MGoal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/ProofMode/MGoal.html#Lean.Elab.Tactic.Do.ProofMode.MGoal\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">ProofMode</span>.<span class=\"name\">MGoal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Elab/Tactic/Do/ProofMode/MGoal.lean#L65-L66","name":"Lean.Elab.Tactic.Do.ProofMode.parseAnd?","line":65,"kind":"def","docLink":"./Lean/Elab/Tactic/Do/ProofMode/MGoal.html#Lean.Elab.Tactic.Do.ProofMode.parseAnd?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/ProofMode/MGoal.html#Lean.Elab.Tactic.Do.ProofMode.parseAnd?\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">ProofMode</span>.<span class=\"name\">parseAnd?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> (<a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Elab/Tactic/Do/ProofMode/MGoal.lean#L63-L63","name":"Lean.Elab.Tactic.Do.ProofMode.σs.mkNil","line":63,"kind":"def","docLink":"./Lean/Elab/Tactic/Do/ProofMode/MGoal.html#Lean.Elab.Tactic.Do.ProofMode.σs.mkNil","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/ProofMode/MGoal.html#Lean.Elab.Tactic.Do.ProofMode.σs.mkNil\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">ProofMode</span>.<span class=\"name\">σs</span>.<span class=\"name\">mkNil</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Elab/Tactic/Do/ProofMode/MGoal.lean#L62-L62","name":"Lean.Elab.Tactic.Do.ProofMode.σs.mkType","line":62,"kind":"def","docLink":"./Lean/Elab/Tactic/Do/ProofMode/MGoal.html#Lean.Elab.Tactic.Do.ProofMode.σs.mkType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/ProofMode/MGoal.html#Lean.Elab.Tactic.Do.ProofMode.σs.mkType\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">ProofMode</span>.<span class=\"name\">σs</span>.<span class=\"name\">mkType</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Elab/Tactic/Do/ProofMode/MGoal.lean#L51-L60","name":"Lean.Elab.Tactic.Do.ProofMode.mkAnd","line":51,"kind":"def","docLink":"./Lean/Elab/Tactic/Do/ProofMode/MGoal.html#Lean.Elab.Tactic.Do.ProofMode.mkAnd","doc":"Smart constructor that cancels away empty hypotheses,\nalong with a proof that `lhs ∧ rhs ⊣⊢ₛ result`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/ProofMode/MGoal.html#Lean.Elab.Tactic.Do.ProofMode.mkAnd\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">ProofMode</span>.<span class=\"name\">mkAnd</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">σs </span><span class=\"fn\">lhs </span><span class=\"fn\">rhs</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Elab/Tactic/Do/ProofMode/MGoal.lean#L46-L49","name":"Lean.Elab.Tactic.Do.ProofMode.mkAnd!","line":46,"kind":"def","docLink":"./Lean/Elab/Tactic/Do/ProofMode/MGoal.html#Lean.Elab.Tactic.Do.ProofMode.mkAnd!","doc":"Combine two hypotheses into a conjunction.\nPrecondition: Neither `lhs` nor `rhs` is empty (`parseEmptyHyp?`). "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/ProofMode/MGoal.html#Lean.Elab.Tactic.Do.ProofMode.mkAnd!\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">ProofMode</span>.<span class=\"name\">mkAnd!</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">σs </span><span class=\"fn\">lhs </span><span class=\"fn\">rhs</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Elab/Tactic/Do/ProofMode/MGoal.lean#L43-L44","name":"Lean.Elab.Tactic.Do.ProofMode.pushRightConjunct","line":43,"kind":"def","docLink":"./Lean/Elab/Tactic/Do/ProofMode/MGoal.html#Lean.Elab.Tactic.Do.ProofMode.pushRightConjunct","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/ProofMode/MGoal.html#Lean.Elab.Tactic.Do.ProofMode.pushRightConjunct\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">ProofMode</span>.<span class=\"name\">pushRightConjunct</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pos</span> : <a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">SubExpr.Pos</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">SubExpr.Pos</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Elab/Tactic/Do/ProofMode/MGoal.lean#L40-L41","name":"Lean.Elab.Tactic.Do.ProofMode.pushLeftConjunct","line":40,"kind":"def","docLink":"./Lean/Elab/Tactic/Do/ProofMode/MGoal.html#Lean.Elab.Tactic.Do.ProofMode.pushLeftConjunct","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/ProofMode/MGoal.html#Lean.Elab.Tactic.Do.ProofMode.pushLeftConjunct\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">ProofMode</span>.<span class=\"name\">pushLeftConjunct</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pos</span> : <a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">SubExpr.Pos</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">SubExpr.Pos</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Elab/Tactic/Do/ProofMode/MGoal.lean#L36-L38","name":"Lean.Elab.Tactic.Do.ProofMode.parseEmptyHyp?","line":36,"kind":"def","docLink":"./Lean/Elab/Tactic/Do/ProofMode/MGoal.html#Lean.Elab.Tactic.Do.ProofMode.parseEmptyHyp?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/ProofMode/MGoal.html#Lean.Elab.Tactic.Do.ProofMode.parseEmptyHyp?\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">ProofMode</span>.<span class=\"name\">parseEmptyHyp?</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Elab/Tactic/Do/ProofMode/MGoal.lean#L34-L35","name":"Lean.Elab.Tactic.Do.ProofMode.emptyHyp","line":34,"kind":"def","docLink":"./Lean/Elab/Tactic/Do/ProofMode/MGoal.html#Lean.Elab.Tactic.Do.ProofMode.emptyHyp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/ProofMode/MGoal.html#Lean.Elab.Tactic.Do.ProofMode.emptyHyp\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">ProofMode</span>.<span class=\"name\">emptyHyp</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">σs</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Elab/Tactic/Do/ProofMode/MGoal.lean#L29-L30","name":"Lean.Elab.Tactic.Do.ProofMode.Hyp.toExpr","line":29,"kind":"def","docLink":"./Lean/Elab/Tactic/Do/ProofMode/MGoal.html#Lean.Elab.Tactic.Do.ProofMode.Hyp.toExpr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/ProofMode/MGoal.html#Lean.Elab.Tactic.Do.ProofMode.Hyp.toExpr\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">ProofMode</span>.<span class=\"name\">Hyp</span>.<span class=\"name\">toExpr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hyp</span> : <a href=\"./Lean/Elab/Tactic/Do/ProofMode/MGoal.html#Lean.Elab.Tactic.Do.ProofMode.Hyp\">Hyp</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Elab/Tactic/Do/ProofMode/MGoal.lean#L24-L27","name":"Lean.Elab.Tactic.Do.ProofMode.parseHyp?","line":24,"kind":"def","docLink":"./Lean/Elab/Tactic/Do/ProofMode/MGoal.html#Lean.Elab.Tactic.Do.ProofMode.parseHyp?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/ProofMode/MGoal.html#Lean.Elab.Tactic.Do.ProofMode.parseHyp?\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">ProofMode</span>.<span class=\"name\">parseHyp?</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Elab/Tactic/Do/ProofMode/MGoal.html#Lean.Elab.Tactic.Do.ProofMode.Hyp\">Hyp</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Elab/Tactic/Do/ProofMode/MGoal.lean#L22-L22","name":"Lean.Elab.Tactic.Do.ProofMode.Hyp.p","line":22,"kind":"def","docLink":"./Lean/Elab/Tactic/Do/ProofMode/MGoal.html#Lean.Elab.Tactic.Do.ProofMode.Hyp.p","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/ProofMode/MGoal.html#Lean.Elab.Tactic.Do.ProofMode.Hyp.p\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">ProofMode</span>.<span class=\"name\">Hyp</span>.<span class=\"name\">p</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Tactic/Do/ProofMode/MGoal.html#Lean.Elab.Tactic.Do.ProofMode.Hyp\">Hyp</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Elab/Tactic/Do/ProofMode/MGoal.lean#L21-L21","name":"Lean.Elab.Tactic.Do.ProofMode.Hyp.uniq","line":21,"kind":"def","docLink":"./Lean/Elab/Tactic/Do/ProofMode/MGoal.html#Lean.Elab.Tactic.Do.ProofMode.Hyp.uniq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/ProofMode/MGoal.html#Lean.Elab.Tactic.Do.ProofMode.Hyp.uniq\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">ProofMode</span>.<span class=\"name\">Hyp</span>.<span class=\"name\">uniq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Tactic/Do/ProofMode/MGoal.html#Lean.Elab.Tactic.Do.ProofMode.Hyp\">Hyp</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Elab/Tactic/Do/ProofMode/MGoal.lean#L20-L20","name":"Lean.Elab.Tactic.Do.ProofMode.Hyp.name","line":20,"kind":"def","docLink":"./Lean/Elab/Tactic/Do/ProofMode/MGoal.html#Lean.Elab.Tactic.Do.ProofMode.Hyp.name","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/ProofMode/MGoal.html#Lean.Elab.Tactic.Do.ProofMode.Hyp.name\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">ProofMode</span>.<span class=\"name\">Hyp</span>.<span class=\"name\">name</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Tactic/Do/ProofMode/MGoal.html#Lean.Elab.Tactic.Do.ProofMode.Hyp\">Hyp</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Elab/Tactic/Do/ProofMode/MGoal.lean#L19-L19","name":"Lean.Elab.Tactic.Do.ProofMode.Hyp.mk","line":19,"kind":"ctor","docLink":"./Lean/Elab/Tactic/Do/ProofMode/MGoal.html#Lean.Elab.Tactic.Do.ProofMode.Hyp.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/ProofMode/MGoal.html#Lean.Elab.Tactic.Do.ProofMode.Hyp.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">ProofMode</span>.<span class=\"name\">Hyp</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name </span><span class=\"fn\">uniq</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Tactic/Do/ProofMode/MGoal.html#Lean.Elab.Tactic.Do.ProofMode.Hyp\">Hyp</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Elab/Tactic/Do/ProofMode/MGoal.lean#L19-L22","name":"Lean.Elab.Tactic.Do.ProofMode.Hyp","line":19,"kind":"structure","docLink":"./Lean/Elab/Tactic/Do/ProofMode/MGoal.html#Lean.Elab.Tactic.Do.ProofMode.Hyp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/ProofMode/MGoal.html#Lean.Elab.Tactic.Do.ProofMode.Hyp\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">ProofMode</span>.<span class=\"name\">Hyp</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Elab/Tactic/Do/ProofMode/MGoal.lean#L17-L17","name":"Lean.Elab.Tactic.Do.ProofMode.uniqAnnotation","line":17,"kind":"def","docLink":"./Lean/Elab/Tactic/Do/ProofMode/MGoal.html#Lean.Elab.Tactic.Do.ProofMode.uniqAnnotation","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/ProofMode/MGoal.html#Lean.Elab.Tactic.Do.ProofMode.uniqAnnotation\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">ProofMode</span>.<span class=\"name\">uniqAnnotation</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Elab/Tactic/Do/ProofMode/MGoal.lean#L16-L16","name":"Lean.Elab.Tactic.Do.ProofMode.nameAnnotation","line":16,"kind":"def","docLink":"./Lean/Elab/Tactic/Do/ProofMode/MGoal.html#Lean.Elab.Tactic.Do.ProofMode.nameAnnotation","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/ProofMode/MGoal.html#Lean.Elab.Tactic.Do.ProofMode.nameAnnotation\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">ProofMode</span>.<span class=\"name\">nameAnnotation</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a></div></div>"}]}