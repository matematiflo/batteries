{"name":"Lean.Meta.Tactic.Grind.Arith.Cutsat.ToInt","instances":[],"imports":["Init.Grind.ToIntLemmas","Lean.Meta.Tactic.Grind.Simp","Lean.Meta.Tactic.Grind.Arith.Cutsat.Util"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/ToInt.lean#L358-L376","name":"Lean.Meta.Grind.Arith.Cutsat.assertToIntBounds","line":358,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToInt.html#Lean.Meta.Grind.Arith.Cutsat.assertToIntBounds","doc":"Given `x` whose denotation is `e`, if `e` is of the form `ToInt a`,\nasserts its lower and upper bounds if available\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToInt.html#Lean.Meta.Grind.Arith.Cutsat.assertToIntBounds\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">assertToIntBounds</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Init/Data/Int/Linear.html#Int.Linear.Var\">Var</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.GoalM\">GoalM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/ToInt.lean#L352-L356","name":"Lean.Meta.Grind.Arith.Cutsat.isSupportedType","line":352,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToInt.html#Lean.Meta.Grind.Arith.Cutsat.isSupportedType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToInt.html#Lean.Meta.Grind.Arith.Cutsat.isSupportedType\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">isSupportedType</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">type</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.GoalM\">GoalM</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/ToInt.lean#L349-L350","name":"Lean.Meta.Grind.Arith.Cutsat.toInt?","line":349,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToInt.html#Lean.Meta.Grind.Arith.Cutsat.toInt?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToInt.html#Lean.Meta.Grind.Arith.Cutsat.toInt?\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">toInt?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">type</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.GoalM\">GoalM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> (<a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>))</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/ToInt.lean#L338-L347","name":"Lean.Meta.Grind.Arith.Cutsat.toInt","line":338,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToInt.html#Lean.Meta.Grind.Arith.Cutsat.toInt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToInt.html#Lean.Meta.Grind.Arith.Cutsat.toInt\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">toInt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToInt.html#Lean.Meta.Grind.Arith.Cutsat.ToIntM\">ToIntM</a> (<a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/ToInt.lean#L209-L210","name":"Lean.Meta.Grind.Arith.Cutsat.isToIntTerm","line":209,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToInt.html#Lean.Meta.Grind.Arith.Cutsat.isToIntTerm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToInt.html#Lean.Meta.Grind.Arith.Cutsat.isToIntTerm\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">isToIntTerm</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.GoalM\">GoalM</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/ToInt.lean#L205-L207","name":"Lean.Meta.Grind.Arith.Cutsat.getToIntTermType?","line":205,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToInt.html#Lean.Meta.Grind.Arith.Cutsat.getToIntTermType?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToInt.html#Lean.Meta.Grind.Arith.Cutsat.getToIntTermType?\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">getToIntTermType?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.GoalM\">GoalM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/ToInt.lean#L193-L203","name":"Lean.Meta.Grind.Arith.Cutsat.mkToIntVar","line":193,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToInt.html#Lean.Meta.Grind.Arith.Cutsat.mkToIntVar","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToInt.html#Lean.Meta.Grind.Arith.Cutsat.mkToIntVar\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">mkToIntVar</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToInt.html#Lean.Meta.Grind.Arith.Cutsat.ToIntM\">ToIntM</a> (<a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/ToInt.lean#L187-L189","name":"Lean.Meta.Grind.Arith.Cutsat.ToIntM.run","line":187,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToInt.html#Lean.Meta.Grind.Arith.Cutsat.ToIntM.run","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToInt.html#Lean.Meta.Grind.Arith.Cutsat.ToIntM.run\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">ToIntM</span>.<span class=\"name\">run</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">type</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToInt.html#Lean.Meta.Grind.Arith.Cutsat.ToIntM\">ToIntM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.GoalM\">GoalM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/ToInt.lean#L183-L185","name":"Lean.Meta.Grind.Arith.Cutsat.ToIntM.run?","line":183,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToInt.html#Lean.Meta.Grind.Arith.Cutsat.ToIntM.run?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToInt.html#Lean.Meta.Grind.Arith.Cutsat.ToIntM.run?\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">ToIntM</span>.<span class=\"name\">run?</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">type</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToInt.html#Lean.Meta.Grind.Arith.Cutsat.ToIntM\">ToIntM</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.GoalM\">GoalM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">α</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/ToInt.lean#L180-L181","name":"Lean.Meta.Grind.Arith.Cutsat.getInfo","line":180,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToInt.html#Lean.Meta.Grind.Arith.Cutsat.getInfo","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToInt.html#Lean.Meta.Grind.Arith.Cutsat.getInfo\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">getInfo</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToInt.html#Lean.Meta.Grind.Arith.Cutsat.ToIntM\">ToIntM</a> <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.ToIntInfo\">ToIntInfo</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/ToInt.lean#L178-L178","name":"Lean.Meta.Grind.Arith.Cutsat.ToIntM","line":178,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToInt.html#Lean.Meta.Grind.Arith.Cutsat.ToIntM","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToInt.html#Lean.Meta.Grind.Arith.Cutsat.ToIntM\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">ToIntM</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/ToInt.lean#L176-L176","name":"Lean.Meta.Grind.Arith.Cutsat.ToIntM.Context.info","line":176,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToInt.html#Lean.Meta.Grind.Arith.Cutsat.ToIntM.Context.info","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToInt.html#Lean.Meta.Grind.Arith.Cutsat.ToIntM.Context.info\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">ToIntM</span>.<span class=\"name\">Context</span>.<span class=\"name\">info</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToInt.html#Lean.Meta.Grind.Arith.Cutsat.ToIntM.Context\">Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.ToIntInfo\">ToIntInfo</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/ToInt.lean#L175-L175","name":"Lean.Meta.Grind.Arith.Cutsat.ToIntM.Context.mk","line":175,"kind":"ctor","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToInt.html#Lean.Meta.Grind.Arith.Cutsat.ToIntM.Context.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToInt.html#Lean.Meta.Grind.Arith.Cutsat.ToIntM.Context.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">ToIntM</span>.<span class=\"name\">Context</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">info</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.ToIntInfo\">ToIntInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToInt.html#Lean.Meta.Grind.Arith.Cutsat.ToIntM.Context\">Context</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/ToInt.lean#L175-L176","name":"Lean.Meta.Grind.Arith.Cutsat.ToIntM.Context","line":175,"kind":"structure","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToInt.html#Lean.Meta.Grind.Arith.Cutsat.ToIntM.Context","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToInt.html#Lean.Meta.Grind.Arith.Cutsat.ToIntM.Context\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">ToIntM</span>.<span class=\"name\">Context</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/ToInt.lean#L111-L173","name":"Lean.Meta.Grind.Arith.Cutsat.getToIntInfo?.go?","line":111,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToInt.html#Lean.Meta.Grind.Arith.Cutsat.getToIntInfo?.go?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToInt.html#Lean.Meta.Grind.Arith.Cutsat.getToIntInfo?.go?\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">getToIntInfo?</span>.<span class=\"name\">go?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">type</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.GoalM\">GoalM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.ToIntInfo\">ToIntInfo</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/ToInt.lean#L96-L109","name":"Lean.Meta.Grind.Arith.Cutsat.getToIntInfo?.toIntInterval?","line":96,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToInt.html#Lean.Meta.Grind.Arith.Cutsat.getToIntInfo?.toIntInterval?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToInt.html#Lean.Meta.Grind.Arith.Cutsat.getToIntInfo?.toIntInterval?\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">getToIntInfo?</span>.<span class=\"name\">toIntInterval?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">type </span><span class=\"fn\">rangeExpr</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.GoalM\">GoalM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Grind/ToInt.html#Lean.Grind.IntInterval\">Grind.IntInterval</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/ToInt.lean#L88-L173","name":"Lean.Meta.Grind.Arith.Cutsat.getToIntInfo?","line":88,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToInt.html#Lean.Meta.Grind.Arith.Cutsat.getToIntInfo?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToInt.html#Lean.Meta.Grind.Arith.Cutsat.getToIntInfo?\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">getToIntInfo?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">type</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.GoalM\">GoalM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/ToIntInfo.html#Lean.Meta.Grind.Arith.Cutsat.ToIntInfo\">ToIntInfo</a>)</span></span></div></div>"}]}