{"name":"Lean.Compiler.NeverExtractAttr","instances":[],"imports":["Lean.Environment","Lean.Attributes"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Compiler/NeverExtractAttr.lean#L29-L29","name":"Lean.hasNeverExtractAttribute.visit","line":29,"kind":"opaque","docLink":"./Lean/Compiler/NeverExtractAttr.html#Lean.hasNeverExtractAttribute.visit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/NeverExtractAttr.html#Lean.hasNeverExtractAttribute.visit\"><span class=\"name\">Lean</span>.<span class=\"name\">hasNeverExtractAttribute</span>.<span class=\"name\">visit</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Compiler/NeverExtractAttr.lean#L27-L30","name":"Lean.hasNeverExtractAttribute","line":27,"kind":"def","docLink":"./Lean/Compiler/NeverExtractAttr.html#Lean.hasNeverExtractAttribute","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/NeverExtractAttr.html#Lean.hasNeverExtractAttribute\"><span class=\"name\">Lean</span>.<span class=\"name\">hasNeverExtractAttribute</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Compiler/NeverExtractAttr.lean#L12-L25","name":"Lean.neverExtractAttr","line":12,"kind":"opaque","docLink":"./Lean/Compiler/NeverExtractAttr.html#Lean.neverExtractAttr","doc":"Instructs the compiler that function applications using the tagged declaration should not be\nextracted when they are closed terms, and that common subexpression elimination should not be\nperformed.\n\nOrdinarily, the Lean compiler identifies closed terms (without free variables) and extracts them\nto top-level definitions. This optimization can prevent unnecessary recomputation of values.\n\nPreventing the extraction of closed terms is useful for declarations that have implicit effects\nthat should be repeated.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/NeverExtractAttr.html#Lean.neverExtractAttr\"><span class=\"name\">Lean</span>.<span class=\"name\">neverExtractAttr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Attributes.html#Lean.TagAttribute\">TagAttribute</a></div></div>"}]}