{"name":"Init.GrindInstances.Ring.SInt","instances":[{"typeNames":["Int8"],"name":"Lean.Grind.instCommRingInt8","className":"Lean.Grind.CommRing"},{"typeNames":["Int8","HPow.hPow"],"name":"Lean.Grind.instIsCharPInt8HPowNatOfNat","className":"Lean.Grind.IsCharP"},{"typeNames":["Int8","Lean.Grind.IntInterval.sint"],"name":"Lean.Grind.instPowInt8SintOfNatNat","className":"Lean.Grind.ToInt.Pow"},{"typeNames":["Int16"],"name":"Lean.Grind.instCommRingInt16","className":"Lean.Grind.CommRing"},{"typeNames":["Int16","HPow.hPow"],"name":"Lean.Grind.instIsCharPInt16HPowNatOfNat","className":"Lean.Grind.IsCharP"},{"typeNames":["Int16","Lean.Grind.IntInterval.sint"],"name":"Lean.Grind.instPowInt16SintOfNatNat","className":"Lean.Grind.ToInt.Pow"},{"typeNames":["Int32"],"name":"Lean.Grind.instCommRingInt32","className":"Lean.Grind.CommRing"},{"typeNames":["Int32","HPow.hPow"],"name":"Lean.Grind.instIsCharPInt32HPowNatOfNat","className":"Lean.Grind.IsCharP"},{"typeNames":["Int32","Lean.Grind.IntInterval.sint"],"name":"Lean.Grind.instPowInt32SintOfNatNat","className":"Lean.Grind.ToInt.Pow"},{"typeNames":["Int64"],"name":"Lean.Grind.instCommRingInt64","className":"Lean.Grind.CommRing"},{"typeNames":["Int64","HPow.hPow"],"name":"Lean.Grind.instIsCharPInt64HPowNatOfNat","className":"Lean.Grind.IsCharP"},{"typeNames":["Int64","Lean.Grind.IntInterval.sint"],"name":"Lean.Grind.instPowInt64SintOfNatNat","className":"Lean.Grind.ToInt.Pow"},{"typeNames":["ISize"],"name":"Lean.Grind.instCommRingISize","className":"Lean.Grind.CommRing"},{"typeNames":["ISize","HPow.hPow"],"name":"Lean.Grind.instIsCharPISizeHPowNatOfNatNumBits","className":"Lean.Grind.IsCharP"},{"typeNames":["ISize","Lean.Grind.IntInterval.sint"],"name":"Lean.Grind.instPowISizeSintNumBits","className":"Lean.Grind.ToInt.Pow"}],"imports":["Init.Grind.Ring.Basic","Init.Grind.ToInt","Init.GrindInstances.ToInt","Init.Data.BitVec.Basic","Init.Data.SInt.Basic","Init.Data.SInt.Lemmas"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/GrindInstances/Ring/SInt.lean#L285-L286","name":"Lean.Grind.instPowISizeSintNumBits","line":285,"kind":"instance","docLink":"./Init/GrindInstances/Ring/SInt.html#Lean.Grind.instPowISizeSintNumBits","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/GrindInstances/Ring/SInt.html#Lean.Grind.instPowISizeSintNumBits\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">instPowISizeSintNumBits</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Grind/ToInt.html#Lean.Grind.ToInt.Pow\">ToInt.Pow</a> <a href=\"./Init/Data/SInt/Basic.html#ISize\">ISize</a> <span class=\"fn\">(<a href=\"./Init/Grind/ToInt.html#Lean.Grind.IntInterval.sint\">IntInterval.sint</a> <a href=\"./Init/Prelude.html#System.Platform.numBits\">System.Platform.numBits</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/GrindInstances/Ring/SInt.lean#L273-L278","name":"Lean.Grind.instIsCharPISizeHPowNatOfNatNumBits","line":273,"kind":"instance","docLink":"./Init/GrindInstances/Ring/SInt.html#Lean.Grind.instIsCharPISizeHPowNatOfNatNumBits","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/GrindInstances/Ring/SInt.html#Lean.Grind.instIsCharPISizeHPowNatOfNatNumBits\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">instIsCharPISizeHPowNatOfNatNumBits</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Grind/Ring/Basic.html#Lean.Grind.IsCharP\">IsCharP</a> <a href=\"./Init/Data/SInt/Basic.html#ISize\">ISize</a> (<span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <a href=\"./Init/Prelude.html#System.Platform.numBits\">System.Platform.numBits</a>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/GrindInstances/Ring/SInt.lean#L248-L269","name":"Lean.Grind.instCommRingISize","line":248,"kind":"instance","docLink":"./Init/GrindInstances/Ring/SInt.html#Lean.Grind.instCommRingISize","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/GrindInstances/Ring/SInt.html#Lean.Grind.instCommRingISize\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">instCommRingISize</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Grind/Ring/Basic.html#Lean.Grind.CommRing\">CommRing</a> <a href=\"./Init/Data/SInt/Basic.html#ISize\">ISize</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/GrindInstances/Ring/SInt.lean#L245-L245","name":"Lean.Grind.ISize.intCast_ofNat","line":245,"kind":"theorem","docLink":"./Init/GrindInstances/Ring/SInt.html#Lean.Grind.ISize.intCast_ofNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/GrindInstances/Ring/SInt.html#Lean.Grind.ISize.intCast_ofNat\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">ISize</span>.<span class=\"name\">intCast_ofNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">x</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/GrindInstances/Ring/SInt.lean#L241-L242","name":"Lean.Grind.ISize.intCast_neg","line":241,"kind":"theorem","docLink":"./Init/GrindInstances/Ring/SInt.html#Lean.Grind.ISize.intCast_neg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/GrindInstances/Ring/SInt.html#Lean.Grind.ISize.intCast_neg\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">ISize</span>.<span class=\"name\">intCast_neg</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑(<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">i</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">↑<span class=\"fn\">i</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/GrindInstances/Ring/SInt.lean#L236-L238","name":"Lean.Grind.ISize.intCast","line":236,"kind":"def","docLink":"./Init/GrindInstances/Ring/SInt.html#Lean.Grind.ISize.intCast","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/GrindInstances/Ring/SInt.html#Lean.Grind.ISize.intCast\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">ISize</span>.<span class=\"name\">intCast</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Int/Basic.html#IntCast\">IntCast</a> <a href=\"./Init/Data/SInt/Basic.html#ISize\">ISize</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/GrindInstances/Ring/SInt.lean#L232-L234","name":"Lean.Grind.ISize.natCast","line":232,"kind":"def","docLink":"./Init/GrindInstances/Ring/SInt.html#Lean.Grind.ISize.natCast","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/GrindInstances/Ring/SInt.html#Lean.Grind.ISize.natCast\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">ISize</span>.<span class=\"name\">natCast</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Cast.html#NatCast\">NatCast</a> <a href=\"./Init/Data/SInt/Basic.html#ISize\">ISize</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/GrindInstances/Ring/SInt.lean#L230-L230","name":"Lean.Grind.instPowInt64SintOfNatNat","line":230,"kind":"instance","docLink":"./Init/GrindInstances/Ring/SInt.html#Lean.Grind.instPowInt64SintOfNatNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/GrindInstances/Ring/SInt.html#Lean.Grind.instPowInt64SintOfNatNat\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">instPowInt64SintOfNatNat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Grind/ToInt.html#Lean.Grind.ToInt.Pow\">ToInt.Pow</a> <a href=\"./Init/Data/SInt/Basic.html#Int64\">Int64</a> <span class=\"fn\">(<a href=\"./Init/Grind/ToInt.html#Lean.Grind.IntInterval.sint\">IntInterval.sint</a> <span class=\"fn\">64</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/GrindInstances/Ring/SInt.lean#L218-L223","name":"Lean.Grind.instIsCharPInt64HPowNatOfNat","line":218,"kind":"instance","docLink":"./Init/GrindInstances/Ring/SInt.html#Lean.Grind.instIsCharPInt64HPowNatOfNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/GrindInstances/Ring/SInt.html#Lean.Grind.instIsCharPInt64HPowNatOfNat\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">instIsCharPInt64HPowNatOfNat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Grind/Ring/Basic.html#Lean.Grind.IsCharP\">IsCharP</a> <a href=\"./Init/Data/SInt/Basic.html#Int64\">Int64</a> (<span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">64</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/GrindInstances/Ring/SInt.lean#L195-L216","name":"Lean.Grind.instCommRingInt64","line":195,"kind":"instance","docLink":"./Init/GrindInstances/Ring/SInt.html#Lean.Grind.instCommRingInt64","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/GrindInstances/Ring/SInt.html#Lean.Grind.instCommRingInt64\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">instCommRingInt64</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Grind/Ring/Basic.html#Lean.Grind.CommRing\">CommRing</a> <a href=\"./Init/Data/SInt/Basic.html#Int64\">Int64</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/GrindInstances/Ring/SInt.lean#L192-L192","name":"Lean.Grind.Int64.intCast_ofNat","line":192,"kind":"theorem","docLink":"./Init/GrindInstances/Ring/SInt.html#Lean.Grind.Int64.intCast_ofNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/GrindInstances/Ring/SInt.html#Lean.Grind.Int64.intCast_ofNat\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Int64</span>.<span class=\"name\">intCast_ofNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">x</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/GrindInstances/Ring/SInt.lean#L188-L189","name":"Lean.Grind.Int64.intCast_neg","line":188,"kind":"theorem","docLink":"./Init/GrindInstances/Ring/SInt.html#Lean.Grind.Int64.intCast_neg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/GrindInstances/Ring/SInt.html#Lean.Grind.Int64.intCast_neg\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Int64</span>.<span class=\"name\">intCast_neg</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑(<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">i</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">↑<span class=\"fn\">i</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/GrindInstances/Ring/SInt.lean#L183-L185","name":"Lean.Grind.Int64.intCast","line":183,"kind":"def","docLink":"./Init/GrindInstances/Ring/SInt.html#Lean.Grind.Int64.intCast","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/GrindInstances/Ring/SInt.html#Lean.Grind.Int64.intCast\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Int64</span>.<span class=\"name\">intCast</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Int/Basic.html#IntCast\">IntCast</a> <a href=\"./Init/Data/SInt/Basic.html#Int64\">Int64</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/GrindInstances/Ring/SInt.lean#L179-L181","name":"Lean.Grind.Int64.natCast","line":179,"kind":"def","docLink":"./Init/GrindInstances/Ring/SInt.html#Lean.Grind.Int64.natCast","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/GrindInstances/Ring/SInt.html#Lean.Grind.Int64.natCast\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Int64</span>.<span class=\"name\">natCast</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Cast.html#NatCast\">NatCast</a> <a href=\"./Init/Data/SInt/Basic.html#Int64\">Int64</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/GrindInstances/Ring/SInt.lean#L177-L177","name":"Lean.Grind.instPowInt32SintOfNatNat","line":177,"kind":"instance","docLink":"./Init/GrindInstances/Ring/SInt.html#Lean.Grind.instPowInt32SintOfNatNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/GrindInstances/Ring/SInt.html#Lean.Grind.instPowInt32SintOfNatNat\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">instPowInt32SintOfNatNat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Grind/ToInt.html#Lean.Grind.ToInt.Pow\">ToInt.Pow</a> <a href=\"./Init/Data/SInt/Basic.html#Int32\">Int32</a> <span class=\"fn\">(<a href=\"./Init/Grind/ToInt.html#Lean.Grind.IntInterval.sint\">IntInterval.sint</a> <span class=\"fn\">32</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/GrindInstances/Ring/SInt.lean#L165-L170","name":"Lean.Grind.instIsCharPInt32HPowNatOfNat","line":165,"kind":"instance","docLink":"./Init/GrindInstances/Ring/SInt.html#Lean.Grind.instIsCharPInt32HPowNatOfNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/GrindInstances/Ring/SInt.html#Lean.Grind.instIsCharPInt32HPowNatOfNat\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">instIsCharPInt32HPowNatOfNat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Grind/Ring/Basic.html#Lean.Grind.IsCharP\">IsCharP</a> <a href=\"./Init/Data/SInt/Basic.html#Int32\">Int32</a> (<span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">32</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/GrindInstances/Ring/SInt.lean#L142-L163","name":"Lean.Grind.instCommRingInt32","line":142,"kind":"instance","docLink":"./Init/GrindInstances/Ring/SInt.html#Lean.Grind.instCommRingInt32","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/GrindInstances/Ring/SInt.html#Lean.Grind.instCommRingInt32\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">instCommRingInt32</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Grind/Ring/Basic.html#Lean.Grind.CommRing\">CommRing</a> <a href=\"./Init/Data/SInt/Basic.html#Int32\">Int32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/GrindInstances/Ring/SInt.lean#L139-L139","name":"Lean.Grind.Int32.intCast_ofNat","line":139,"kind":"theorem","docLink":"./Init/GrindInstances/Ring/SInt.html#Lean.Grind.Int32.intCast_ofNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/GrindInstances/Ring/SInt.html#Lean.Grind.Int32.intCast_ofNat\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Int32</span>.<span class=\"name\">intCast_ofNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">x</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/GrindInstances/Ring/SInt.lean#L135-L136","name":"Lean.Grind.Int32.intCast_neg","line":135,"kind":"theorem","docLink":"./Init/GrindInstances/Ring/SInt.html#Lean.Grind.Int32.intCast_neg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/GrindInstances/Ring/SInt.html#Lean.Grind.Int32.intCast_neg\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Int32</span>.<span class=\"name\">intCast_neg</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑(<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">i</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">↑<span class=\"fn\">i</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/GrindInstances/Ring/SInt.lean#L130-L132","name":"Lean.Grind.Int32.intCast","line":130,"kind":"def","docLink":"./Init/GrindInstances/Ring/SInt.html#Lean.Grind.Int32.intCast","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/GrindInstances/Ring/SInt.html#Lean.Grind.Int32.intCast\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Int32</span>.<span class=\"name\">intCast</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Int/Basic.html#IntCast\">IntCast</a> <a href=\"./Init/Data/SInt/Basic.html#Int32\">Int32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/GrindInstances/Ring/SInt.lean#L126-L128","name":"Lean.Grind.Int32.natCast","line":126,"kind":"def","docLink":"./Init/GrindInstances/Ring/SInt.html#Lean.Grind.Int32.natCast","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/GrindInstances/Ring/SInt.html#Lean.Grind.Int32.natCast\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Int32</span>.<span class=\"name\">natCast</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Cast.html#NatCast\">NatCast</a> <a href=\"./Init/Data/SInt/Basic.html#Int32\">Int32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/GrindInstances/Ring/SInt.lean#L124-L124","name":"Lean.Grind.instPowInt16SintOfNatNat","line":124,"kind":"instance","docLink":"./Init/GrindInstances/Ring/SInt.html#Lean.Grind.instPowInt16SintOfNatNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/GrindInstances/Ring/SInt.html#Lean.Grind.instPowInt16SintOfNatNat\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">instPowInt16SintOfNatNat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Grind/ToInt.html#Lean.Grind.ToInt.Pow\">ToInt.Pow</a> <a href=\"./Init/Data/SInt/Basic.html#Int16\">Int16</a> <span class=\"fn\">(<a href=\"./Init/Grind/ToInt.html#Lean.Grind.IntInterval.sint\">IntInterval.sint</a> <span class=\"fn\">16</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/GrindInstances/Ring/SInt.lean#L112-L117","name":"Lean.Grind.instIsCharPInt16HPowNatOfNat","line":112,"kind":"instance","docLink":"./Init/GrindInstances/Ring/SInt.html#Lean.Grind.instIsCharPInt16HPowNatOfNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/GrindInstances/Ring/SInt.html#Lean.Grind.instIsCharPInt16HPowNatOfNat\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">instIsCharPInt16HPowNatOfNat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Grind/Ring/Basic.html#Lean.Grind.IsCharP\">IsCharP</a> <a href=\"./Init/Data/SInt/Basic.html#Int16\">Int16</a> (<span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">16</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/GrindInstances/Ring/SInt.lean#L89-L110","name":"Lean.Grind.instCommRingInt16","line":89,"kind":"instance","docLink":"./Init/GrindInstances/Ring/SInt.html#Lean.Grind.instCommRingInt16","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/GrindInstances/Ring/SInt.html#Lean.Grind.instCommRingInt16\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">instCommRingInt16</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Grind/Ring/Basic.html#Lean.Grind.CommRing\">CommRing</a> <a href=\"./Init/Data/SInt/Basic.html#Int16\">Int16</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/GrindInstances/Ring/SInt.lean#L86-L86","name":"Lean.Grind.Int16.intCast_ofNat","line":86,"kind":"theorem","docLink":"./Init/GrindInstances/Ring/SInt.html#Lean.Grind.Int16.intCast_ofNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/GrindInstances/Ring/SInt.html#Lean.Grind.Int16.intCast_ofNat\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Int16</span>.<span class=\"name\">intCast_ofNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">x</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/GrindInstances/Ring/SInt.lean#L82-L83","name":"Lean.Grind.Int16.intCast_neg","line":82,"kind":"theorem","docLink":"./Init/GrindInstances/Ring/SInt.html#Lean.Grind.Int16.intCast_neg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/GrindInstances/Ring/SInt.html#Lean.Grind.Int16.intCast_neg\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Int16</span>.<span class=\"name\">intCast_neg</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑(<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">i</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">↑<span class=\"fn\">i</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/GrindInstances/Ring/SInt.lean#L77-L79","name":"Lean.Grind.Int16.intCast","line":77,"kind":"def","docLink":"./Init/GrindInstances/Ring/SInt.html#Lean.Grind.Int16.intCast","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/GrindInstances/Ring/SInt.html#Lean.Grind.Int16.intCast\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Int16</span>.<span class=\"name\">intCast</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Int/Basic.html#IntCast\">IntCast</a> <a href=\"./Init/Data/SInt/Basic.html#Int16\">Int16</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/GrindInstances/Ring/SInt.lean#L73-L75","name":"Lean.Grind.Int16.natCast","line":73,"kind":"def","docLink":"./Init/GrindInstances/Ring/SInt.html#Lean.Grind.Int16.natCast","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/GrindInstances/Ring/SInt.html#Lean.Grind.Int16.natCast\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Int16</span>.<span class=\"name\">natCast</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Cast.html#NatCast\">NatCast</a> <a href=\"./Init/Data/SInt/Basic.html#Int16\">Int16</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/GrindInstances/Ring/SInt.lean#L71-L71","name":"Lean.Grind.instPowInt8SintOfNatNat","line":71,"kind":"instance","docLink":"./Init/GrindInstances/Ring/SInt.html#Lean.Grind.instPowInt8SintOfNatNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/GrindInstances/Ring/SInt.html#Lean.Grind.instPowInt8SintOfNatNat\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">instPowInt8SintOfNatNat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Grind/ToInt.html#Lean.Grind.ToInt.Pow\">ToInt.Pow</a> <a href=\"./Init/Data/SInt/Basic.html#Int8\">Int8</a> <span class=\"fn\">(<a href=\"./Init/Grind/ToInt.html#Lean.Grind.IntInterval.sint\">IntInterval.sint</a> <span class=\"fn\">8</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/GrindInstances/Ring/SInt.lean#L59-L64","name":"Lean.Grind.instIsCharPInt8HPowNatOfNat","line":59,"kind":"instance","docLink":"./Init/GrindInstances/Ring/SInt.html#Lean.Grind.instIsCharPInt8HPowNatOfNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/GrindInstances/Ring/SInt.html#Lean.Grind.instIsCharPInt8HPowNatOfNat\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">instIsCharPInt8HPowNatOfNat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Grind/Ring/Basic.html#Lean.Grind.IsCharP\">IsCharP</a> <a href=\"./Init/Data/SInt/Basic.html#Int8\">Int8</a> (<span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">8</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/GrindInstances/Ring/SInt.lean#L36-L57","name":"Lean.Grind.instCommRingInt8","line":36,"kind":"instance","docLink":"./Init/GrindInstances/Ring/SInt.html#Lean.Grind.instCommRingInt8","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/GrindInstances/Ring/SInt.html#Lean.Grind.instCommRingInt8\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">instCommRingInt8</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Grind/Ring/Basic.html#Lean.Grind.CommRing\">CommRing</a> <a href=\"./Init/Data/SInt/Basic.html#Int8\">Int8</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/GrindInstances/Ring/SInt.lean#L33-L33","name":"Lean.Grind.Int8.intCast_ofNat","line":33,"kind":"theorem","docLink":"./Init/GrindInstances/Ring/SInt.html#Lean.Grind.Int8.intCast_ofNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/GrindInstances/Ring/SInt.html#Lean.Grind.Int8.intCast_ofNat\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Int8</span>.<span class=\"name\">intCast_ofNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">x</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/GrindInstances/Ring/SInt.lean#L29-L30","name":"Lean.Grind.Int8.intCast_neg","line":29,"kind":"theorem","docLink":"./Init/GrindInstances/Ring/SInt.html#Lean.Grind.Int8.intCast_neg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/GrindInstances/Ring/SInt.html#Lean.Grind.Int8.intCast_neg\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Int8</span>.<span class=\"name\">intCast_neg</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑(<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">i</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">↑<span class=\"fn\">i</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/GrindInstances/Ring/SInt.lean#L24-L26","name":"Lean.Grind.Int8.intCast","line":24,"kind":"def","docLink":"./Init/GrindInstances/Ring/SInt.html#Lean.Grind.Int8.intCast","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/GrindInstances/Ring/SInt.html#Lean.Grind.Int8.intCast\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Int8</span>.<span class=\"name\">intCast</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Int/Basic.html#IntCast\">IntCast</a> <a href=\"./Init/Data/SInt/Basic.html#Int8\">Int8</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/GrindInstances/Ring/SInt.lean#L20-L22","name":"Lean.Grind.Int8.natCast","line":20,"kind":"def","docLink":"./Init/GrindInstances/Ring/SInt.html#Lean.Grind.Int8.natCast","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/GrindInstances/Ring/SInt.html#Lean.Grind.Int8.natCast\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Int8</span>.<span class=\"name\">natCast</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Cast.html#NatCast\">NatCast</a> <a href=\"./Init/Data/SInt/Basic.html#Int8\">Int8</a></span></div></div>"}]}