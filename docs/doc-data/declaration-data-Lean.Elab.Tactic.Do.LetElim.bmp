{"name":"Lean.Elab.Tactic.Do.LetElim","instances":[{"typeNames":["Lean.Elab.Tactic.Do.Uses"],"name":"Lean.Elab.Tactic.Do.instBEqUses","className":"BEq"},{"typeNames":["Lean.Elab.Tactic.Do.Uses"],"name":"Lean.Elab.Tactic.Do.instOrdUses","className":"Ord"},{"typeNames":["Lean.Elab.Tactic.Do.Uses"],"name":"Lean.Elab.Tactic.Do.instInhabitedUses","className":"Inhabited"},{"typeNames":["Lean.Elab.Tactic.Do.Uses"],"name":"Lean.Elab.Tactic.Do.instAddUses","className":"Add"},{"typeNames":["Lean.Elab.Tactic.Do.FVarUses"],"name":"Lean.Elab.Tactic.Do.instAddFVarUses","className":"Add"},{"typeNames":["Lean.Elab.Tactic.Do.BVarUses"],"name":"Lean.Elab.Tactic.Do.instAddBVarUses","className":"Add"}],"imports":["Lean.Meta"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Elab/Tactic/Do/LetElim.lean#L157-L177","name":"Lean.Elab.Tactic.Do.elimLets","line":157,"kind":"def","docLink":"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.elimLets","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.elimLets\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">elimLets</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mvar</span> : <a href=\"./Lean/Expr.html#Lean.MVarId\">MVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">elimTrivial</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.true\">true</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <a href=\"./Lean/Expr.html#Lean.MVarId\">MVarId</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Elab/Tactic/Do/LetElim.lean#L144-L155","name":"Lean.Elab.Tactic.Do.elimLetsCore","line":144,"kind":"def","docLink":"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.elimLetsCore","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.elimLetsCore\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">elimLetsCore</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">elimTrivial</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.true\">true</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Elab/Tactic/Do/LetElim.lean#L141-L142","name":"Lean.Elab.Tactic.Do.doNotDup","line":141,"kind":"def","docLink":"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.doNotDup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.doNotDup\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">doNotDup</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">u</span> : <a href=\"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.Uses\">Uses</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">rhs</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">elimTrivial</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Elab/Tactic/Do/LetElim.lean#L127-L139","name":"Lean.Elab.Tactic.Do.countUsesLCtx","line":127,"kind":"def","docLink":"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.countUsesLCtx","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.countUsesLCtx\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">countUsesLCtx</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Lean/LocalContext.html#Lean.LocalContext\">LocalContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">targetUses</span> : <a href=\"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.FVarUses\">FVarUses</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <a href=\"./Lean/LocalContext.html#Lean.LocalContext\">LocalContext</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Elab/Tactic/Do/LetElim.lean#L94-L124","name":"Lean.Elab.Tactic.Do.countUses","line":94,"kind":"opaque","docLink":"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.countUses","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.countUses\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">countUses</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">subst</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.FVarId\">FVarId</a></span> := <a href=\"./Init/Prelude.html#List.toArray\">#[</a><a href=\"./Init/Prelude.html#List.toArray\">]</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> (<a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.FVarUses\">FVarUses</a>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Elab/Tactic/Do/LetElim.lean#L83-L92","name":"Lean.Elab.Tactic.Do.countUsesDecl","line":83,"kind":"opaque","docLink":"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.countUsesDecl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.countUsesDecl\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">countUsesDecl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fvarId</span> : <a href=\"./Lean/Expr.html#Lean.FVarId\">FVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ty</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">val?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">bodyUses</span> : <a href=\"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.FVarUses\">FVarUses</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">subst</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.FVarId\">FVarId</a></span> := <a href=\"./Init/Prelude.html#List.toArray\">#[</a><a href=\"./Init/Prelude.html#List.toArray\">]</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> (<a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.FVarUses\">FVarUses</a>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Elab/Tactic/Do/LetElim.lean#L69-L71","name":"Lean.Elab.Tactic.Do.addMData","line":69,"kind":"def","docLink":"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.addMData","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.addMData\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">addMData</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">d</span> : <a href=\"./Lean/Expr.html#Lean.MData\">MData</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Elab/Tactic/Do/LetElim.lean#L67-L67","name":"Lean.Elab.Tactic.Do.over1Of2","line":67,"kind":"def","docLink":"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.over1Of2","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.over1Of2\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">over1Of2</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α₁</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α₂</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α₁</span> → <span class=\"fn\">α₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">α₁</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">α₂</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">β</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Elab/Tactic/Do/LetElim.lean#L64-L65","name":"Lean.Elab.Tactic.Do.instAddBVarUses","line":64,"kind":"instance","docLink":"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.instAddBVarUses","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.instAddBVarUses\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">instAddBVarUses</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">numBVars</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Add\">Add</a> <span class=\"fn\">(<a href=\"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.BVarUses\">BVarUses</a> <span class=\"fn\">numBVars</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Elab/Tactic/Do/LetElim.lean#L59-L62","name":"Lean.Elab.Tactic.Do.BVarUses.add","line":59,"kind":"def","docLink":"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.BVarUses.add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.BVarUses.add\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">BVarUses</span>.<span class=\"name\">add</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">numBVars</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\"><a href=\"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.BVarUses\">BVarUses</a> <span class=\"fn\">numBVars</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.BVarUses\">BVarUses</a> <span class=\"fn\">numBVars</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Elab/Tactic/Do/LetElim.lean#L55-L57","name":"Lean.Elab.Tactic.Do.BVarUses.pop","line":55,"kind":"def","docLink":"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.BVarUses.pop","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.BVarUses.pop\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">BVarUses</span>.<span class=\"name\">pop</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">numBVars</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.BVarUses\">BVarUses</a> (<span class=\"fn\">numBVars</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span> → <a href=\"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.Uses\">Uses</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.BVarUses\">BVarUses</a> <span class=\"fn\">numBVars</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Elab/Tactic/Do/LetElim.lean#L51-L53","name":"Lean.Elab.Tactic.Do.BVarUses.single","line":51,"kind":"def","docLink":"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.BVarUses.single","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.BVarUses.single\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">BVarUses</span>.<span class=\"name\">single</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">numBVars</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Tactics.html#autoParam\">autoParam</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">numBVars</span>) <a href=\"./Lean/Elab/Tactic/Do/LetElim.html#_auto._@.Lean.Elab.Tactic.Do.LetElim._hyg.364\">_auto✝</a></span> → <span class=\"fn\"><a href=\"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.BVarUses\">BVarUses</a> <span class=\"fn\">numBVars</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Elab/Tactic/Do/LetElim.lean#L49-L49","name":"Lean.Elab.Tactic.Do.BVarUses.some","line":49,"kind":"ctor","docLink":"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.BVarUses.some","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.BVarUses.some\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">BVarUses</span>.<span class=\"name\">some</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">uses</span> : <span class=\"fn\"><a href=\"./Init/Data/Vector/Basic.html#Vector\">Vector</a> <a href=\"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.Uses\">Uses</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.BVarUses\">BVarUses</a> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Elab/Tactic/Do/LetElim.lean#L48-L48","name":"Lean.Elab.Tactic.Do.BVarUses.none","line":48,"kind":"ctor","docLink":"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.BVarUses.none","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.BVarUses.none\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">BVarUses</span>.<span class=\"name\">none</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.BVarUses\">BVarUses</a> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Elab/Tactic/Do/LetElim.lean#L47-L49","name":"Lean.Elab.Tactic.Do.BVarUses","line":47,"kind":"inductive","docLink":"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.BVarUses","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.BVarUses\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">BVarUses</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Elab/Tactic/Do/LetElim.lean#L44-L45","name":"Lean.Elab.Tactic.Do.instAddFVarUses","line":44,"kind":"instance","docLink":"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.instAddFVarUses","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.instAddFVarUses\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">instAddFVarUses</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Add\">Add</a> <a href=\"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.FVarUses\">FVarUses</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Elab/Tactic/Do/LetElim.lean#L39-L42","name":"Lean.Elab.Tactic.Do.FVarUses.add","line":39,"kind":"def","docLink":"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.FVarUses.add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.FVarUses.add\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">FVarUses</span>.<span class=\"name\">add</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.FVarUses\">FVarUses</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.FVarUses\">FVarUses</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Elab/Tactic/Do/LetElim.lean#L37-L37","name":"Lean.Elab.Tactic.Do.FVarUses","line":37,"kind":"def","docLink":"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.FVarUses","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.FVarUses\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">FVarUses</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Elab/Tactic/Do/LetElim.lean#L34-L35","name":"Lean.Elab.Tactic.Do.instAddUses","line":34,"kind":"instance","docLink":"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.instAddUses","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.instAddUses\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">instAddUses</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Add\">Add</a> <a href=\"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.Uses\">Uses</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Elab/Tactic/Do/LetElim.lean#L29-L32","name":"Lean.Elab.Tactic.Do.Uses.fromNat","line":29,"kind":"def","docLink":"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.Uses.fromNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.Uses.fromNat\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">Uses</span>.<span class=\"name\">fromNat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">Nat</a> → <a href=\"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.Uses\">Uses</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Elab/Tactic/Do/LetElim.lean#L24-L27","name":"Lean.Elab.Tactic.Do.Uses.toNat","line":24,"kind":"def","docLink":"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.Uses.toNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.Uses.toNat\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">Uses</span>.<span class=\"name\">toNat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.Uses\">Uses</a> → <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Elab/Tactic/Do/LetElim.lean#L19-L22","name":"Lean.Elab.Tactic.Do.Uses.add","line":19,"kind":"def","docLink":"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.Uses.add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.Uses.add\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">Uses</span>.<span class=\"name\">add</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.Uses\">Uses</a> → <a href=\"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.Uses\">Uses</a> → <a href=\"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.Uses\">Uses</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Elab/Tactic/Do/LetElim.lean#L17-L17","name":"Lean.Elab.Tactic.Do.instInhabitedUses","line":17,"kind":"instance","docLink":"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.instInhabitedUses","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.instInhabitedUses\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">instInhabitedUses</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.Uses\">Uses</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Elab/Tactic/Do/LetElim.lean#L17-L17","name":"Lean.Elab.Tactic.Do.instOrdUses","line":17,"kind":"instance","docLink":"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.instOrdUses","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.instOrdUses\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">instOrdUses</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Ord.html#Ord\">Ord</a> <a href=\"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.Uses\">Uses</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Elab/Tactic/Do/LetElim.lean#L17-L17","name":"Lean.Elab.Tactic.Do.instBEqUses","line":17,"kind":"instance","docLink":"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.instBEqUses","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.instBEqUses\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">instBEqUses</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <a href=\"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.Uses\">Uses</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Elab/Tactic/Do/LetElim.lean#L16-L16","name":"Lean.Elab.Tactic.Do.Uses.many","line":16,"kind":"ctor","docLink":"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.Uses.many","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.Uses.many\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">Uses</span>.<span class=\"name\">many</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.Uses\">Uses</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Elab/Tactic/Do/LetElim.lean#L15-L15","name":"Lean.Elab.Tactic.Do.Uses.one","line":15,"kind":"ctor","docLink":"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.Uses.one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.Uses.one\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">Uses</span>.<span class=\"name\">one</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.Uses\">Uses</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Elab/Tactic/Do/LetElim.lean#L14-L14","name":"Lean.Elab.Tactic.Do.Uses.zero","line":14,"kind":"ctor","docLink":"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.Uses.zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.Uses.zero\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">Uses</span>.<span class=\"name\">zero</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.Uses\">Uses</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Elab/Tactic/Do/LetElim.lean#L13-L17","name":"Lean.Elab.Tactic.Do.Uses","line":13,"kind":"inductive","docLink":"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.Uses","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/LetElim.html#Lean.Elab.Tactic.Do.Uses\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">Uses</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}