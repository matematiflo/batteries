{"name":"Lean.Meta.Tactic.Grind.Propagate","instances":[],"imports":["Init.Grind","Lean.Meta.Tactic.Grind.Proof","Lean.Meta.Tactic.Grind.PropagatorAttr","Lean.Meta.Tactic.Grind.Simp","Lean.Meta.Tactic.Grind.Ext","Lean.Meta.Tactic.Grind.Internalize"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Meta/Tactic/Grind/Propagate.lean#L378-L386","name":"Lean.Meta.Grind.propagateBoolNotDown","line":378,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Propagate.html#Lean.Meta.Grind.propagateBoolNotDown","doc":"`Bool` version of `propagateNotDown` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Propagate.html#Lean.Meta.Grind.propagateBoolNotDown\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">propagateBoolNotDown</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.Propagator\">Propagator</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Meta/Tactic/Grind/Propagate.lean#L368-L376","name":"Lean.Meta.Grind.propagateBoolNotUp","line":368,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Propagate.html#Lean.Meta.Grind.propagateBoolNotUp","doc":"`Bool` version of `propagateNotUp` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Propagate.html#Lean.Meta.Grind.propagateBoolNotUp\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">propagateBoolNotUp</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.Propagator\">Propagator</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Meta/Tactic/Grind/Propagate.lean#L360-L366","name":"Lean.Meta.Grind.propagateBoolOrDown","line":360,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Propagate.html#Lean.Meta.Grind.propagateBoolOrDown","doc":"`Bool` version of `propagateOrDown` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Propagate.html#Lean.Meta.Grind.propagateBoolOrDown\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">propagateBoolOrDown</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.Propagator\">Propagator</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Meta/Tactic/Grind/Propagate.lean#L348-L358","name":"Lean.Meta.Grind.propagateBoolOrUp","line":348,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Propagate.html#Lean.Meta.Grind.propagateBoolOrUp","doc":"`Bool` version of `propagateOrUp` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Propagate.html#Lean.Meta.Grind.propagateBoolOrUp\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">propagateBoolOrUp</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.Propagator\">Propagator</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Meta/Tactic/Grind/Propagate.lean#L340-L346","name":"Lean.Meta.Grind.propagateBoolAndDown","line":340,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Propagate.html#Lean.Meta.Grind.propagateBoolAndDown","doc":"`Bool` version of `propagateAndDown` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Propagate.html#Lean.Meta.Grind.propagateBoolAndDown\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">propagateBoolAndDown</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.Propagator\">Propagator</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Meta/Tactic/Grind/Propagate.lean#L328-L338","name":"Lean.Meta.Grind.propagateBoolAndUp","line":328,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Propagate.html#Lean.Meta.Grind.propagateBoolAndUp","doc":"`Bool` version of `propagateAndUp` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Propagate.html#Lean.Meta.Grind.propagateBoolAndUp\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">propagateBoolAndUp</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.Propagator\">Propagator</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Meta/Tactic/Grind/Propagate.lean#L321-L326","name":"Lean.Meta.Grind.propagateDecideUp","line":321,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Propagate.html#Lean.Meta.Grind.propagateDecideUp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Propagate.html#Lean.Meta.Grind.propagateDecideUp\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">propagateDecideUp</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.Propagator\">Propagator</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Meta/Tactic/Grind/Propagate.lean#L312-L319","name":"Lean.Meta.Grind.propagateDecideDown","line":312,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Propagate.html#Lean.Meta.Grind.propagateDecideDown","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Propagate.html#Lean.Meta.Grind.propagateDecideDown\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">propagateDecideDown</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.Propagator\">Propagator</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Meta/Tactic/Grind/Propagate.lean#L286-L310","name":"Lean.Meta.Grind.propagateDIte","line":286,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Propagate.html#Lean.Meta.Grind.propagateDIte","doc":"Propagates `dite` upwards "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Propagate.html#Lean.Meta.Grind.propagateDIte\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">propagateDIte</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.Propagator\">Propagator</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Meta/Tactic/Grind/Propagate.lean#L268-L284","name":"Lean.Meta.Grind.propagateIte","line":268,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Propagate.html#Lean.Meta.Grind.propagateIte","doc":"Propagates `ite` upwards "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Propagate.html#Lean.Meta.Grind.propagateIte\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">propagateIte</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.Propagator\">Propagator</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Meta/Tactic/Grind/Propagate.lean#L238-L242","name":"Lean.Meta.Grind.propagateHEqUp","line":238,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Propagate.html#Lean.Meta.Grind.propagateHEqUp","doc":"Propagates `HEq` upwards "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Propagate.html#Lean.Meta.Grind.propagateHEqUp\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">propagateHEqUp</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.Propagator\">Propagator</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Meta/Tactic/Grind/Propagate.lean#L232-L236","name":"Lean.Meta.Grind.propagateHEqDown","line":232,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Propagate.html#Lean.Meta.Grind.propagateHEqDown","doc":"Propagates `HEq` downwards "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Propagate.html#Lean.Meta.Grind.propagateHEqDown\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">propagateHEqDown</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.Propagator\">Propagator</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Meta/Tactic/Grind/Propagate.lean#L225-L230","name":"Lean.Meta.Grind.propagateEqMatchDown","line":225,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Propagate.html#Lean.Meta.Grind.propagateEqMatchDown","doc":"Propagates `EqMatch` downwards "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Propagate.html#Lean.Meta.Grind.propagateEqMatchDown\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">propagateEqMatchDown</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.Propagator\">Propagator</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Meta/Tactic/Grind/Propagate.lean#L212-L223","name":"Lean.Meta.Grind.propagateBEqDown","line":212,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Propagate.html#Lean.Meta.Grind.propagateBEqDown","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Propagate.html#Lean.Meta.Grind.propagateBEqDown\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">propagateBEqDown</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.Propagator\">Propagator</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Meta/Tactic/Grind/Propagate.lean#L196-L210","name":"Lean.Meta.Grind.propagateBEqUp","line":196,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Propagate.html#Lean.Meta.Grind.propagateBEqUp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Propagate.html#Lean.Meta.Grind.propagateBEqUp\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">propagateBEqUp</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.Propagator\">Propagator</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Meta/Tactic/Grind/Propagate.lean#L152-L175","name":"Lean.Meta.Grind.propagateEqDown","line":152,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Propagate.html#Lean.Meta.Grind.propagateEqDown","doc":"Propagates `Eq` downwards "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Propagate.html#Lean.Meta.Grind.propagateEqDown\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">propagateEqDown</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.Propagator\">Propagator</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Meta/Tactic/Grind/Propagate.lean#L128-L150","name":"Lean.Meta.Grind.propagateEqUp","line":128,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Propagate.html#Lean.Meta.Grind.propagateEqUp","doc":"Propagates `Eq` upwards "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Propagate.html#Lean.Meta.Grind.propagateEqUp\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">propagateEqUp</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.Propagator\">Propagator</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Meta/Tactic/Grind/Propagate.lean#L122-L126","name":"Lean.Meta.Grind.propagateBoolDiseq","line":122,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Propagate.html#Lean.Meta.Grind.propagateBoolDiseq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Propagate.html#Lean.Meta.Grind.propagateBoolDiseq\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">propagateBoolDiseq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.GoalM\">GoalM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Meta/Tactic/Grind/Propagate.lean#L106-L120","name":"Lean.Meta.Grind.propagateNotDown","line":106,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Propagate.html#Lean.Meta.Grind.propagateNotDown","doc":"Propagates truth values downwards for a negation expression `Not a` based on the truth value of `Not a`.\nThis function performs the following:\n\n- If `(Not a) = False`, propagates `a = True`.\n- If `(Not a) = True`, propagates `a = False`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Propagate.html#Lean.Meta.Grind.propagateNotDown\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">propagateNotDown</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.Propagator\">Propagator</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Meta/Tactic/Grind/Propagate.lean#L88-L104","name":"Lean.Meta.Grind.propagateNotUp","line":88,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Propagate.html#Lean.Meta.Grind.propagateNotUp","doc":"Propagates equalities for a negation `Not a` based on the truth value of `a`.\nThis function checks the truth value of `a` and propagates the following equalities:\n\n- If `a = False`, propagates `(Not a) = True`.\n- If `a = True`, propagates `(Not a) = False`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Propagate.html#Lean.Meta.Grind.propagateNotUp\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">propagateNotUp</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.Propagator\">Propagator</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Meta/Tactic/Grind/Propagate.lean#L77-L86","name":"Lean.Meta.Grind.propagateOrDown","line":77,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Propagate.html#Lean.Meta.Grind.propagateOrDown","doc":"Propagates truth values downwards for a disjuction `a ∨ b` when the\nexpression itself is known to be `False`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Propagate.html#Lean.Meta.Grind.propagateOrDown\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">propagateOrDown</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.Propagator\">Propagator</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Meta/Tactic/Grind/Propagate.lean#L52-L75","name":"Lean.Meta.Grind.propagateOrUp","line":52,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Propagate.html#Lean.Meta.Grind.propagateOrUp","doc":"Propagates equalities for a disjunction `a ∨ b` based on the truth values\nof its components `a` and `b`. This function checks the truth value of `a` and `b`,\nand propagates the following equalities:\n\n- If `a = False`, propagates `(a ∨ b) = b`.\n- If `b = False`, propagates `(a ∨ b) = a`.\n- If `a = True`, propagates `(a ∨ b) = True`.\n- If `b = True`, propagates `(a ∨ b) = True`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Propagate.html#Lean.Meta.Grind.propagateOrUp\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">propagateOrUp</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.Propagator\">Propagator</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Meta/Tactic/Grind/Propagate.lean#L41-L50","name":"Lean.Meta.Grind.propagateAndDown","line":41,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Propagate.html#Lean.Meta.Grind.propagateAndDown","doc":"Propagates truth values downwards for a conjunction `a ∧ b` when the\nexpression itself is known to be `True`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Propagate.html#Lean.Meta.Grind.propagateAndDown\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">propagateAndDown</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.Propagator\">Propagator</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Meta/Tactic/Grind/Propagate.lean#L16-L39","name":"Lean.Meta.Grind.propagateAndUp","line":16,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Propagate.html#Lean.Meta.Grind.propagateAndUp","doc":"Propagates equalities for a conjunction `a ∧ b` based on the truth values\nof its components `a` and `b`. This function checks the truth value of `a` and `b`,\nand propagates the following equalities:\n\n- If `a = True`, propagates `(a ∧ b) = b`.\n- If `b = True`, propagates `(a ∧ b) = a`.\n- If `a = False`, propagates `(a ∧ b) = False`.\n- If `b = False`, propagates `(a ∧ b) = False`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Propagate.html#Lean.Meta.Grind.propagateAndUp\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">propagateAndUp</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.Propagator\">Propagator</a></div></div>"}]}