{"name":"Std.Data.Iterators.Producers.Range","instances":[],"imports":["Init.Data.Range.Polymorphic.Iterators"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Std/Data/Iterators/Producers/Range.lean#L17-L24","name":"Std.PRange.iter","line":17,"kind":"def","docLink":"./Std/Data/Iterators/Producers/Range.html#Std.PRange.iter","doc":"Returns an iterator over the given range. This iterator will emit the elements of the range\nin increasing order.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/Iterators/Producers/Range.html#Std.PRange.iter\"><span class=\"name\">Std</span>.<span class=\"name\">PRange</span>.<span class=\"name\">iter</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">sl </span><span class=\"fn\">su</span> : <a href=\"./Init/Data/Range/Polymorphic/PRange.html#Std.PRange.BoundShape\">BoundShape</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/UpwardEnumerable.html#Std.PRange.UpwardEnumerable\">UpwardEnumerable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/PRange.html#Std.PRange.BoundedUpwardEnumerable\">BoundedUpwardEnumerable</a> <span class=\"fn\">sl</span> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/PRange.html#Std.PRange\">PRange</a> <a href=\"./Init/Data/Range/Polymorphic/PRange.html#Std.PRange.RangeShape.mk\">{</a> <span class=\"fn\">lower</span> := <span class=\"fn\">sl</span>, <span class=\"fn\">upper</span> := <span class=\"fn\">su</span> <a href=\"./Init/Data/Range/Polymorphic/PRange.html#Std.PRange.RangeShape.mk\">}</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Iterators/Basic.html#Std.Iterators.Iter\">Iter</a> <span class=\"fn\">α</span></span></div></div>"}]}