{"name":"Lean.Elab.Tactic.Do.VCGen","instances":[{"typeNames":["Eq"],"name":"Lean.Elab.Tactic.Do.instDecidableEqFuel","className":"Decidable"},{"typeNames":["Lean.Meta.Simp.SimpM","Lean.Elab.Tactic.Do.VCGenM"],"name":"Lean.Elab.Tactic.Do.instMonadLiftSimpMVCGenM","className":"MonadLift"}],"imports":["Init.Guard","Std.Do.WP","Std.Do.Triple","Lean.Elab.Tactic.Simp","Lean.Elab.Tactic.Meta","Lean.Elab.Tactic.Do.ProofMode.Basic","Lean.Elab.Tactic.Do.ProofMode.Intro","Lean.Elab.Tactic.Do.ProofMode.Cases","Lean.Elab.Tactic.Do.ProofMode.Specialize","Lean.Elab.Tactic.Do.ProofMode.Pure","Lean.Elab.Tactic.Do.LetElim","Lean.Elab.Tactic.Do.Spec","Lean.Elab.Tactic.Do.Attr","Lean.Elab.Tactic.Do.Syntax"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Elab/Tactic/Do/VCGen.lean#L391-L401","name":"Lean.Elab.Tactic.Do.elabMVCGen","line":391,"kind":"def","docLink":"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.elabMVCGen","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.elabMVCGen\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">elabMVCGen</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.Tactic\">Tactic</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Elab/Tactic/Do/VCGen.lean#L386-L389","name":"Lean.Elab.Tactic.Do.elabMVCGenNoTrivial","line":386,"kind":"def","docLink":"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.elabMVCGenNoTrivial","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.elabMVCGenNoTrivial\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">elabMVCGenNoTrivial</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.Tactic\">Tactic</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Elab/Tactic/Do/VCGen.lean#L380-L384","name":"Lean.Elab.Tactic.Do.elabMVCGenStep","line":380,"kind":"def","docLink":"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.elabMVCGenStep","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.elabMVCGenStep\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">elabMVCGenStep</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.Tactic\">Tactic</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Elab/Tactic/Do/VCGen.lean#L371-L378","name":"Lean.Elab.Tactic.Do.genVCs","line":371,"kind":"def","docLink":"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.genVCs","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.genVCs\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">genVCs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">goal</span> : <a href=\"./Lean/Expr.html#Lean.MVarId\">MVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.Context\">Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fuel</span> : <a href=\"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.Fuel\">Fuel</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.TacticM\">TacticM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.MVarId\">MVarId</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Elab/Tactic/Do/VCGen.lean#L284-L369","name":"Lean.Elab.Tactic.Do.step.onWPApp","line":284,"kind":"opaque","docLink":"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.step.onWPApp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.step.onWPApp\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">step</span>.<span class=\"name\">onWPApp</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.Context\">Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">goal</span> : <a href=\"./Lean/Elab/Tactic/Do/ProofMode/MGoal.html#Lean.Elab.Tactic.Do.ProofMode.MGoal\">ProofMode.MGoal</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.VCGenM\">VCGenM</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Elab/Tactic/Do/VCGen.lean#L279-L282","name":"Lean.Elab.Tactic.Do.step.onLambda","line":279,"kind":"opaque","docLink":"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.step.onLambda","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.step.onLambda\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">step</span>.<span class=\"name\">onLambda</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.Context\">Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">goal</span> : <a href=\"./Lean/Elab/Tactic/Do/ProofMode/MGoal.html#Lean.Elab.Tactic.Do.ProofMode.MGoal\">ProofMode.MGoal</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.VCGenM\">VCGenM</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Elab/Tactic/Do/VCGen.lean#L274-L277","name":"Lean.Elab.Tactic.Do.step.onImp","line":274,"kind":"opaque","docLink":"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.step.onImp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.step.onImp\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">step</span>.<span class=\"name\">onImp</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.Context\">Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">goal</span> : <a href=\"./Lean/Elab/Tactic/Do/ProofMode/MGoal.html#Lean.Elab.Tactic.Do.ProofMode.MGoal\">ProofMode.MGoal</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.VCGenM\">VCGenM</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Elab/Tactic/Do/VCGen.lean#L259-L272","name":"Lean.Elab.Tactic.Do.step.onGoal","line":259,"kind":"opaque","docLink":"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.step.onGoal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.step.onGoal\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">step</span>.<span class=\"name\">onGoal</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.Context\">Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">goal</span> : <a href=\"./Lean/Elab/Tactic/Do/ProofMode/MGoal.html#Lean.Elab.Tactic.Do.ProofMode.MGoal\">ProofMode.MGoal</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.VCGenM\">VCGenM</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Elab/Tactic/Do/VCGen.lean#L243-L257","name":"Lean.Elab.Tactic.Do.step.assignMVars","line":243,"kind":"opaque","docLink":"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.step.assignMVars","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.step.assignMVars\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">step</span>.<span class=\"name\">assignMVars</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.Context\">Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mvars</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Expr.html#Lean.MVarId\">MVarId</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.VCGenM\">VCGenM</a> <a href=\"./Init/Prelude.html#PUnit\">PUnit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Elab/Tactic/Do/VCGen.lean#L232-L241","name":"Lean.Elab.Tactic.Do.step.tryGoal","line":232,"kind":"opaque","docLink":"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.step.tryGoal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.step.tryGoal\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">step</span>.<span class=\"name\">tryGoal</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.Context\">Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">goal</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.VCGenM\">VCGenM</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Elab/Tactic/Do/VCGen.lean#L228-L230","name":"Lean.Elab.Tactic.Do.step.onFail","line":228,"kind":"def","docLink":"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.step.onFail","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.step.onFail\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">step</span>.<span class=\"name\">onFail</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">goal</span> : <a href=\"./Lean/Elab/Tactic/Do/ProofMode/MGoal.html#Lean.Elab.Tactic.Do.ProofMode.MGoal\">ProofMode.MGoal</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.VCGenM\">VCGenM</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Elab/Tactic/Do/VCGen.lean#L223-L369","name":"Lean.Elab.Tactic.Do.step","line":223,"kind":"def","docLink":"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.step","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.step\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">step</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.Context\">Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fuel</span> : <a href=\"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.Fuel\">Fuel</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">goal</span> : <a href=\"./Lean/Elab/Tactic/Do/ProofMode/MGoal.html#Lean.Elab.Tactic.Do.ProofMode.MGoal\">ProofMode.MGoal</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> (<a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.MVarId\">MVarId</a></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Elab/Tactic/Do/VCGen.lean#L188-L193","name":"Lean.Elab.Tactic.Do.withSharing","line":188,"kind":"def","docLink":"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.withSharing","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.withSharing\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">withSharing</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">type </span><span class=\"fn\">val</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <span class=\"fn\"><a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a> → <span class=\"fn\"><span class=\"fn\">(<a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a> → <span class=\"fn\"><a href=\"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.VCGenM\">VCGenM</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span>)</span> → <span class=\"fn\"><a href=\"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.VCGenM\">VCGenM</a> <span class=\"fn\">α</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">kind</span> : <a href=\"./Lean/LocalContext.html#Lean.LocalDeclKind\">LocalDeclKind</a> := <a href=\"./Lean/LocalContext.html#Lean.LocalDeclKind.default\">LocalDeclKind.default</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.VCGenM\">VCGenM</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Elab/Tactic/Do/VCGen.lean#L174-L186","name":"Lean.Elab.Tactic.Do.isDuplicable","line":174,"kind":"def","docLink":"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.isDuplicable","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.isDuplicable\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">isDuplicable</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Elab/Tactic/Do/VCGen.lean#L104-L105","name":"Lean.Elab.Tactic.Do.mvcgen","line":104,"kind":"def","docLink":"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.mvcgen","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.mvcgen\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">mvcgen</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Elab/Tactic/Do/VCGen.lean#L101-L102","name":"Lean.Elab.Tactic.Do.mvcgen_no_trivial","line":101,"kind":"def","docLink":"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.mvcgen_no_trivial","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.mvcgen_no_trivial\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">mvcgen_no_trivial</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Elab/Tactic/Do/VCGen.lean#L98-L99","name":"Lean.Elab.Tactic.Do.mvcgen_step","line":98,"kind":"def","docLink":"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.mvcgen_step","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.mvcgen_step\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">mvcgen_step</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Elab/Tactic/Do/VCGen.lean#L95-L96","name":"Lean.Elab.Tactic.Do.instMonadLiftSimpMVCGenM","line":95,"kind":"instance","docLink":"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.instMonadLiftSimpMVCGenM","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.instMonadLiftSimpMVCGenM\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">instMonadLiftSimpMVCGenM</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#MonadLift\">MonadLift</a> <a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.SimpM\">Meta.SimpM</a> <a href=\"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.VCGenM\">VCGenM</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Elab/Tactic/Do/VCGen.lean#L87-L93","name":"Lean.Elab.Tactic.Do.liftSimpM","line":87,"kind":"def","docLink":"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.liftSimpM","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.liftSimpM\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">liftSimpM</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.SimpM\">Meta.SimpM</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.VCGenM\">VCGenM</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Elab/Tactic/Do/VCGen.lean#L84-L85","name":"Lean.Elab.Tactic.Do.addSubGoalAsVC","line":84,"kind":"def","docLink":"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.addSubGoalAsVC","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.addSubGoalAsVC\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">addSubGoalAsVC</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">goal</span> : <a href=\"./Lean/Expr.html#Lean.MVarId\">MVarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.VCGenM\">VCGenM</a> <a href=\"./Init/Prelude.html#PUnit\">PUnit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Elab/Tactic/Do/VCGen.lean#L79-L82","name":"Lean.Elab.Tactic.Do.emitVC","line":79,"kind":"def","docLink":"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.emitVC","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.emitVC\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">emitVC</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">subGoal</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.VCGenM\">VCGenM</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Elab/Tactic/Do/VCGen.lean#L73-L77","name":"Lean.Elab.Tactic.Do.ifOutOfFuel","line":73,"kind":"def","docLink":"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.ifOutOfFuel","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.ifOutOfFuel\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">ifOutOfFuel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">k</span> : <span class=\"fn\"><a href=\"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.VCGenM\">VCGenM</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.VCGenM\">VCGenM</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Elab/Tactic/Do/VCGen.lean#L66-L71","name":"Lean.Elab.Tactic.Do.burnOne","line":66,"kind":"def","docLink":"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.burnOne","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.burnOne\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">burnOne</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.VCGenM\">VCGenM</a> <a href=\"./Init/Prelude.html#PUnit\">PUnit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Elab/Tactic/Do/VCGen.lean#L64-L64","name":"Lean.Elab.Tactic.Do.VCGenM","line":64,"kind":"def","docLink":"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.VCGenM","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.VCGenM\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">VCGenM</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Elab/Tactic/Do/VCGen.lean#L62-L62","name":"Lean.Elab.Tactic.Do.State.vcs","line":62,"kind":"def","docLink":"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.State.vcs","doc":"The verification conditions that have been generated so far.\nIncludes `Type`-valued goals arising from instantiation of specifications.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.State.vcs\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">State</span>.<span class=\"name\">vcs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.State\">State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.MVarId\">MVarId</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Elab/Tactic/Do/VCGen.lean#L57-L57","name":"Lean.Elab.Tactic.Do.State.simpState","line":57,"kind":"def","docLink":"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.State.simpState","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.State.simpState\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">State</span>.<span class=\"name\">simpState</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.State\">State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.State\">Meta.Simp.State</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Elab/Tactic/Do/VCGen.lean#L56-L56","name":"Lean.Elab.Tactic.Do.State.fuel","line":56,"kind":"def","docLink":"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.State.fuel","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.State.fuel\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">State</span>.<span class=\"name\">fuel</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.State\">State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.Fuel\">Fuel</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Elab/Tactic/Do/VCGen.lean#L55-L55","name":"Lean.Elab.Tactic.Do.State.mk","line":55,"kind":"ctor","docLink":"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.State.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.State.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">State</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fuel</span> : <a href=\"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.Fuel\">Fuel</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">simpState</span> : <a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.State\">Meta.Simp.State</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">vcs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.MVarId\">MVarId</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.State\">State</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Elab/Tactic/Do/VCGen.lean#L55-L62","name":"Lean.Elab.Tactic.Do.State","line":55,"kind":"structure","docLink":"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.State","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.State\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">State</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Elab/Tactic/Do/VCGen.lean#L53-L53","name":"Lean.Elab.Tactic.Do.Context.simprocs","line":53,"kind":"def","docLink":"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.Context.simprocs","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.Context.simprocs\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">Context</span>.<span class=\"name\">simprocs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.Context\">Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Simp/Simproc.html#Lean.Meta.Simp.SimprocsArray\">Meta.Simp.SimprocsArray</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Elab/Tactic/Do/VCGen.lean#L52-L52","name":"Lean.Elab.Tactic.Do.Context.simpCtx","line":52,"kind":"def","docLink":"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.Context.simpCtx","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.Context.simpCtx\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">Context</span>.<span class=\"name\">simpCtx</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.Context\">Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.Context\">Meta.Simp.Context</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Elab/Tactic/Do/VCGen.lean#L51-L51","name":"Lean.Elab.Tactic.Do.Context.specThms","line":51,"kind":"def","docLink":"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.Context.specThms","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.Context.specThms\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">Context</span>.<span class=\"name\">specThms</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.Context\">Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.SpecTheorems\">SpecAttr.SpecTheorems</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Elab/Tactic/Do/VCGen.lean#L50-L50","name":"Lean.Elab.Tactic.Do.Context.config","line":50,"kind":"def","docLink":"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.Context.config","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.Context.config\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">Context</span>.<span class=\"name\">config</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.Context\">Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.Config\">Config</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Elab/Tactic/Do/VCGen.lean#L49-L49","name":"Lean.Elab.Tactic.Do.Context.mk","line":49,"kind":"ctor","docLink":"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.Context.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.Context.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">Context</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">config</span> : <a href=\"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.Config\">Config</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">specThms</span> : <a href=\"./Lean/Elab/Tactic/Do/Attr.html#Lean.Elab.Tactic.Do.SpecAttr.SpecTheorems\">SpecAttr.SpecTheorems</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">simpCtx</span> : <a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.Context\">Meta.Simp.Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">simprocs</span> : <a href=\"./Lean/Meta/Tactic/Simp/Simproc.html#Lean.Meta.Simp.SimprocsArray\">Meta.Simp.SimprocsArray</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.Context\">Context</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Elab/Tactic/Do/VCGen.lean#L49-L53","name":"Lean.Elab.Tactic.Do.Context","line":49,"kind":"structure","docLink":"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.Context","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.Context\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">Context</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Elab/Tactic/Do/VCGen.lean#L47-L47","name":"Lean.Elab.Tactic.Do.elabConfig","line":47,"kind":"def","docLink":"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.elabConfig","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.elabConfig\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">elabConfig</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a> → <span class=\"fn\"><a href=\"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.TacticM\">TacticM</a> <a href=\"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.Config\">Config</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Elab/Tactic/Do/VCGen.lean#L45-L45","name":"Lean.Elab.Tactic.Do.Config.noLetElim","line":45,"kind":"def","docLink":"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.Config.noLetElim","doc":"If true, do not substitute away let-declarations that are used at most once before starting\nVC generation.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.Config.noLetElim\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">Config</span>.<span class=\"name\">noLetElim</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.Config\">Config</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Elab/Tactic/Do/VCGen.lean#L40-L40","name":"Lean.Elab.Tactic.Do.Config.mk","line":40,"kind":"ctor","docLink":"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.Config.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.Config.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">Config</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">noLetElim</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.Config\">Config</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Elab/Tactic/Do/VCGen.lean#L40-L45","name":"Lean.Elab.Tactic.Do.Config","line":40,"kind":"structure","docLink":"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.Config","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.Config\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">Config</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Elab/Tactic/Do/VCGen.lean#L38-L38","name":"Lean.Elab.Tactic.Do.instDecidableEqFuel","line":38,"kind":"instance","docLink":"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.instDecidableEqFuel","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.instDecidableEqFuel\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">instDecidableEqFuel</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <a href=\"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.Fuel\">Fuel</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Elab/Tactic/Do/VCGen.lean#L37-L37","name":"Lean.Elab.Tactic.Do.Fuel.unlimited","line":37,"kind":"ctor","docLink":"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.Fuel.unlimited","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.Fuel.unlimited\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">Fuel</span>.<span class=\"name\">unlimited</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.Fuel\">Fuel</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Elab/Tactic/Do/VCGen.lean#L36-L36","name":"Lean.Elab.Tactic.Do.Fuel.limited","line":36,"kind":"ctor","docLink":"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.Fuel.limited","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.Fuel.limited\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">Fuel</span>.<span class=\"name\">limited</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.Fuel\">Fuel</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Elab/Tactic/Do/VCGen.lean#L35-L38","name":"Lean.Elab.Tactic.Do.Fuel","line":35,"kind":"inductive","docLink":"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.Fuel","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.Fuel\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">Fuel</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Lean/Elab/Tactic/Do/VCGen.lean#L29-L33","name":"Lean.Elab.Tactic.Do.mvcgen.warning","line":29,"kind":"opaque","docLink":"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.mvcgen.warning","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/Do/VCGen.html#Lean.Elab.Tactic.Do.mvcgen.warning\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Do</span>.<span class=\"name\">mvcgen</span>.<span class=\"name\">warning</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Options.html#Lean.Option\">Lean.Option</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"}]}