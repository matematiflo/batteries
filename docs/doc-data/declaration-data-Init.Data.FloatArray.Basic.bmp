{"name":"Init.Data.FloatArray.Basic","instances":[{"typeNames":["FloatArray"],"name":"FloatArray.instBEq","className":"BEq"},{"typeNames":["FloatArray"],"name":"FloatArray.instInhabited","className":"Inhabited"},{"typeNames":["FloatArray"],"name":"FloatArray.instEmptyCollection","className":"EmptyCollection"},{"typeNames":["FloatArray","Nat","Float"],"name":"FloatArray.instGetElemNatFloatLtSize","className":"GetElem"},{"typeNames":["FloatArray","USize","Float"],"name":"FloatArray.instGetElemUSizeFloatLtNatToNatSize","className":"GetElem"},{"typeNames":["FloatArray","Float"],"name":"FloatArray.instForInFloat","className":"ForIn"},{"typeNames":["FloatArray"],"name":"instToStringFloatArray","className":"ToString"}],"imports":["Init.Data.Array.Basic","Init.Data.Float","Init.Data.Option.Basic","Init.Ext","Init.Data.Array.DecidableEq"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/Data/FloatArray/Basic.lean#L191-L191","name":"instToStringFloatArray","line":191,"kind":"instance","docLink":"./Init/Data/FloatArray/Basic.html#instToStringFloatArray","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/FloatArray/Basic.html#instToStringFloatArray\"><span class=\"name\">instToStringFloatArray</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString\">ToString</a> <a href=\"./Init/Data/FloatArray/Basic.html#FloatArray\">FloatArray</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/Data/FloatArray/Basic.lean#L185-L187","name":"List.toFloatArray.loop","line":185,"kind":"def","docLink":"./Init/Data/FloatArray/Basic.html#List.toFloatArray.loop","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/FloatArray/Basic.html#List.toFloatArray.loop\"><span class=\"name\">List</span>.<span class=\"name\">toFloatArray</span>.<span class=\"name\">loop</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Data/Float.html#Float\">Float</a></span> → <span class=\"fn\"><a href=\"./Init/Data/FloatArray/Basic.html#FloatArray\">FloatArray</a> → <a href=\"./Init/Data/FloatArray/Basic.html#FloatArray\">FloatArray</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/Data/FloatArray/Basic.lean#L181-L188","name":"List.toFloatArray","line":181,"kind":"def","docLink":"./Init/Data/FloatArray/Basic.html#List.toFloatArray","doc":"Converts a list of floats into a `FloatArray`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/FloatArray/Basic.html#List.toFloatArray\"><span class=\"name\">List</span>.<span class=\"name\">toFloatArray</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ds</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Data/Float.html#Float\">Float</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/FloatArray/Basic.html#FloatArray\">FloatArray</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/Data/FloatArray/Basic.lean#L175-L177","name":"FloatArray.foldl","line":175,"kind":"def","docLink":"./Init/Data/FloatArray/Basic.html#FloatArray.foldl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/FloatArray/Basic.html#FloatArray.foldl\"><span class=\"name\">FloatArray</span>.<span class=\"name\">foldl</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">β</span> → <span class=\"fn\"><a href=\"./Init/Data/Float.html#Float\">Float</a> → <span class=\"fn\">β</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">init</span> : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">as</span> : <a href=\"./Init/Data/FloatArray/Basic.html#FloatArray\">FloatArray</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">start</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a> := <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stop</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a> := <span class=\"fn\"><span class=\"fn\">as</span>.<a href=\"./Init/Data/FloatArray/Basic.html#FloatArray.size\">size</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">β</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/Data/FloatArray/Basic.lean#L161-L168","name":"FloatArray.foldlM.loop","line":161,"kind":"def","docLink":"./Init/Data/FloatArray/Basic.html#FloatArray.foldlM.loop","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/FloatArray/Basic.html#FloatArray.foldlM.loop\"><span class=\"name\">FloatArray</span>.<span class=\"name\">foldlM</span>.<span class=\"name\">loop</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> v → <a href=\"./foundational_types.html\">Type</a> w</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">β</span> → <span class=\"fn\"><a href=\"./Init/Data/Float.html#Float\">Float</a> → <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">β</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">as</span> : <a href=\"./Init/Data/FloatArray/Basic.html#FloatArray\">FloatArray</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stop</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">stop</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">as</span>.<a href=\"./Init/Data/FloatArray/Basic.html#FloatArray.size\">size</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i </span><span class=\"fn\">j</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">β</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/Data/FloatArray/Basic.lean#L157-L173","name":"FloatArray.foldlM","line":157,"kind":"def","docLink":"./Init/Data/FloatArray/Basic.html#FloatArray.foldlM","doc":"Reference implementation for `foldlM` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/FloatArray/Basic.html#FloatArray.foldlM\"><span class=\"name\">FloatArray</span>.<span class=\"name\">foldlM</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> v → <a href=\"./foundational_types.html\">Type</a> w</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">β</span> → <span class=\"fn\"><a href=\"./Init/Data/Float.html#Float\">Float</a> → <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">β</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">init</span> : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">as</span> : <a href=\"./Init/Data/FloatArray/Basic.html#FloatArray\">FloatArray</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">start</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a> := <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stop</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a> := <span class=\"fn\"><span class=\"fn\">as</span>.<a href=\"./Init/Data/FloatArray/Basic.html#FloatArray.size\">size</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">β</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/Data/FloatArray/Basic.lean#L144-L148","name":"FloatArray.foldlMUnsafe.fold","line":144,"kind":"def","docLink":"./Init/Data/FloatArray/Basic.html#FloatArray.foldlMUnsafe.fold","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">unsafe def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/FloatArray/Basic.html#FloatArray.foldlMUnsafe.fold\"><span class=\"name\">FloatArray</span>.<span class=\"name\">foldlMUnsafe</span>.<span class=\"name\">fold</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> v → <a href=\"./foundational_types.html\">Type</a> w</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">β</span> → <span class=\"fn\"><a href=\"./Init/Data/Float.html#Float\">Float</a> → <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">β</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">as</span> : <a href=\"./Init/Data/FloatArray/Basic.html#FloatArray\">FloatArray</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i </span><span class=\"fn\">stop</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">β</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/Data/FloatArray/Basic.lean#L140-L155","name":"FloatArray.foldlMUnsafe","line":140,"kind":"def","docLink":"./Init/Data/FloatArray/Basic.html#FloatArray.foldlMUnsafe","doc":"See comment at `forInUnsafe` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">unsafe def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/FloatArray/Basic.html#FloatArray.foldlMUnsafe\"><span class=\"name\">FloatArray</span>.<span class=\"name\">foldlMUnsafe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> v → <a href=\"./foundational_types.html\">Type</a> w</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">β</span> → <span class=\"fn\"><a href=\"./Init/Data/Float.html#Float\">Float</a> → <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">β</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">init</span> : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">as</span> : <a href=\"./Init/Data/FloatArray/Basic.html#FloatArray\">FloatArray</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">start</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a> := <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stop</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a> := <span class=\"fn\"><span class=\"fn\">as</span>.<a href=\"./Init/Data/FloatArray/Basic.html#FloatArray.size\">size</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">β</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/Data/FloatArray/Basic.lean#L137-L138","name":"FloatArray.instForInFloat","line":137,"kind":"instance","docLink":"./Init/Data/FloatArray/Basic.html#FloatArray.instForInFloat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/FloatArray/Basic.html#FloatArray.instForInFloat\"><span class=\"name\">FloatArray</span>.<span class=\"name\">instForInFloat</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u_1 → <a href=\"./foundational_types.html\">Type</a> u_2</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#ForIn\">ForIn</a> <span class=\"fn\">m</span> <a href=\"./Init/Data/FloatArray/Basic.html#FloatArray\">FloatArray</a> <a href=\"./Init/Data/Float.html#Float\">Float</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/Data/FloatArray/Basic.lean#L125-L134","name":"FloatArray.forIn.loop","line":125,"kind":"def","docLink":"./Init/Data/FloatArray/Basic.html#FloatArray.forIn.loop","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/FloatArray/Basic.html#FloatArray.forIn.loop\"><span class=\"name\">FloatArray</span>.<span class=\"name\">forIn</span>.<span class=\"name\">loop</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> v → <a href=\"./foundational_types.html\">Type</a> w</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">as</span> : <a href=\"./Init/Data/FloatArray/Basic.html#FloatArray\">FloatArray</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Init/Data/Float.html#Float\">Float</a> → <span class=\"fn\"><span class=\"fn\">β</span> → <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">(<a href=\"./Init/Core.html#ForInStep\">ForInStep</a> <span class=\"fn\">β</span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">as</span>.<a href=\"./Init/Data/FloatArray/Basic.html#FloatArray.size\">size</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">β</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/Data/FloatArray/Basic.lean#L122-L135","name":"FloatArray.forIn","line":122,"kind":"def","docLink":"./Init/Data/FloatArray/Basic.html#FloatArray.forIn","doc":"Reference implementation for `forIn` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/FloatArray/Basic.html#FloatArray.forIn\"><span class=\"name\">FloatArray</span>.<span class=\"name\">forIn</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> v → <a href=\"./foundational_types.html\">Type</a> w</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">as</span> : <a href=\"./Init/Data/FloatArray/Basic.html#FloatArray\">FloatArray</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Init/Data/Float.html#Float\">Float</a> → <span class=\"fn\"><span class=\"fn\">β</span> → <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">(<a href=\"./Init/Core.html#ForInStep\">ForInStep</a> <span class=\"fn\">β</span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">β</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/Data/FloatArray/Basic.lean#L112-L119","name":"FloatArray.forInUnsafe.loop","line":112,"kind":"def","docLink":"./Init/Data/FloatArray/Basic.html#FloatArray.forInUnsafe.loop","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">unsafe def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/FloatArray/Basic.html#FloatArray.forInUnsafe.loop\"><span class=\"name\">FloatArray</span>.<span class=\"name\">forInUnsafe</span>.<span class=\"name\">loop</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> v → <a href=\"./foundational_types.html\">Type</a> w</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">as</span> : <a href=\"./Init/Data/FloatArray/Basic.html#FloatArray\">FloatArray</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Init/Data/Float.html#Float\">Float</a> → <span class=\"fn\"><span class=\"fn\">β</span> → <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">(<a href=\"./Init/Core.html#ForInStep\">ForInStep</a> <span class=\"fn\">β</span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">sz </span><span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">β</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/Data/FloatArray/Basic.lean#L105-L120","name":"FloatArray.forInUnsafe","line":105,"kind":"def","docLink":"./Init/Data/FloatArray/Basic.html#FloatArray.forInUnsafe","doc":"We claim this unsafe implementation is correct because an array cannot have more than `usizeSz` elements in our runtime.\nThis is similar to the `Array` version.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">unsafe def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/FloatArray/Basic.html#FloatArray.forInUnsafe\"><span class=\"name\">FloatArray</span>.<span class=\"name\">forInUnsafe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> v → <a href=\"./foundational_types.html\">Type</a> w</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">as</span> : <a href=\"./Init/Data/FloatArray/Basic.html#FloatArray\">FloatArray</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Init/Data/Float.html#Float\">Float</a> → <span class=\"fn\"><span class=\"fn\">β</span> → <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">(<a href=\"./Init/Core.html#ForInStep\">ForInStep</a> <span class=\"fn\">β</span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">β</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/Data/FloatArray/Basic.lean#L98-L102","name":"FloatArray.toList.loop","line":98,"kind":"opaque","docLink":"./Init/Data/FloatArray/Basic.html#FloatArray.toList.loop","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/FloatArray/Basic.html#FloatArray.toList.loop\"><span class=\"name\">FloatArray</span>.<span class=\"name\">toList</span>.<span class=\"name\">loop</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ds</span> : <a href=\"./Init/Data/FloatArray/Basic.html#FloatArray\">FloatArray</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Data/Float.html#Float\">Float</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Data/Float.html#Float\">Float</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/Data/FloatArray/Basic.lean#L97-L103","name":"FloatArray.toList","line":97,"kind":"def","docLink":"./Init/Data/FloatArray/Basic.html#FloatArray.toList","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/FloatArray/Basic.html#FloatArray.toList\"><span class=\"name\">FloatArray</span>.<span class=\"name\">toList</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ds</span> : <a href=\"./Init/Data/FloatArray/Basic.html#FloatArray\">FloatArray</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Data/Float.html#Float\">Float</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/Data/FloatArray/Basic.lean#L94-L95","name":"FloatArray.isEmpty","line":94,"kind":"def","docLink":"./Init/Data/FloatArray/Basic.html#FloatArray.isEmpty","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/FloatArray/Basic.html#FloatArray.isEmpty\"><span class=\"name\">FloatArray</span>.<span class=\"name\">isEmpty</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Init/Data/FloatArray/Basic.html#FloatArray\">FloatArray</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/Data/FloatArray/Basic.lean#L90-L92","name":"FloatArray.set!","line":90,"kind":"def","docLink":"./Init/Data/FloatArray/Basic.html#FloatArray.set!","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/FloatArray/Basic.html#FloatArray.set!\"><span class=\"name\">FloatArray</span>.<span class=\"name\">set!</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/FloatArray/Basic.html#FloatArray\">FloatArray</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">Nat</a> → <span class=\"fn\"><a href=\"./Init/Data/Float.html#Float\">Float</a> → <a href=\"./Init/Data/FloatArray/Basic.html#FloatArray\">FloatArray</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/Data/FloatArray/Basic.lean#L86-L88","name":"FloatArray.set","line":86,"kind":"def","docLink":"./Init/Data/FloatArray/Basic.html#FloatArray.set","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/FloatArray/Basic.html#FloatArray.set\"><span class=\"name\">FloatArray</span>.<span class=\"name\">set</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ds</span> : <a href=\"./Init/Data/FloatArray/Basic.html#FloatArray\">FloatArray</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Float.html#Float\">Float</a> → <span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Init/Tactics.html#autoParam\">autoParam</a> (<span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">ds</span>.<a href=\"./Init/Data/FloatArray/Basic.html#FloatArray.size\">size</a></span>) <a href=\"./Init/Data/FloatArray/Basic.html#_auto._@.Init.Data.FloatArray.Basic._hyg.769\">_auto✝</a></span>) → <a href=\"./Init/Data/FloatArray/Basic.html#FloatArray\">FloatArray</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/Data/FloatArray/Basic.lean#L82-L84","name":"FloatArray.uset","line":82,"kind":"def","docLink":"./Init/Data/FloatArray/Basic.html#FloatArray.uset","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/FloatArray/Basic.html#FloatArray.uset\"><span class=\"name\">FloatArray</span>.<span class=\"name\">uset</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Data/FloatArray/Basic.html#FloatArray\">FloatArray</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Float.html#Float\">Float</a> → <span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Init/Tactics.html#autoParam\">autoParam</a> (<span class=\"fn\"><span class=\"fn\">i</span>.<a href=\"./Init/Data/UInt/BasicAux.html#USize.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/FloatArray/Basic.html#FloatArray.size\">size</a></span>) <a href=\"./Init/Data/FloatArray/Basic.html#_auto._@.Init.Data.FloatArray.Basic._hyg.683\">_auto✝</a></span>) → <a href=\"./Init/Data/FloatArray/Basic.html#FloatArray\">FloatArray</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/Data/FloatArray/Basic.lean#L79-L80","name":"FloatArray.instGetElemUSizeFloatLtNatToNatSize","line":79,"kind":"instance","docLink":"./Init/Data/FloatArray/Basic.html#FloatArray.instGetElemUSizeFloatLtNatToNatSize","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/FloatArray/Basic.html#FloatArray.instGetElemUSizeFloatLtNatToNatSize\"><span class=\"name\">FloatArray</span>.<span class=\"name\">instGetElemUSizeFloatLtNatToNatSize</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/GetElem.html#GetElem\">GetElem</a> <a href=\"./Init/Data/FloatArray/Basic.html#FloatArray\">FloatArray</a> <a href=\"./Init/Prelude.html#USize\">USize</a> <a href=\"./Init/Data/Float.html#Float\">Float</a> <span class=\"fn\">fun (<span class=\"fn\">xs</span> : <a href=\"./Init/Data/FloatArray/Basic.html#FloatArray\">FloatArray</a>) (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>) =&gt; <span class=\"fn\"><span class=\"fn\">i</span>.<a href=\"./Init/Data/UInt/BasicAux.html#USize.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">xs</span>.<a href=\"./Init/Data/FloatArray/Basic.html#FloatArray.size\">size</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/Data/FloatArray/Basic.lean#L76-L77","name":"FloatArray.instGetElemNatFloatLtSize","line":76,"kind":"instance","docLink":"./Init/Data/FloatArray/Basic.html#FloatArray.instGetElemNatFloatLtSize","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/FloatArray/Basic.html#FloatArray.instGetElemNatFloatLtSize\"><span class=\"name\">FloatArray</span>.<span class=\"name\">instGetElemNatFloatLtSize</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/GetElem.html#GetElem\">GetElem</a> <a href=\"./Init/Data/FloatArray/Basic.html#FloatArray\">FloatArray</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a> <a href=\"./Init/Data/Float.html#Float\">Float</a> <span class=\"fn\">fun (<span class=\"fn\">xs</span> : <a href=\"./Init/Data/FloatArray/Basic.html#FloatArray\">FloatArray</a>) (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>) =&gt; <span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">xs</span>.<a href=\"./Init/Data/FloatArray/Basic.html#FloatArray.size\">size</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/Data/FloatArray/Basic.lean#L70-L74","name":"FloatArray.get?","line":70,"kind":"def","docLink":"./Init/Data/FloatArray/Basic.html#FloatArray.get?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/FloatArray/Basic.html#FloatArray.get?\"><span class=\"name\">FloatArray</span>.<span class=\"name\">get?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ds</span> : <a href=\"./Init/Data/FloatArray/Basic.html#FloatArray\">FloatArray</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Data/Float.html#Float\">Float</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/Data/FloatArray/Basic.lean#L66-L68","name":"FloatArray.get!","line":66,"kind":"def","docLink":"./Init/Data/FloatArray/Basic.html#FloatArray.get!","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/FloatArray/Basic.html#FloatArray.get!\"><span class=\"name\">FloatArray</span>.<span class=\"name\">get!</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/FloatArray/Basic.html#FloatArray\">FloatArray</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">Nat</a> → <a href=\"./Init/Data/Float.html#Float\">Float</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/Data/FloatArray/Basic.lean#L62-L64","name":"FloatArray.get","line":62,"kind":"def","docLink":"./Init/Data/FloatArray/Basic.html#FloatArray.get","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/FloatArray/Basic.html#FloatArray.get\"><span class=\"name\">FloatArray</span>.<span class=\"name\">get</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ds</span> : <a href=\"./Init/Data/FloatArray/Basic.html#FloatArray\">FloatArray</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">ds</span>.<a href=\"./Init/Data/FloatArray/Basic.html#FloatArray.size\">size</a></span> := by get_elem_tactic)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Float.html#Float\">Float</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/Data/FloatArray/Basic.lean#L58-L60","name":"FloatArray.uget","line":58,"kind":"def","docLink":"./Init/Data/FloatArray/Basic.html#FloatArray.uget","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/FloatArray/Basic.html#FloatArray.uget\"><span class=\"name\">FloatArray</span>.<span class=\"name\">uget</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Data/FloatArray/Basic.html#FloatArray\">FloatArray</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">i</span>.<a href=\"./Init/Data/UInt/BasicAux.html#USize.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/FloatArray/Basic.html#FloatArray.size\">size</a></span> → <a href=\"./Init/Data/Float.html#Float\">Float</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/Data/FloatArray/Basic.lean#L54-L56","name":"FloatArray.usize","line":54,"kind":"def","docLink":"./Init/Data/FloatArray/Basic.html#FloatArray.usize","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/FloatArray/Basic.html#FloatArray.usize\"><span class=\"name\">FloatArray</span>.<span class=\"name\">usize</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Data/FloatArray/Basic.html#FloatArray\">FloatArray</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#USize\">USize</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/Data/FloatArray/Basic.lean#L50-L52","name":"FloatArray.size","line":50,"kind":"def","docLink":"./Init/Data/FloatArray/Basic.html#FloatArray.size","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/FloatArray/Basic.html#FloatArray.size\"><span class=\"name\">FloatArray</span>.<span class=\"name\">size</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/FloatArray/Basic.html#FloatArray\">FloatArray</a> → <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/Data/FloatArray/Basic.lean#L46-L48","name":"FloatArray.push","line":46,"kind":"def","docLink":"./Init/Data/FloatArray/Basic.html#FloatArray.push","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/FloatArray/Basic.html#FloatArray.push\"><span class=\"name\">FloatArray</span>.<span class=\"name\">push</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/FloatArray/Basic.html#FloatArray\">FloatArray</a> → <span class=\"fn\"><a href=\"./Init/Data/Float.html#Float\">Float</a> → <a href=\"./Init/Data/FloatArray/Basic.html#FloatArray\">FloatArray</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/Data/FloatArray/Basic.lean#L43-L44","name":"FloatArray.instEmptyCollection","line":43,"kind":"instance","docLink":"./Init/Data/FloatArray/Basic.html#FloatArray.instEmptyCollection","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/FloatArray/Basic.html#FloatArray.instEmptyCollection\"><span class=\"name\">FloatArray</span>.<span class=\"name\">instEmptyCollection</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#EmptyCollection\">EmptyCollection</a> <a href=\"./Init/Data/FloatArray/Basic.html#FloatArray\">FloatArray</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/Data/FloatArray/Basic.lean#L40-L41","name":"FloatArray.instInhabited","line":40,"kind":"instance","docLink":"./Init/Data/FloatArray/Basic.html#FloatArray.instInhabited","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/FloatArray/Basic.html#FloatArray.instInhabited\"><span class=\"name\">FloatArray</span>.<span class=\"name\">instInhabited</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Init/Data/FloatArray/Basic.html#FloatArray\">FloatArray</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/Data/FloatArray/Basic.lean#L37-L38","name":"FloatArray.empty","line":37,"kind":"def","docLink":"./Init/Data/FloatArray/Basic.html#FloatArray.empty","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/FloatArray/Basic.html#FloatArray.empty\"><span class=\"name\">FloatArray</span>.<span class=\"name\">empty</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/FloatArray/Basic.html#FloatArray\">FloatArray</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/Data/FloatArray/Basic.lean#L34-L35","name":"FloatArray.mkEmpty","line":34,"kind":"def","docLink":"./Init/Data/FloatArray/Basic.html#FloatArray.mkEmpty","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/FloatArray/Basic.html#FloatArray.mkEmpty\"><span class=\"name\">FloatArray</span>.<span class=\"name\">mkEmpty</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/FloatArray/Basic.html#FloatArray\">FloatArray</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/Data/FloatArray/Basic.lean#L30-L32","name":"FloatArray.emptyWithCapacity","line":30,"kind":"def","docLink":"./Init/Data/FloatArray/Basic.html#FloatArray.emptyWithCapacity","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/FloatArray/Basic.html#FloatArray.emptyWithCapacity\"><span class=\"name\">FloatArray</span>.<span class=\"name\">emptyWithCapacity</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/FloatArray/Basic.html#FloatArray\">FloatArray</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/Data/FloatArray/Basic.lean#L28-L28","name":"FloatArray.ext","line":28,"kind":"theorem","docLink":"./Init/Data/FloatArray/Basic.html#FloatArray.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/FloatArray/Basic.html#FloatArray.ext\"><span class=\"name\">FloatArray</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Init/Data/FloatArray/Basic.html#FloatArray\">FloatArray</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">data</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Data/FloatArray/Basic.html#FloatArray.data\">data</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Init/Data/FloatArray/Basic.html#FloatArray.data\">data</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/Data/FloatArray/Basic.lean#L28-L28","name":"FloatArray.ext_iff","line":28,"kind":"theorem","docLink":"./Init/Data/FloatArray/Basic.html#FloatArray.ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/FloatArray/Basic.html#FloatArray.ext_iff\"><span class=\"name\">FloatArray</span>.<span class=\"name\">ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Init/Data/FloatArray/Basic.html#FloatArray\">FloatArray</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Data/FloatArray/Basic.html#FloatArray.data\">data</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Init/Data/FloatArray/Basic.html#FloatArray.data\">data</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/Data/FloatArray/Basic.lean#L26-L26","name":"FloatArray.instBEq","line":26,"kind":"instance","docLink":"./Init/Data/FloatArray/Basic.html#FloatArray.instBEq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/FloatArray/Basic.html#FloatArray.instBEq\"><span class=\"name\">FloatArray</span>.<span class=\"name\">instBEq</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <a href=\"./Init/Data/FloatArray/Basic.html#FloatArray\">FloatArray</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/Data/FloatArray/Basic.lean#L19-L19","name":"FloatArray.data","line":19,"kind":"def","docLink":"./Init/Data/FloatArray/Basic.html#FloatArray.data","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/FloatArray/Basic.html#FloatArray.data\"><span class=\"name\">FloatArray</span>.<span class=\"name\">data</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Init/Data/FloatArray/Basic.html#FloatArray\">FloatArray</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Data/Float.html#Float\">Float</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/Data/FloatArray/Basic.lean#L18-L18","name":"FloatArray.mk","line":18,"kind":"ctor","docLink":"./Init/Data/FloatArray/Basic.html#FloatArray.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/FloatArray/Basic.html#FloatArray.mk\"><span class=\"name\">FloatArray</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">data</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Data/Float.html#Float\">Float</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/FloatArray/Basic.html#FloatArray\">FloatArray</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/7c3ca70e29a0806bd4bfc62eae7084bbaf1a303d/src/Init/Data/FloatArray/Basic.lean#L18-L19","name":"FloatArray","line":18,"kind":"structure","docLink":"./Init/Data/FloatArray/Basic.html#FloatArray","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/FloatArray/Basic.html#FloatArray\"><span class=\"name\">FloatArray</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}